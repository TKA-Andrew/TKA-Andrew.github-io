"use strict";(self.webpackChunkmy_personal_website=self.webpackChunkmy_personal_website||[]).push([[396],{6396:(ai,we,d)=>{d.r(we),d.d(we,{TechnicalNotesModule:()=>oi});var k=d(8583),b=d(9763),e=d(7716),m=d(9490),v=d(9765),E=d(5319),T=d(8345);let at=0;const ue=new e.OlP("CdkAccordion");let rt=(()=>{class n{constructor(){this._stateChanges=new v.xQ,this._openCloseAllActions=new v.xQ,this.id="cdk-accordion-"+at++,this._multi=!1}get multi(){return this._multi}set multi(t){this._multi=(0,m.Ig)(t)}openAll(){this._multi&&this._openCloseAllActions.next(!0)}closeAll(){this._openCloseAllActions.next(!1)}ngOnChanges(t){this._stateChanges.next(t)}ngOnDestroy(){this._stateChanges.complete(),this._openCloseAllActions.complete()}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275dir=e.lG2({type:n,selectors:[["cdk-accordion"],["","cdkAccordion",""]],inputs:{multi:"multi"},exportAs:["cdkAccordion"],features:[e._Bn([{provide:ue,useExisting:n}]),e.TTD]}),n})(),st=0,ut=(()=>{class n{constructor(t,i,o){this.accordion=t,this._changeDetectorRef=i,this._expansionDispatcher=o,this._openCloseAllSubscription=E.w.EMPTY,this.closed=new e.vpe,this.opened=new e.vpe,this.destroyed=new e.vpe,this.expandedChange=new e.vpe,this.id="cdk-accordion-child-"+st++,this._expanded=!1,this._disabled=!1,this._removeUniqueSelectionListener=()=>{},this._removeUniqueSelectionListener=o.listen((r,s)=>{this.accordion&&!this.accordion.multi&&this.accordion.id===s&&this.id!==r&&(this.expanded=!1)}),this.accordion&&(this._openCloseAllSubscription=this._subscribeToOpenCloseAllActions())}get expanded(){return this._expanded}set expanded(t){t=(0,m.Ig)(t),this._expanded!==t&&(this._expanded=t,this.expandedChange.emit(t),t?(this.opened.emit(),this._expansionDispatcher.notify(this.id,this.accordion?this.accordion.id:this.id)):this.closed.emit(),this._changeDetectorRef.markForCheck())}get disabled(){return this._disabled}set disabled(t){this._disabled=(0,m.Ig)(t)}ngOnDestroy(){this.opened.complete(),this.closed.complete(),this.destroyed.emit(),this.destroyed.complete(),this._removeUniqueSelectionListener(),this._openCloseAllSubscription.unsubscribe()}toggle(){this.disabled||(this.expanded=!this.expanded)}close(){this.disabled||(this.expanded=!1)}open(){this.disabled||(this.expanded=!0)}_subscribeToOpenCloseAllActions(){return this.accordion._openCloseAllActions.subscribe(t=>{this.disabled||(this.expanded=t)})}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(ue,12),e.Y36(e.sBO),e.Y36(T.A8))},n.\u0275dir=e.lG2({type:n,selectors:[["cdk-accordion-item"],["","cdkAccordionItem",""]],inputs:{expanded:"expanded",disabled:"disabled"},outputs:{closed:"closed",opened:"opened",destroyed:"destroyed",expandedChange:"expandedChange"},exportAs:["cdkAccordionItem"],features:[e._Bn([{provide:ue,useValue:void 0}])]}),n})(),dt=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({}),n})();var M=d(7636),Z=d(2458),N=d(9238),xe=d(7519),Y=d(9761),Q=d(5435),Ce=d(5257),B=d(6461),q=d(6237),ct=d(9193),X=d(6682),p=d(7238);const gt=["body"];function pt(n,a){}const ht=[[["mat-expansion-panel-header"]],"*",[["mat-action-row"]]],Zt=["mat-expansion-panel-header","*","mat-action-row"];function mt(n,a){if(1&n&&e._UZ(0,"span",2),2&n){const t=e.oxw();e.Q6J("@indicatorRotate",t._getExpandedState())}}const _t=[[["mat-panel-title"]],[["mat-panel-description"]],"*"],ft=["mat-panel-title","mat-panel-description","*"],de=new e.OlP("MAT_ACCORDION"),ke="225ms cubic-bezier(0.4,0.0,0.2,1)",Me={indicatorRotate:(0,p.X$)("indicatorRotate",[(0,p.SB)("collapsed, void",(0,p.oB)({transform:"rotate(0deg)"})),(0,p.SB)("expanded",(0,p.oB)({transform:"rotate(180deg)"})),(0,p.eR)("expanded <=> collapsed, void => collapsed",(0,p.jt)(ke))]),bodyExpansion:(0,p.X$)("bodyExpansion",[(0,p.SB)("collapsed, void",(0,p.oB)({height:"0px",visibility:"hidden"})),(0,p.SB)("expanded",(0,p.oB)({height:"*",visibility:"visible"})),(0,p.eR)("expanded <=> collapsed, void => collapsed",(0,p.jt)(ke))])};let Tt=(()=>{class n{constructor(t){this._template=t}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.Rgc))},n.\u0275dir=e.lG2({type:n,selectors:[["ng-template","matExpansionPanelContent",""]]}),n})(),bt=0;const De=new e.OlP("MAT_EXPANSION_PANEL_DEFAULT_OPTIONS");let w=(()=>{class n extends ut{constructor(t,i,o,r,s,l,u){super(t,i,o),this._viewContainerRef=r,this._animationMode=l,this._hideToggle=!1,this.afterExpand=new e.vpe,this.afterCollapse=new e.vpe,this._inputChanges=new v.xQ,this._headerId="mat-expansion-panel-header-"+bt++,this._bodyAnimationDone=new v.xQ,this.accordion=t,this._document=s,this._bodyAnimationDone.pipe((0,xe.x)((g,c)=>g.fromState===c.fromState&&g.toState===c.toState)).subscribe(g=>{"void"!==g.fromState&&("expanded"===g.toState?this.afterExpand.emit():"collapsed"===g.toState&&this.afterCollapse.emit())}),u&&(this.hideToggle=u.hideToggle)}get hideToggle(){return this._hideToggle||this.accordion&&this.accordion.hideToggle}set hideToggle(t){this._hideToggle=(0,m.Ig)(t)}get togglePosition(){return this._togglePosition||this.accordion&&this.accordion.togglePosition}set togglePosition(t){this._togglePosition=t}_hasSpacing(){return!!this.accordion&&this.expanded&&"default"===this.accordion.displayMode}_getExpandedState(){return this.expanded?"expanded":"collapsed"}toggle(){this.expanded=!this.expanded}close(){this.expanded=!1}open(){this.expanded=!0}ngAfterContentInit(){this._lazyContent&&this.opened.pipe((0,Y.O)(null),(0,Q.h)(()=>this.expanded&&!this._portal),(0,Ce.q)(1)).subscribe(()=>{this._portal=new M.UE(this._lazyContent._template,this._viewContainerRef)})}ngOnChanges(t){this._inputChanges.next(t)}ngOnDestroy(){super.ngOnDestroy(),this._bodyAnimationDone.complete(),this._inputChanges.complete()}_containsFocus(){if(this._body){const t=this._document.activeElement,i=this._body.nativeElement;return t===i||i.contains(t)}return!1}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(de,12),e.Y36(e.sBO),e.Y36(T.A8),e.Y36(e.s_b),e.Y36(k.K0),e.Y36(q.Qb,8),e.Y36(De,8))},n.\u0275cmp=e.Xpm({type:n,selectors:[["mat-expansion-panel"]],contentQueries:function(t,i,o){if(1&t&&e.Suo(o,Tt,5),2&t){let r;e.iGM(r=e.CRH())&&(i._lazyContent=r.first)}},viewQuery:function(t,i){if(1&t&&e.Gf(gt,5),2&t){let o;e.iGM(o=e.CRH())&&(i._body=o.first)}},hostAttrs:[1,"mat-expansion-panel"],hostVars:6,hostBindings:function(t,i){2&t&&e.ekj("mat-expanded",i.expanded)("_mat-animation-noopable","NoopAnimations"===i._animationMode)("mat-expansion-panel-spacing",i._hasSpacing())},inputs:{disabled:"disabled",expanded:"expanded",hideToggle:"hideToggle",togglePosition:"togglePosition"},outputs:{opened:"opened",closed:"closed",expandedChange:"expandedChange",afterExpand:"afterExpand",afterCollapse:"afterCollapse"},exportAs:["matExpansionPanel"],features:[e._Bn([{provide:de,useValue:void 0}]),e.qOj,e.TTD],ngContentSelectors:Zt,decls:7,vars:4,consts:[["role","region",1,"mat-expansion-panel-content",3,"id"],["body",""],[1,"mat-expansion-panel-body"],[3,"cdkPortalOutlet"]],template:function(t,i){1&t&&(e.F$t(ht),e.Hsn(0),e.TgZ(1,"div",0,1),e.NdJ("@bodyExpansion.done",function(r){return i._bodyAnimationDone.next(r)}),e.TgZ(3,"div",2),e.Hsn(4,1),e.YNc(5,pt,0,0,"ng-template",3),e.qZA(),e.Hsn(6,2),e.qZA()),2&t&&(e.xp6(1),e.Q6J("@bodyExpansion",i._getExpandedState())("id",i.id),e.uIk("aria-labelledby",i._headerId),e.xp6(4),e.Q6J("cdkPortalOutlet",i._portal))},directives:[M.Pl],styles:[".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\n"],encapsulation:2,data:{animation:[Me.bodyExpansion]},changeDetection:0}),n})();class yt{}const qt=(0,Z.sb)(yt);let x=(()=>{class n extends qt{constructor(t,i,o,r,s,l,u){super(),this.panel=t,this._element=i,this._focusMonitor=o,this._changeDetectorRef=r,this._animationMode=l,this._parentChangeSubscription=E.w.EMPTY;const g=t.accordion?t.accordion._stateChanges.pipe((0,Q.h)(c=>!(!c.hideToggle&&!c.togglePosition))):ct.E;this.tabIndex=parseInt(u||"")||0,this._parentChangeSubscription=(0,X.T)(t.opened,t.closed,g,t._inputChanges.pipe((0,Q.h)(c=>!!(c.hideToggle||c.disabled||c.togglePosition)))).subscribe(()=>this._changeDetectorRef.markForCheck()),t.closed.pipe((0,Q.h)(()=>t._containsFocus())).subscribe(()=>o.focusVia(i,"program")),s&&(this.expandedHeight=s.expandedHeight,this.collapsedHeight=s.collapsedHeight)}get disabled(){return this.panel.disabled}_toggle(){this.disabled||this.panel.toggle()}_isExpanded(){return this.panel.expanded}_getExpandedState(){return this.panel._getExpandedState()}_getPanelId(){return this.panel.id}_getTogglePosition(){return this.panel.togglePosition}_showToggle(){return!this.panel.hideToggle&&!this.panel.disabled}_getHeaderHeight(){const t=this._isExpanded();return t&&this.expandedHeight?this.expandedHeight:!t&&this.collapsedHeight?this.collapsedHeight:null}_keydown(t){switch(t.keyCode){case B.L_:case B.K5:(0,B.Vb)(t)||(t.preventDefault(),this._toggle());break;default:return void(this.panel.accordion&&this.panel.accordion._handleHeaderKeydown(t))}}focus(t,i){t?this._focusMonitor.focusVia(this._element,t,i):this._element.nativeElement.focus(i)}ngAfterViewInit(){this._focusMonitor.monitor(this._element).subscribe(t=>{t&&this.panel.accordion&&this.panel.accordion._handleHeaderFocus(this)})}ngOnDestroy(){this._parentChangeSubscription.unsubscribe(),this._focusMonitor.stopMonitoring(this._element)}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(w,1),e.Y36(e.SBq),e.Y36(N.tE),e.Y36(e.sBO),e.Y36(De,8),e.Y36(q.Qb,8),e.$8M("tabindex"))},n.\u0275cmp=e.Xpm({type:n,selectors:[["mat-expansion-panel-header"]],hostAttrs:["role","button",1,"mat-expansion-panel-header","mat-focus-indicator"],hostVars:15,hostBindings:function(t,i){1&t&&e.NdJ("click",function(){return i._toggle()})("keydown",function(r){return i._keydown(r)}),2&t&&(e.uIk("id",i.panel._headerId)("tabindex",i.tabIndex)("aria-controls",i._getPanelId())("aria-expanded",i._isExpanded())("aria-disabled",i.panel.disabled),e.Udp("height",i._getHeaderHeight()),e.ekj("mat-expanded",i._isExpanded())("mat-expansion-toggle-indicator-after","after"===i._getTogglePosition())("mat-expansion-toggle-indicator-before","before"===i._getTogglePosition())("_mat-animation-noopable","NoopAnimations"===i._animationMode))},inputs:{tabIndex:"tabIndex",expandedHeight:"expandedHeight",collapsedHeight:"collapsedHeight"},features:[e.qOj],ngContentSelectors:ft,decls:5,vars:1,consts:[[1,"mat-content"],["class","mat-expansion-indicator",4,"ngIf"],[1,"mat-expansion-indicator"]],template:function(t,i){1&t&&(e.F$t(_t),e.TgZ(0,"span",0),e.Hsn(1),e.Hsn(2,1),e.Hsn(3,2),e.qZA(),e.YNc(4,mt,1,1,"span",1)),2&t&&(e.xp6(4),e.Q6J("ngIf",i._showToggle()))},directives:[k.O5],styles:['.mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:"";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:""}\n'],encapsulation:2,data:{animation:[Me.indicatorRotate]},changeDetection:0}),n})(),D=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275dir=e.lG2({type:n,selectors:[["mat-panel-title"]],hostAttrs:[1,"mat-expansion-panel-header-title"]}),n})(),R=(()=>{class n extends rt{constructor(){super(...arguments),this._ownHeaders=new e.n_E,this._hideToggle=!1,this.displayMode="default",this.togglePosition="after"}get hideToggle(){return this._hideToggle}set hideToggle(t){this._hideToggle=(0,m.Ig)(t)}ngAfterContentInit(){this._headers.changes.pipe((0,Y.O)(this._headers)).subscribe(t=>{this._ownHeaders.reset(t.filter(i=>i.panel.accordion===this)),this._ownHeaders.notifyOnChanges()}),this._keyManager=new N.Em(this._ownHeaders).withWrap().withHomeAndEnd()}_handleHeaderKeydown(t){this._keyManager.onKeydown(t)}_handleHeaderFocus(t){this._keyManager.updateActiveItem(t)}ngOnDestroy(){super.ngOnDestroy(),this._ownHeaders.destroy()}}return n.\u0275fac=function(){let a;return function(i){return(a||(a=e.n5z(n)))(i||n)}}(),n.\u0275dir=e.lG2({type:n,selectors:[["mat-accordion"]],contentQueries:function(t,i,o){if(1&t&&e.Suo(o,x,5),2&t){let r;e.iGM(r=e.CRH())&&(i._headers=r)}},hostAttrs:[1,"mat-accordion"],hostVars:2,hostBindings:function(t,i){2&t&&e.ekj("mat-accordion-multi",i.multi)},inputs:{multi:"multi",displayMode:"displayMode",togglePosition:"togglePosition",hideToggle:"hideToggle"},exportAs:["matAccordion"],features:[e._Bn([{provide:de,useExisting:n}]),e.qOj]}),n})(),Ut=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[k.ez,Z.BQ,dt,M.eL]]}),n})();var C=d(1095),_=d(5618);let A=(()=>{class n{constructor(){this._vertical=!1,this._inset=!1}get vertical(){return this._vertical}set vertical(t){this._vertical=(0,m.Ig)(t)}get inset(){return this._inset}set inset(t){this._inset=(0,m.Ig)(t)}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["mat-divider"]],hostAttrs:["role","separator",1,"mat-divider"],hostVars:7,hostBindings:function(t,i){2&t&&(e.uIk("aria-orientation",i.vertical?"vertical":"horizontal"),e.ekj("mat-divider-vertical",i.vertical)("mat-divider-horizontal",!i.vertical)("mat-divider-inset",i.inset))},inputs:{vertical:"vertical",inset:"inset"},decls:0,vars:0,template:function(t,i){},styles:[".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\n"],encapsulation:2,changeDetection:0}),n})(),vt=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[Z.BQ],Z.BQ]}),n})(),wt=(()=>{class n{constructor(t){this.router=t}scrollTo(t){this.router.navigate([],{fragment:t}).then(i=>{const o=document.getElementById(t);null!=o&&o.scrollIntoView()})}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(b.F0))},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-coding-general"]],decls:88,vars:0,consts:[[1,"flexContainer"],["displayMode","flat",2,"padding-left","5px","padding-right","5px"],[2,"margin-top","5px"],["mat-button","",1,"listItem",3,"click"],["fxLayout","column","fxLayout","column"],["id","refactoring"],["href","https://refactoring.guru/refactoring","target","_blank","rel","noopener noreferrer"],["id","designPattern"],["href","https://refactoring.guru/design-patterns","target","_blank","rel","noopener noreferrer"],["id","solidPrinciples"],["href","https://www.digitalocean.com/community/conceptual_articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design","target","_blank","rel","noopener noreferrer"],["id","asynchronity"],["href","https://stackoverflow.com/questions/2035645/when-is-javascript-synchronous","target","_blank","rel","noopener noreferrer"],["href","https://blog.bitsrc.io/understanding-asynchronous-javascript-the-event-loop-74cd408419ff","target","_blank","rel","noopener noreferrer"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"mat-accordion",1),e.TgZ(2,"mat-expansion-panel",2),e.TgZ(3,"mat-expansion-panel-header"),e.TgZ(4,"mat-panel-title"),e._uU(5," General "),e.qZA(),e.qZA(),e.TgZ(6,"button",3),e.NdJ("click",function(){return i.scrollTo("refactoring")}),e._uU(7,"Refactoring"),e.qZA(),e.TgZ(8,"button",3),e.NdJ("click",function(){return i.scrollTo("designPattern")}),e._uU(9,"Design Pattern"),e.qZA(),e.TgZ(10,"button",3),e.NdJ("click",function(){return i.scrollTo("solidPrinciples")}),e._uU(11,"SOLID Principles"),e.qZA(),e.TgZ(12,"button",3),e.NdJ("click",function(){return i.scrollTo("asynchronity")}),e._uU(13,"Asynchronity in Programming Languages"),e.qZA(),e.qZA(),e.TgZ(14,"div",4),e.TgZ(15,"div",5),e.TgZ(16,"h1"),e._uU(17,"Refactoring"),e.qZA(),e.TgZ(18,"h2"),e._uU(19,"Introduction"),e.qZA(),e.TgZ(20,"p"),e._uU(21,"Refactoring is about transforming code into clean code in order to improve the readability, reduce duplication and for easier code maintenance. "),e.qZA(),e.TgZ(22,"h2"),e._uU(23,"Useful Resources"),e.qZA(),e.TgZ(24,"ul"),e.TgZ(25,"li"),e.TgZ(26,"a",6),e._uU(27,"Detailed catalog and explanations of Refactoring"),e.qZA(),e.qZA(),e.qZA(),e._UZ(28,"mat-divider"),e.qZA(),e.TgZ(29,"div",7),e.TgZ(30,"h1"),e._uU(31,"Design Pattern"),e.qZA(),e.TgZ(32,"h2"),e._uU(33,"Introduction"),e.qZA(),e.TgZ(34,"p"),e._uU(35,"Design Patterns are blueprints for sctructuring your complex code to make it more managable and extensible. Note that you shouldn't use design patterns for simple code. "),e.qZA(),e.TgZ(36,"h2"),e._uU(37,"Useful Resources"),e.qZA(),e.TgZ(38,"ul"),e.TgZ(39,"li"),e.TgZ(40,"a",8),e._uU(41,"Detailed catalog and explanations of Design Patterns"),e.qZA(),e.qZA(),e.qZA(),e._UZ(42,"mat-divider"),e.qZA(),e.TgZ(43,"div",9),e.TgZ(44,"h1"),e._uU(45,"SOLID Principles"),e.qZA(),e.TgZ(46,"h2"),e._uU(47,"Introduction"),e.qZA(),e.TgZ(48,"p"),e._uU(49,"SOLID Principles are the acronym for:"),e.qZA(),e.TgZ(50,"ul"),e.TgZ(51,"li"),e._uU(52,"S - Single-responsiblity Principle"),e.qZA(),e.TgZ(53,"li"),e._uU(54,"O - Open-closed Principle"),e.qZA(),e.TgZ(55,"li"),e._uU(56,"L - Liskov Substitution Principle"),e.qZA(),e.TgZ(57,"li"),e._uU(58,"I - Interface Segregation Principle"),e.qZA(),e.TgZ(59,"li"),e._uU(60,"D - Dependency Inversion Principle"),e.qZA(),e.qZA(),e.TgZ(61,"p"),e._uU(62,"These are the principles for developing maintainable and extensible software project."),e.qZA(),e.TgZ(63,"h2"),e._uU(64,"Useful Resources"),e.qZA(),e.TgZ(65,"ul"),e.TgZ(66,"li"),e.TgZ(67,"a",10),e._uU(68,"Detailed explanations of SOLID Principles"),e.qZA(),e.qZA(),e.qZA(),e._UZ(69,"mat-divider"),e.qZA(),e.TgZ(70,"div",11),e.TgZ(71,"h1"),e._uU(72,"Asynchronity in Programming Languages"),e.qZA(),e.TgZ(73,"h2"),e._uU(74,"Introduction"),e.qZA(),e.TgZ(75,"p"),e._uU(76,"Asynchronous means that things can happen independently of the main program flow."),e.qZA(),e.TgZ(77,"p"),e._uU(78,"C, Java, C#, PHP, Go, Ruby, Swift, and Python are all synchronous by default. Some of them handle async by using threads, spawning a new process."),e.qZA(),e.TgZ(79,"p"),e._uU(80,"Javascript is also synchronous and single-threaded as well but people always confused that Javascript is asynchronous in nature. Javascript can behave as if it is asynchronous when there are some ajax calls, events or timers being used. For a detailed explanation, please refer to the answer of user2603796 in "),e.TgZ(81,"a",12),e._uU(82,"this stackoverflow post"),e.qZA(),e._uU(83," and this "),e.TgZ(84,"a",13),e._uU(85,"post"),e.qZA(),e._uU(86,"."),e.qZA(),e._UZ(87,"mat-divider"),e.qZA(),e.qZA(),e.qZA(),e.qZA())},directives:[R,w,x,D,C.lW,_.xw,A],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}"]}),n})(),xt=(()=>{class n{constructor(){}ngOnInit(){}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-coding-resources"]],decls:13,vars:0,consts:[[1,"flexContainer"],["fxLayout","column","fxLayout","column"],["href","https://csacademy.com/lessons","target","_blank","rel","noopener noreferrer"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"div",1),e.TgZ(2,"div"),e.TgZ(3,"h1"),e._uU(4,"Useful Coding Resources"),e.qZA(),e.TgZ(5,"h2"),e._uU(6,"Introduction"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"These are some online resources related to coding which I think are useful."),e.qZA(),e.qZA(),e.TgZ(9,"ul"),e.TgZ(10,"li"),e.TgZ(11,"a",2),e._uU(12,"Graph Theory, Data Structures, Sorting and Order Statistics"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA())},directives:[_.xw],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}"]}),n})();var Re=d(1903),V=d(9577);const Ct=["childTabs"];let kt=(()=>{class n{constructor(t){this.router=t,this.faArrowAltCircleUp=Re.q9}scrollTo(t){this.router.navigate([],{fragment:t}).then(()=>{const i=document.getElementById(t);null!=i&&i.scrollIntoView()})}onTabChange(t){this.activeIndex=t.index,this.childTabs&&this.childTabs.forEach(i=>{i.realignInkBar()})}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(b.F0))},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-cpp-notes-part2"]],viewQuery:function(t,i){if(1&t&&e.Gf(Ct,5),2&t){let o;e.iGM(o=e.CRH())&&(i.childTabs=o)}},decls:905,vars:1,consts:[[1,"flexContainer"],["id","contentList","displayMode","flat",2,"padding-left","5px","padding-right","5px"],[2,"margin-top","5px"],["mat-button","",1,"listItem",3,"click"],["fxLayout","column","fxLayout","column"],["href","https://www.learncpp.com/","target","_blank","rel","noopener noreferrer"],["id","chapter9"],["id","chapter10"],["href","https://www.cplusplus.com/reference/vector/vector/","target","_blank","rel","noopener noreferrer"],[1,"trFlex"],[1,"thHalf"],[1,"tdHalf"],[1,"highlightInGrey"],[2,"font-style","italic"],["href","https://www.learncpp.com/cpp-tutorial/introduction-to-standard-library-algorithms/","target","_blank","rel","noopener noreferrer"],["id","chapter11"],[1,"floatingIconDiv",3,"click"],["size","2x",3,"icon"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"mat-accordion",1),e.TgZ(2,"mat-expansion-panel",2),e.TgZ(3,"mat-expansion-panel-header"),e.TgZ(4,"mat-panel-title"),e._uU(5," C++ Part2 "),e.qZA(),e.qZA(),e.TgZ(6,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter9")}),e._uU(7,"Chapter 9: Compound Types"),e.qZA(),e.TgZ(8,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter10")}),e._uU(9,"Chapter 10: Arrays, Strings, Pointers, and References"),e.qZA(),e.TgZ(10,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter11")}),e._uU(11,"Chapter 11: Functions"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(12,"div",4),e.TgZ(13,"div"),e.TgZ(14,"h1"),e._uU(15,"C++ Part2"),e.qZA(),e.TgZ(16,"h2"),e._uU(17,"Introduction"),e.qZA(),e.TgZ(18,"p"),e._uU(19,"The following are mainly the notes summarized from "),e.TgZ(20,"a",5),e._uU(21,"learncpp.com"),e.qZA(),e._uU(22,"."),e.qZA(),e._UZ(23,"mat-divider"),e.qZA(),e.TgZ(24,"div",6),e.TgZ(25,"h2"),e._uU(26,"Chapter 9: Compound Types"),e.qZA(),e.TgZ(27,"ul"),e.TgZ(28,"li"),e._uU(29,"Enumerated types"),e.qZA(),e.TgZ(30,"ul"),e.TgZ(31,"li"),e._uU(32,"An "),e.TgZ(33,"strong"),e._uU(34,"enumerated type"),e.qZA(),e._uU(35," (also called an "),e.TgZ(36,"strong"),e._uU(37,"enumeration"),e.qZA(),e._uU(38," or "),e.TgZ(39,"strong"),e._uU(40,"enum"),e.qZA(),e._uU(41,") is a data type where every possible value is defined as a symbolic constant (called an enumerator)."),e.qZA(),e.TgZ(42,"li"),e._uU(43,"The following is an example of enum. By default, the enumerators are automatically assigned with integers starting from 0."),e.qZA(),e.TgZ(44,"pre"),e._uU(45,"                                "),e.TgZ(46,"code"),e._uU(47,"\n    enum TrafficLightColor {\n        green,  // automatically assigned 0\n        yellow, // automatically assigned 1\n        red     // automatically assigned 2\n    };\n                                "),e.qZA(),e._uU(48,"\n                            "),e.qZA(),e.TgZ(49,"li"),e._uU(50,"Enum is NOT type safe because the enumerators are not scoped. The following code will have redefinition error."),e.qZA(),e.TgZ(51,"pre"),e._uU(52,"                                "),e.TgZ(53,"code"),e._uU(54,'\n    std::string green = "green"; // let\'s say we declare a variable called "green"\n    enum TrafficLightColor {\n        green,  // will have redefinition error\n        yellow, \n        red    \n    };\n                                '),e.qZA(),e._uU(55,"\n                            "),e.qZA(),e.TgZ(56,"li"),e._uU(57,"Hence, C++ 11 introduces "),e.TgZ(58,"strong"),e._uU(59,"enum class"),e.qZA(),e._uU(60," concept. To make an enum class, simply add the "),e.TgZ(61,"strong"),e._uU(62,"class"),e.qZA(),e._uU(63," keyword after the enum keyword."),e.qZA(),e.TgZ(64,"pre"),e._uU(65,"                                "),e.TgZ(66,"code"),e._uU(67,"\n    enum class TrafficLightColor {\n        green,\n        yellow, \n        red    \n    };\n                                "),e.qZA(),e._uU(68,"\n                            "),e.qZA(),e.TgZ(69,"li"),e._uU(70,"Use case example of enum class"),e.qZA(),e.TgZ(71,"pre"),e._uU(72,"                                "),e.TgZ(73,"code"),e._uU(74,'\n    #include <iostream>\n    #include <string>\n    \n    enum class TrafficLightColor {\n        green,  // assigned 0\n        yellow, // assigned 1\n        red     // assigned 2\n    };\n    \n    // instead of "int getTrafficLightStatus()"\n    TrafficLightColor getTrafficLightStatus() {\n        return TrafficLightColor::green;\n    }\n    \n    // instead of "void displayLight(int color)"\n    void displayLight(TrafficLightColor color) {\n        if (color == TrafficLightColor::green) {\n            std::cout << "green" << \'\\n\';\n        }\n        else if (color == TrafficLightColor::yellow) {\n            std::cout << "yellow" << \'\\n\';\n        }\n        else if (color == TrafficLightColor::red) {\n            std::cout << "red" << \'\\n\';\n        }\n    }\n\n    int main() {\n        displayLight(getTrafficLightStatus());                       // output: "green"\n        TrafficLightColor nextColor{ TrafficLightColor::yellow };    // variable declaration example\n        std::cout << static_cast<int>(nextColor) << \'\\n\';            // output : 1\n        displayLight(nextColor);                                     // output: "yellow"\n        return 0;\n    }\n                                '),e.qZA(),e._uU(75,"\n                            "),e.qZA(),e.qZA(),e.TgZ(76,"li"),e._uU(77,"struct"),e.qZA(),e.TgZ(78,"ul"),e.TgZ(79,"li"),e._uU(80,"A "),e.TgZ(81,"strong"),e._uU(82,"struct"),e.qZA(),e._uU(83," allows us to group variables of mixed types together into a single unit."),e.qZA(),e.TgZ(84,"li"),e._uU(85,"The variables that are part of the struct are called "),e.TgZ(86,"strong"),e._uU(87,"members"),e.qZA(),e._uU(88,"."),e.qZA(),e.TgZ(89,"li"),e._uU(90,"An example of struct:"),e.qZA(),e.TgZ(91,"pre"),e._uU(92,"                                "),e.TgZ(93,"code"),e._uU(94,"\n    struct Employee {\n        int id{};\n        int age{};\n        bool isPermanent{};\n        double wage{};\n    };\n\n    Employee john; \n    john.id = 1234;\n    john.age = 32;\n    john.wage = 24;\n    john.isPermanent = false;\n    Employee jack{ 1122, 20, 18, false };\n                                "),e.qZA(),e._uU(95,"\n                            "),e.qZA(),e.TgZ(96,"li"),e._uU(97,"We can set default value for the non-static struct members:"),e.qZA(),e.TgZ(98,"pre"),e._uU(99,"                                "),e.TgZ(100,"code"),e._uU(101,"\n    struct Rectangle {\n        double length{ 1.0 };\n        double width{ 1.0 };\n    };\n    Rectangle rectangleA{}; // length = 1.0, width = 1.0\n    Rectangle rectangleB{ 1.2 }; // length = 1.2, width = 1.0\n                                "),e.qZA(),e._uU(102,"\n                            "),e.qZA(),e.TgZ(103,"li"),e._uU(104,"We can also pass the entire struct as argument to a function."),e.qZA(),e.TgZ(105,"pre"),e._uU(106,"                                "),e.TgZ(107,"code"),e._uU(108,"\n    void printInformation(Employee employee) {\n        std::cout << \"ID:   \" << employee.id << '\\n';\n        std::cout << \"Age:  \" << employee.age << '\\n';\n        std::cout << \"Wage: \" << employee.wage << '\\n';\n    }\n                                "),e.qZA(),e._uU(109,"\n                            "),e.qZA(),e.TgZ(110,"li"),e._uU(111,"A struct can be used as return type of function as well."),e.qZA(),e.TgZ(112,"pre"),e._uU(113,"                                "),e.TgZ(114,"code"),e._uU(115,"\n    struct Point3d {\n        double x{};\n        double y{};\n        double z{};\n    };\n\n    Point3d getZeroPoint() {\n        // We can create a variable and return the variable.\n        Point3d temp { 0.0, 0.0, 0.0 };\n        return temp;\n    }\n                                "),e.qZA(),e._uU(116,"\n                            "),e.qZA(),e.TgZ(117,"li"),e._uU(118,"Nested structs are also possible."),e.qZA(),e.TgZ(119,"pre"),e._uU(120,"                                "),e.TgZ(121,"code"),e._uU(122,"\n    struct Employee {\n        int id{};\n        int age{};\n        double wage{};\n    };\n\n    struct Company {\n        Employee CEO{}; // Employee is a struct within the Company struct\n        int numberOfEmployees{};\n    };\n\n    Company companyA{{0001, 52, 999}, 1000};\n    std::cout << companyA.CEO.wage << '\\n';\n                                "),e.qZA(),e._uU(123,"\n                            "),e.qZA(),e.qZA(),e.qZA(),e._UZ(124,"mat-divider"),e.qZA(),e.TgZ(125,"div",7),e.TgZ(126,"h2"),e._uU(127,"Chapter 10: Arrays, Strings, Pointers, and References"),e.qZA(),e.TgZ(128,"ul"),e.TgZ(129,"li"),e._uU(130,"Arrays"),e.qZA(),e.TgZ(131,"ul"),e.TgZ(132,"li"),e._uU(133,"Assuming you already have the basic understanding of arrays, so they are not covered here."),e.qZA(),e.TgZ(134,"li"),e._uU(135,"Arrays can be made from structs."),e.qZA(),e.TgZ(136,"pre"),e._uU(137,"                                "),e.TgZ(138,"code"),e._uU(139,"\n    struct Rectangle {\n        int length{};\n        int width{};\n    };\n    Rectangle rects[5]{}; // declare an array of 5 Rectangle\n    std::cout << rects[0].length << '\\n';\n                                "),e.qZA(),e._uU(140,"\n                            "),e.qZA(),e.TgZ(141,"li"),e._uU(142,'When declaring a fixed array, the length of the array must be a compile-time constant. For "array" with dynamic size, refer to C++ '),e.TgZ(143,"a",8),e._uU(144,"vector"),e.qZA(),e._uU(145,"."),e.qZA(),e.TgZ(146,"li"),e._uU(147,"To initlize the elements of a fixed array, we can use initializer list. If there are less initializers than the size of array, the rest of of the elements are initialized to zero. If you didnt declare the length of an array, the compiler will set the length of array based on length of initializer list. "),e.qZA(),e.TgZ(148,"pre"),e._uU(149,"                                "),e.TgZ(150,"code"),e._uU(151,"\n    int prime[5]{ 2, 3, 5, 7, 11 }; // use initializer list to initialize the fixed array\n    int arrayA[10]{ 1, 2, 3}; // the rest of the elments are initilized to zero\n    int arrayB[]{0, 1, 2, 3, 4, 5} // let the initializer list set length of the array\n                                "),e.qZA(),e._uU(152,"\n                            "),e.qZA(),e.TgZ(153,"li"),e._uU(154,"Use a enum inside of a namespace, and then use it to map the elements of array."),e.qZA(),e.TgZ(155,"pre"),e._uU(156,"                                "),e.TgZ(157,"code"),e._uU(158,"\n    namespace StudentNames {\n        enum StudentNames {\n            kenny, // 0\n            kyle, // 1\n            stan, // 2\n            butters, // 3\n            cartman, // 4\n            wendy, // 5\n        };\n    }\n\n    int main() {\n        int testScores[5]{}; \n        testScores[StudentNames::stan] = 76;\n        return 0;\n    }\n                                "),e.qZA(),e._uU(159,"\n                            "),e.qZA(),e.TgZ(160,"li"),e._uU(161,"Passing arrays to functions"),e.qZA(),e.TgZ(162,"ul"),e.TgZ(163,"li"),e._uU(164,"When a normal variable is passed by value, C++ copies the value of the argument into the function parameter. Hence, modifying the value of the parameter will not affect the original argument."),e.qZA(),e.TgZ(165,"li"),e._uU(166,"HOWEVER, "),e.TgZ(167,"strong"),e._uU(168,"when an array is passed into a function, the actual array is passed."),e.qZA(),e._uU(169,". Hence, modifying the elements of array inside the function will also affect the original argument which is out of the function."),e.qZA(),e.qZA(),e.TgZ(170,"li"),e._uU(171,"To swap values of two variables, we can use the std::swap() function from C++ standard library. This function can be used for swapping elements of array as well."),e.qZA(),e.TgZ(172,"li"),e._uU(173,"To sort elements of array, we can use some algorithms such as bubble sort, selection sort and insertion sort. But C++ standard library has a sorting function named std::sort() as well."),e.qZA(),e.TgZ(174,"pre"),e._uU(175,"                                "),e.TgZ(176,"code"),e._uU(177,"\n    #include <iostream>\n    #include <iterator> // for std::size\n    #include <algorithm> // for std::sort\n    \n    int main()\n    {\n        int array[]{ 10, 1, 22, 31, 5, 8, 3, 21 };\n        std::sort(std::begin(array), std::end(array));\n        for (int i = 0; i < std::size(array); i++) {\n            std::cout << array[i] << '\\n';\n        }\n        return 0;\n    }\n                                "),e.qZA(),e._uU(178,"\n                            "),e.qZA(),e.qZA(),e.TgZ(179,"li"),e._uU(180,"C-style Strings"),e.qZA(),e.TgZ(181,"ul"),e.TgZ(182,"li"),e._uU(183,"Other than std::string, C++ does support C-style Strings. And actually std::string is implemented using C-style strings"),e.qZA(),e.TgZ(184,"li"),e._uU(185,"C-style string is an array of characters that uses a null terminator."),e.qZA(),e.TgZ(186,"li"),e.TgZ(187,"strong"),e._uU(188,"Best practice: "),e.qZA(),e._uU(189,"Use std::string instead of C-style strings."),e.qZA(),e.TgZ(190,"li"),e._uU(191,"Since C-style Strings are not preferred, they are not covered here."),e.qZA(),e.qZA(),e.TgZ(192,"li"),e._uU(193,"Pointers"),e.qZA(),e.TgZ(194,"ul"),e.TgZ(195,"li"),e._uU(196,"The "),e.TgZ(197,"strong"),e._uU(198,"address-of operator (&)"),e.qZA(),e._uU(199," allows us to see what memory address is assigned to a variable."),e.qZA(),e.TgZ(200,"li"),e._uU(201,"The "),e.TgZ(202,"strong"),e._uU(203,"indirection operator (*)"),e.qZA(),e._uU(204," (also called "),e.TgZ(205,"strong"),e._uU(206,"dereference operator"),e.qZA(),e._uU(207,") allows us to access the value at a particular address:"),e.qZA(),e.TgZ(208,"li"),e._uU(209,"A "),e.TgZ(210,"strong"),e._uU(211,"pointer"),e.qZA(),e._uU(212," is a variable that holds a memory address as its value."),e.qZA(),e.TgZ(213,"pre"),e._uU(214,"                            "),e.TgZ(215,"code"),e._uU(216,"\n    int x{ 5 };\n    int* ptrX{&x}; // initialize ptrX with address of vqriable x\n    std::cout << x << '\\n'; // print the value of variable x\n    std::cout << &x << '\\n'; // print the memory address of variable x\n    std::cout << ptrX << '\\n'; // print the address that ptrX is holding\n    std::cout << *(&x) << '\\n'; /// print the value at the memory address of variable x (parenthesis is optional)                            \n                            "),e.qZA(),e._uU(217,"\n                        "),e.qZA(),e.TgZ(218,"li"),e._uU(219,"Pointers are useful in many cases, but they will be covered in future chapters."),e.qZA(),e.qZA(),e.TgZ(220,"li"),e._uU(221,"Null pointer"),e.qZA(),e.TgZ(222,"ul"),e.TgZ(223,"li"),e._uU(224,"A pointer holding a null value is called a "),e.TgZ(225,"strong"),e._uU(226,"null pointer"),e.qZA(),e._uU(227,"."),e.qZA(),e.TgZ(228,"li"),e._uU(229,"In C++ 11, we can assign a pointer a null value by using the "),e.TgZ(230,"strong"),e._uU(231,"nullptr"),e.qZA(),e._uU(232," keyword:"),e.qZA(),e.TgZ(233,"ul"),e.TgZ(234,"li"),e._uU(235,"Example: float* ptr { nullptr }; // ptr is now a null pointer"),e.qZA(),e.qZA(),e.TgZ(236,"li"),e.TgZ(237,"strong"),e._uU(238,"Best practice: "),e.qZA(),e._uU(239,"Use nullptr to initialize your pointers to a null value if you\u2019re not giving them another value."),e.qZA(),e.TgZ(240,"li"),e._uU(241,"C++ 11 also introduces a new type called std::nullptr_t (in header <cstddef>), and it can only hold one value: nullptr."),e.qZA(),e.qZA(),e.TgZ(242,"li"),e._uU(243,"Pointers and arrays"),e.qZA(),e.TgZ(244,"ul"),e.TgZ(245,"li"),e._uU(246,"In C++, when a fixed array is used in an expression, the fixed array will decay (be implicitly converted) into a pointer that points to the first element of the array."),e.qZA(),e.TgZ(247,"pre"),e._uU(248,"                                "),e.TgZ(249,"code"),e._uU(250,"\n    int array[5]{ 9, 7, 5, 3, 1 };\n\n    // print address of the array's first element\n    std::cout << \"Element 0 has address: \" << &array[0] << '\\n'; // example output: 0000008D7995FC54\n\n    // print the value of the pointer the array decays to\n    std::cout << \"The array decays to a pointer holding address: \" << array << '\\n'; // example output: 0000008D7995FC54\n                                "),e.qZA(),e._uU(251,"\n                            "),e.qZA(),e.TgZ(252,"li"),e._uU(253,"Hence, the following 2 function declarations are identical:"),e.qZA(),e.TgZ(254,"pre"),e._uU(255,"                                "),e.TgZ(256,"code"),e._uU(257,"\n    void printSize(int array[]);\n    void printSize(int* array); // this is lightly recommended as it makes clear that the parameter is being treated as a pointer\n                                "),e.qZA(),e._uU(258,"\n                            "),e.qZA(),e.TgZ(259,"li"),e._uU(260,"A side note is arrays in structs and classes don\u2019t decay. This yields a useful way to prevent decay if desired, and will be valuable later when we write classes that utilize arrays."),e.qZA(),e.qZA(),e.TgZ(261,"li"),e._uU(262,"Pointer arithmetic and array indexing"),e.qZA(),e.TgZ(263,"ul"),e.TgZ(264,"li"),e._uU(265,"If we have a pointer called 'ptr', then ptr + 1 then will return the memory address of the next object of the type that ptr points to."),e.qZA(),e.TgZ(266,"pre"),e._uU(267,"                                "),e.TgZ(268,"code"),e._uU(269,"\n    short value{ 7 }; // short is 2 bytes\n    short* ptr{ &value };\n    std::cout << ptr << '\\n'; // If this points to 00000039785AF98A\n    std::cout << ptr+1 << '\\n'; // then this one will point to 2 bytes after ptr, which is 00000039785AF98C\n                                "),e.qZA(),e._uU(270,"\n                            "),e.qZA(),e.TgZ(271,"li"),e._uU(272,"Arrays are laid out sequentially in memory, and that is why we can use iterator to traverse through an array easily."),e.qZA(),e.TgZ(273,"li"),e._uU(274,"array[n] is equivalent to *(array + n), where n is an integer. The (array + n) points to the nth element of an array, and hence deferencing it with * will get the value of nth element in that array."),e.qZA(),e.TgZ(275,"li"),e._uU(276,"Side Note: the algorithms library offers std::count_if, which counts elements that fulfill a condition. We can also make use of std::begin to point to the first element of array, and then use std::end to point to the object AFTER the last element."),e.qZA(),e.TgZ(277,"pre"),e._uU(278,"                                "),e.TgZ(279,"code"),e._uU(280,"\n    #include <iostream>\n    #include <algorithm> // for std::count_if\n    #include <iterator> // for std::begin and std::end\n    \n    bool isO(char ch) {\n        switch (ch) {\n            case 'O':\n            case 'o':\n                return true;\n            default:\n                return false;\n        }\n    }\n    char sampleText[]{ \"hello world\" }; // using std::string sampleText{ \"hello world\" } is also the same\n    auto numOfO{ std::count_if(std::begin(sampleText), std::end(sampleText), isO) };\n    std::cout << numOfO << '\\n';\n                                "),e.qZA(),e._uU(281,"\n                            "),e.qZA(),e.qZA(),e.TgZ(282,"li"),e._uU(283,"C-style string symbolic constant is not covered here."),e.qZA(),e.TgZ(284,"li"),e._uU(285,"Dynamic memory allocation with new and delete"),e.qZA(),e.TgZ(286,"ul"),e.TgZ(287,"li"),e._uU(288,"C++ supports 3 basic types of memory allocation"),e.qZA(),e.TgZ(289,"ul"),e.TgZ(290,"li"),e.TgZ(291,"strong"),e._uU(292,"Static memory allocation"),e.qZA(),e._uU(293," happens for static and global variables. Memory for these types of variables is allocated once when your program is run and persists throughout the life of your program."),e.qZA(),e.TgZ(294,"li"),e.TgZ(295,"strong"),e._uU(296,"Automatic memory allocation"),e.qZA(),e._uU(297," happens for function parameters and local variables. Memory for these types of variables is allocated when the relevant block is entered, and freed when the block is exited, as many times as necessary."),e.qZA(),e.TgZ(298,"li"),e.TgZ(299,"strong"),e._uU(300,"Dynamic memory allocation"),e.qZA(),e._uU(301," is a way for running programs to request memory from the operating system when needed. This memory does not come from the program\u2019s limited stack memory -- instead, it is allocated from a much larger pool of memory managed by the operating system called the "),e.TgZ(302,"strong"),e._uU(303,"heap"),e.qZA(),e._uU(304,". On modern machines, the heap can be gigabytes in size."),e.qZA(),e.qZA(),e.TgZ(305,"li"),e._uU(306,"Both static and automatic allocation have two things in common:"),e.qZA(),e.TgZ(307,"ul"),e.TgZ(308,"li"),e._uU(309,"The size of the variable / array must be known at compile time."),e.qZA(),e.TgZ(310,"li"),e._uU(311,"Memory allocation and deallocation happens automatically (when the variable is instantiated / destroyed)."),e.qZA(),e.qZA(),e.TgZ(312,"li"),e._uU(313,"Dynamically allocating single variables"),e.qZA(),e.TgZ(314,"ul"),e.TgZ(315,"li"),e._uU(316,"To allocate a single variable dynamically, we use the scalar (non-array) form of the new operator. The new operator creates the object using that memory, and then returns a pointer containing the address of the memory that has been allocated."),e.qZA(),e.TgZ(317,"pre"),e._uU(318,"                                        "),e.TgZ(319,"code"),e._uU(320,"\n    int* ptr{ new int }; // dynamically allocate an integer and assign the address to ptr so we can access it later\n    *ptr = 7; // assign value of 7 to allocated memory\n\n    int* ptr2{ new int { 6 } }; // use uniform initialization\n                                        "),e.qZA(),e._uU(321,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(322,"li"),e._uU(323,"When you dynamically allocate memory,"),e.qZA(),e.TgZ(324,"ul"),e.TgZ(325,"li"),e._uU(326,"You\u2019re asking the operating system to reserve some memory for your program\u2019s use."),e.qZA(),e.TgZ(327,"li"),e._uU(328,"If it can fulfill this request, it will return the address of that memory to your application."),e.qZA(),e.TgZ(329,"li"),e._uU(330,"From that point forward, your application can use this memory as it wishes. "),e.qZA(),e.TgZ(331,"li"),e._uU(332,"When your application is done with the memory, it can return the memory back to the operating system to be given to another program."),e.qZA(),e.qZA(),e.TgZ(333,"li"),e._uU(334,"You may free a memory for reuse by using the "),e.TgZ(335,"strong"),e._uU(336,"delete"),e.qZA(),e._uU(337," operator. Note that the delete operator doesn't actually delete anything, it simply returns the memory being pointed to back to the operating system. However, after freeing the memory, remember to set the pointer to nullptr."),e.qZA(),e.TgZ(338,"pre"),e._uU(339,"                                "),e.TgZ(340,"code"),e._uU(341,"\n    // assume ptr has previously been allocated with operator new\n    delete ptr; // return the memory pointed to by ptr to the operating system\n    ptr = nullptr; // set ptr to be a null pointer\n                                "),e.qZA(),e._uU(342,"\n                            "),e.qZA(),e.TgZ(343,"li"),e._uU(344,"Memory leaks"),e.qZA(),e.TgZ(345,"ul"),e.TgZ(346,"li"),e._uU(347,"Dynamically allocated memory stays allocated until it is explicitly deallocated or until the program ends."),e.qZA(),e.TgZ(348,"li"),e._uU(349,"However, the pointers used to hold dynamically allocated memory addresses follow the normal scoping rules for local variables."),e.qZA(),e.TgZ(350,"li"),e._uU(351,"Consider the following:"),e.qZA(),e.TgZ(352,"pre"),e._uU(353,"                                        "),e.TgZ(354,"code"),e._uU(355,"\n    void doSomething() {\n        int* ptr{ new int{} };\n    }\n                                        "),e.qZA(),e._uU(356,"\n                                    "),e.qZA(),e.TgZ(357,"li"),e._uU(358,"Because pointers variables are just normal variables, when the function ends, ptr will go out of scope."),e.qZA(),e.TgZ(359,"li"),e._uU(360,"Then, ptr is destroyed there are no more references to the dynamically allocated memory."),e.qZA(),e.TgZ(361,"li"),e._uU(362,"Now, the memory address is allocated but now we dont have any reference to that memory address, and hence we can't free the memory address."),e.qZA(),e.TgZ(363,"li"),e._uU(364,"This is called a "),e.TgZ(365,"strong"),e._uU(366,"memory leak"),e.qZA(),e._uU(367,", which means your program loses the address of some bit of dynamically allocated memory before giving it back to the operating system. "),e.qZA(),e.TgZ(368,"li"),e._uU(369,"Memory leaks will eat up your free memory while the program is running."),e.qZA(),e.TgZ(370,"li"),e._uU(371,"The following 2 cases will also result in memory leaks:"),e.qZA(),e.TgZ(372,"pre"),e._uU(373,"                                        "),e.TgZ(374,"code"),e._uU(375,"\n    // CASE 1 - a pointer is assigned another value\n    int value = 5;\n    int* ptr{ new int{} }; // allocate memory\n    ptr = &value; // old address lost, memory leak results\n\n    // CASE 2 - double-allocation\n    int* ptr{ new int{} };\n    ptr = new int{}; // old address lost, memory leak results\n                                        "),e.qZA(),e._uU(376,"\n                                    "),e.qZA(),e.TgZ(377,"li"),e._uU(378,"The solution for memory leaks would be deleting or freeing the pointer before it is out of scope or before assigning new value to it."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(379,"li"),e._uU(380,"Pointers and const"),e.qZA(),e.TgZ(381,"ul"),e.TgZ(382,"li"),e._uU(383,"A non-const pointer can be redirected to point to other addresses."),e.qZA(),e.TgZ(384,"li"),e._uU(385,"A const pointer always points to the same address, and this address can not be changed."),e.qZA(),e.TgZ(386,"li"),e._uU(387,"A pointer to a non-const value can change the value it is pointing to. These can not point to a const value."),e.qZA(),e.TgZ(388,"li"),e._uU(389,"A pointer to a const value treats the value as const (even if it is not), and thus can not change the value it is pointing to."),e.qZA(),e.TgZ(390,"pre"),e._uU(391,"                            "),e.TgZ(392,"code"),e._uU(393,'\n    int value{ 5 };\n    const int* ptr1{ &value }; // ptr1 points to a "const int", so this is a pointer to a const value.\n    int* const ptr2{ &value }; // ptr2 points to an "int", so this is a const pointer to a non-const value.\n    const int* const ptr3{ &value }; // ptr3 points to a "const int", so this is a const pointer to a const value.\n                            '),e.qZA(),e._uU(394,"\n                        "),e.qZA(),e.qZA(),e.TgZ(395,"li"),e._uU(396,"Reference variables"),e.qZA(),e.TgZ(397,"ul"),e.TgZ(398,"li"),e._uU(399,"Other than normal variables and pointers, C++ also supports another type of variables - references."),e.qZA(),e.TgZ(400,"li"),e._uU(401,"A "),e.TgZ(402,"strong"),e._uU(403,"reference"),e.qZA(),e._uU(404," is a C++ variable that acts as an alias to another object or value, and it acts identically to the value it is referencing."),e.qZA(),e.TgZ(405,"pre"),e._uU(406,"                                "),e.TgZ(407,"code"),e._uU(408,"\n    int value{ 5 }; // normal integer\n    int& y{ x }; // y is a reference to variable x\n    int& z{ y }; // z is also a reference to variable x\n                                "),e.qZA(),e._uU(409,"\n                            "),e.qZA(),e.TgZ(410,"li"),e._uU(411,"In the above snippet, setting or getting the value of x, y, or z will all do the same thing (set or get the value of x). The address of the references also same with the variable that they are referencing. "),e.qZA(),e.TgZ(412,"pre"),e._uU(413,"                                "),e.TgZ(414,"code"),e._uU(415,"\n    int x{ 5 }; // normal integer\n    int& y{ x }; // y is a reference to variable m\n    int& z{ y }; // z is also a reference to variable m\n    std::cout << x << '\\n'; // output: 5\n    std::cout << y << '\\n'; // output: 5\n    std::cout << z << '\\n'; // output: 5\n    x = 6;\n    std::cout << x << '\\n'; // output: 6\n    std::cout << y << '\\n'; // output: 6\n    std::cout << z << '\\n'; // output: 6\n    ++z;\n    std::cout << x << '\\n'; // output: 7\n    std::cout << y << '\\n'; // output: 7\n    std::cout << z << '\\n'; // output: 7\n\n    std::cout << &x << '\\n'; // output: 000000614ABDF5A4\n    std::cout << &y << '\\n'; // output: 000000614ABDF5A4\n    std::cout << &z << '\\n'; // output: 000000614ABDF5A4\n                                "),e.qZA(),e._uU(416,"\n                            "),e.qZA(),e.TgZ(417,"li"),e._uU(418,"Referencces must be initialized to a variable value, there is NO such thing as a null reference."),e.qZA(),e.TgZ(419,"li"),e._uU(420,"Once initialized, a reference can not be changed to reference another variable. "),e.qZA(),e.TgZ(421,"li"),e._uU(422,"References are most often used as function parameters."),e.qZA(),e.TgZ(423,"ul"),e.TgZ(424,"li"),e._uU(425,"In this context, the reference parameter acts as an alias for the argument, and no copy of the argument is made into the parameter."),e.qZA(),e.TgZ(426,"li"),e._uU(427,"This can lead to better performance if the argument is large or expensive to copy."),e.qZA(),e.TgZ(428,"li"),e._uU(429,"Example:"),e.qZA(),e.TgZ(430,"pre"),e._uU(431,"                                        "),e.TgZ(432,"code"),e._uU(433,"\n    // ref is a reference to the argument passed in, not a copy\n    void setNumTo6(int& ref) {\n        ref = 6;\n    }\n\n    int main () {\n        int num{ 5 };\n        setNumTo6(num);\n        std::cout << num << '\\n'; // output: 6\n        return 0;\n    }               \n                                        "),e.qZA(),e._uU(434,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(435,"li"),e.TgZ(436,"strong"),e._uU(437,"Best practice: "),e.qZA(),e._uU(438,"Pass arguments by non-const reference (rather than by pointer) when the argument needs to be modified by the function, applicable for variables that are not pointers or non-fundamental data types (such as structs). Fundametal data types such as int, double etc should be passed by value."),e.qZA(),e.TgZ(439,"li"),e._uU(440,"References vs pointers"),e.qZA(),e.TgZ(441,"ul"),e.TgZ(442,"li"),e._uU(443,"References and pointers have an interesting relationship -- a reference acts like a pointer that implicitly performs indirection through it when accessed"),e.qZA(),e.TgZ(444,"li"),e._uU(445,"Hence *ptr and ref are identical."),e.qZA(),e.TgZ(446,"pre"),e._uU(447,"                                    "),e.TgZ(448,"code"),e._uU(449,"\n    int valueB{ 5 };\n    int* const ptrC{ &valueB };\n    int& refD{ valueB };\n    std::cout << *ptrC << '\\n'; // output: 5\n    std::cout << refD << '\\n'; // output: 5\n    *ptrC = 6;\n    std::cout << *ptrC << '\\n'; // output: 6\n    std::cout << refD << '\\n';  // output: 6\n    refD = 7;\n    std::cout << *ptrC << '\\n'; // output: 7\n    std::cout << refD << '\\n';  // output: 7\n                                    "),e.qZA(),e._uU(450,"\n                                "),e.qZA(),e.qZA(),e.TgZ(451,"li"),e._uU(452,"References and const"),e.qZA(),e.TgZ(453,"ul"),e.TgZ(454,"li"),e._uU(455,"Much like a pointer to a const value, a reference to a const value can reference a non-const variable. When accessed through a reference to a const value, the value is considered const even if the original variable is not:"),e.qZA(),e.TgZ(456,"pre"),e._uU(457,"                                        "),e.TgZ(458,"code"),e._uU(459,'\n    int apple{ 5 };\n    const int& refApple{ apple }; // apple is not const, but refApple is still "a reference to const value"\n    apple = 6;\n    std::cout << apple << \'\\n\'; //ouput: 6\n    std::cout << refApple << \'\\n\'; // output: 6\n    // refApple = 7; // illegal -- refApple is const\n    const int orange{ 3 };\n    const int& refOrange{ orange }; // refOrange is also "a reference to const value"\n    const int& refGrapes{ 8 }; //refGrapse is also "a reference to const value"                                        \n                                        '),e.qZA(),e._uU(460,"\n                                    "),e.qZA(),e._UZ(461,"li"),e.qZA(),e.TgZ(462,"li"),e._uU(463,"References used as function parameters can also be const."),e.qZA(),e.TgZ(464,"ul"),e.TgZ(465,"li"),e._uU(466,"This allows us to access the argument without making a copy of it, while guaranteeing that the function will not change the value being referenced."),e.qZA(),e.TgZ(467,"pre"),e._uU(468,"                                    "),e.TgZ(469,"code"),e._uU(470,"\n    void printIt(const int& ref) { // to guarantee the function will not change the value being referenced\n        // ref = 6; // illegal -- ref is const\n        std::cout << ref;\n    }\n                                    "),e.qZA(),e._uU(471,"\n                                "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(472,"li"),e._uU(473,"for-each loops"),e.qZA(),e.TgZ(474,"ul"),e.TgZ(475,"li"),e._uU(476,"The following is an example of for-each loop statement:"),e.qZA(),e.TgZ(477,"pre"),e._uU(478,"                                "),e.TgZ(479,"code"),e._uU(480,"\n    constexpr int fibonacci[]{ 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89 };\n    for (int number : fibonacci) // iterate over array fibonacci\n    {\n       std::cout << number << ' ';\n    }\n                                "),e.qZA(),e._uU(481,"\n                            "),e.qZA(),e.TgZ(482,"li"),e._uU(483,"Since elements of the array should have the same type, it is suitable to use auto keyword to let compiler deduce the type."),e.qZA(),e.TgZ(484,"li"),e._uU(485,"Moreover, we can make use of reference to avoid copying array elements."),e.qZA(),e.TgZ(486,"li"),e._uU(487,"And if we are not going to modify the array elements, it's a good idea to make the reference const."),e.qZA(),e.TgZ(488,"pre"),e._uU(489,"                            "),e.TgZ(490,"code"),e._uU(491,'\n    std::string array[]{ "peter", "likes", "frozen", "yogurt" };\n    for (const auto& element: array) // element is a const reference to the currently iterated array element\n    {\n        std::cout << element << \' \';\n    }\n                            '),e.qZA(),e._uU(492,"\n                        "),e.qZA(),e.qZA(),e.TgZ(493,"li"),e._uU(494,"void pointer"),e.qZA(),e.TgZ(495,"ul"),e.TgZ(496,"li"),e._uU(497,"There is such thing called void pointer, but you ocassionally will use them. So this is not covered here."),e.qZA(),e.qZA(),e.TgZ(498,"li"),e._uU(499,"pointers to pointers"),e.qZA(),e.TgZ(500,"ul"),e.TgZ(501,"li"),e._uU(502,"A pointer can point to a pointer and it works just like a normal pointer."),e.qZA(),e.TgZ(503,"li"),e._uU(504,"It is recommended to avoid using pointers to pointers unless no other options are available, because they're complicated to use and potentially dangerous. Hence, it is not covered here also."),e.qZA(),e.qZA(),e.TgZ(505,"li"),e._uU(506,"std::array"),e.qZA(),e.TgZ(507,"ul"),e.TgZ(508,"li"),e._uU(509,"Unlike fixed arrays which decay into pointers, std::array provides fixed array functionality that won\u2019t decay when passed into a function."),e.qZA(),e.TgZ(510,"li"),e._uU(511,"std::array is defined in the <array> header, inside the std namespace."),e.qZA(),e.TgZ(512,"pre"),e._uU(513,"                                "),e.TgZ(514,"code"),e._uU(515,"\n    #include <array>\n    std::array<int, 3> myArray; // declare an integer array with length 3\n                                "),e.qZA(),e._uU(516,"\n                            "),e.qZA(),e.TgZ(517,"li"),e._uU(518,"Take note that the length of array must be known during compile-time, means we can not pass a variable for the length, unless it is a const variable"),e.qZA(),e.TgZ(519,"pre"),e._uU(520,"                                "),e.TgZ(521,"code"),e._uU(522,"\n    int n = 5;\n    const int x{ 6 };\n    // std::array<int, n> testA{ 1, 2, 3 }; // will have error\n    std::array<int, x> testB{ 1, 2, 3 }; // same as std::array<int, 6> since x is const\n    for (const auto num : testB) {\n        std::cout << num << ' '; // output: 1 2 3 0 0\n    }\n                                "),e.qZA(),e._uU(523,"\n                            "),e.qZA(),e.TgZ(524,"li"),e._uU(525,"size() function can be used to retrieve length"),e.qZA(),e.TgZ(526,"table"),e.TgZ(527,"tr",9),e.TgZ(528,"th",10),e._uU(529,"built-in fixed array"),e.qZA(),e.TgZ(530,"th",10),e._uU(531,"std::array"),e.qZA(),e.qZA(),e.TgZ(532,"tr",9),e.TgZ(533,"td",11),e._uU(534,"int myArray1[5] { 9, 7, 5, 3, 1 };"),e.qZA(),e.TgZ(535,"td",11),e._uU(536,"std::array<int, 5> myArray2 { 9, 7, 5, 3, 1 };"),e.qZA(),e.qZA(),e.TgZ(537,"tr",9),e.TgZ(538,"td",11),e._uU(539,"decay into pointers"),e.qZA(),e.TgZ(540,"td",11),e._uU(541,"DOES NOT decay into pointers"),e.qZA(),e.qZA(),e.TgZ(542,"tr",9),e.TgZ(543,"td",11),e._uU(544,"can omit array length when providing an initializer"),e.qZA(),e.TgZ(545,"td",11),e._uU(546,"CANNOT omit array length when providing an initializer"),e.qZA(),e.qZA(),e.TgZ(547,"tr",9),e.TgZ(548,"td",11),e._uU(549,"decay into pointers"),e.qZA(),e.TgZ(550,"td",11),e._uU(551,"do not decay into pointers"),e.qZA(),e.qZA(),e.TgZ(552,"tr",9),e.TgZ(553,"td",11),e._uU(554,"use .length to get length of array"),e.qZA(),e.TgZ(555,"td",11),e._uU(556,"use .size() to get length of array"),e.qZA(),e.qZA(),e.TgZ(557,"tr",9),e.TgZ(558,"td",11),e._uU(559,"does not have .begin() and .end() function"),e._UZ(560,"br"),e._uU(561,"std::sort(std::begin(array), std::end(array));"),e.qZA(),e.TgZ(562,"td",11),e._uU(563,"has .begin() and .end() function"),e._UZ(564,"br"),e._uU(565,"std::sort(myArray.begin(), myArray.end());"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(566,"li"),e._uU(567,"Passing std::array of different lengths to a function"),e.qZA(),e.TgZ(568,"ul"),e.TgZ(569,"li"),e._uU(570,"When we use a std::array as a function parameter, we have to specify the element type and array length, because they are part of the std::array element"),e.qZA(),e.TgZ(571,"pre"),e._uU(572,"                                        "),e.TgZ(573,"code"),e._uU(574,"\n    void printArray(const std::array<int, 5>& myArray) {\n        for (auto element : myArray)\n            std::cout << element << ' ';\n        std::cout << '\\n';\n    }\n                                        "),e.qZA(),e._uU(575,"\n                                    "),e.qZA(),e.TgZ(576,"li"),e._uU(577,"The downside of this is our function can only handle arrays of specific type and length.s"),e.qZA(),e.TgZ(578,"li"),e._uU(579,"The solution of this problem is by making use of C++ function templates:"),e.qZA(),e.TgZ(580,"pre"),e._uU(581,"                                        "),e.TgZ(582,"code"),e._uU(583,"\n    #include <array>\n    #include <cstddef>\n    #include <iostream>\n    \n    // printArray is a template function\n    template <typename T, std::size_t size> // parameterize the element type and size\n    void printArray(const std::array<T, size>& myArray) {\n        for (auto element : myArray)\n            std::cout << element << ' ';\n        std::cout << '\\n';\n    }\n    \n    int main() {\n        std::array myArray5{ 9.0, 7.2, 5.4, 3.6, 1.8 };\n        printArray(myArray5);\n    \n        std::array myArray7{ 9.0, 7.2, 5.4, 3.6, 1.8, 1.2, 0.7 };\n        printArray(myArray7);\n    \n        return 0;\n    }\n                                        "),e.qZA(),e._uU(584,"\n                                    "),e.qZA(),e.TgZ(585,"li"),e._uU(586,"Another downside of std::array is, the size() function and array index parameter to operator[] use a type called "),e.TgZ(587,"span",12),e._uU(588,"size_type"),e.qZA(),e._uU(589,", which is defined by the C++ standard as an "),e.TgZ(590,"span",13),e._uU(591,"unsigned"),e.qZA(),e._uU(592," integral type. Hence, the following code snippet will cause a deadloop since we used the "),e.TgZ(593,"span",12),e._uU(594,"auto"),e.qZA(),e._uU(595," keyword to declare the variable i, and unsigned integer will wrap around when it reachs its limit. "),e.qZA(),e.TgZ(596,"pre"),e._uU(597,"                                        "),e.TgZ(598,"code"),e._uU(599,"\n    std::array<int,5> myArrayABC { 7, 3, 1, 9, 5 };\n    std::cout << typeid(myArrayABC.size()).name() << '\\n'; // output: unsigned __int64\n\n    // this for-loop can work, but actually there is a hidden signed/unsigned mismatch in this code\n    for (int i{ 0 }; i < myArrayABC.size(); ++i) {\n        std::cout << myArrayABC[i] << ' ';\n    }\n                                        "),e.qZA(),e._uU(600,"\n                                    "),e.qZA(),e.TgZ(601,"li"),e._uU(602,"You must be aware that the .size() function returns a "),e.TgZ(603,"span",12),e._uU(604,"size_t"),e.qZA(),e._uU(605," type which is unsigned integral type, and the following example will have error because the iterator can never be less than zero."),e.qZA(),e.TgZ(606,"pre"),e._uU(607,"                                        "),e.TgZ(608,"code"),e._uU(609,"\n    // this will have error\n    for (auto i{ myArrayABC.size() - 1}; i >= 0; --i) {\n        std::cout << myArrayABC[i] << ' ';\n    }\n                                        "),e.qZA(),e._uU(610,"\n                                    "),e.qZA(),e.TgZ(611,"li"),e._uU(612,"To avoid signed/unsigned missmatch problem, we can use the std::size_t type to declare the index variable:"),e.qZA(),e.TgZ(613,"pre"),e._uU(614,"                                        "),e.TgZ(615,"code"),e._uU(616,"\n    #include <cstddef> // std::size_t\n    for (std::size_t i{ 0 }; i < myArrayABC.size(); ++i) {\n        std::cout << myArrayABC[i] << ' ';\n        std::cout << typeid(i).name() << '\\n'; // output: unsigned __int64\n    }\n                                        "),e.qZA(),e._uU(617,"\n                                    "),e.qZA(),e.TgZ(618,"li"),e._uU(619,"A better solution is avoid manual indexing of std::array, use range-based for-loops if possible."),e.qZA(),e.TgZ(620,"pre"),e._uU(621,"                                        "),e.TgZ(622,"code"),e._uU(623,"\n    // using range-based for-loop\n    for (auto num : myArrayABC) {\n        std::cout <*< num <*< '\\n';\n    }\n                                        "),e.qZA(),e._uU(624,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(625,"li"),e._uU(626,"std::array supports a second form of array element access (the at() function) that does bounds checking, and hence will be slower than operator[]"),e.qZA(),e.TgZ(627,"pre"),e._uU(628,"                                "),e.TgZ(629,"code"),e._uU(630,"\n    std::array myArray { 9, 7, 5, 3, 1 };\n    myArray.at(1) = 6; // array element 1 is valid, sets array element 1 to value 6\n    myArray.at(9) = 10; // array element 9 is invalid, will throw a runtime error\n                                "),e.qZA(),e._uU(631,"\n                            "),e.qZA(),e.qZA(),e.TgZ(632,"li"),e._uU(633,"std::vector"),e.qZA(),e.TgZ(634,"ul"),e.TgZ(635,"li"),e._uU(636,"The C++ standard library provides std::vector (lives in the <vector> header) that makes working with dynamic arrays safer and easier."),e.qZA(),e.TgZ(637,"li"),e._uU(638,"std::vector provides dynamic array functionality that handles its own memory management."),e.qZA(),e.TgZ(639,"li"),e._uU(640,"This means you can create arrays that have their length set at run-time, without having to explicitly allocate and deallocate memory using "),e.TgZ(641,"span",12),e._uU(642,"new"),e.qZA(),e._uU(643," and "),e.TgZ(644,"span",12),e._uU(645,"delete"),e.qZA(),e._uU(646,". This is because std::vector will dynamically allocate memory for its contents as requested."),e.qZA(),e.TgZ(647,"pre"),e._uU(648,"                                "),e.TgZ(649,"code"),e._uU(650,"\n    std::vector<int> arrayC; // no need to specify length at the declaration\n    std::vector<int> arrayD(5); // using direct initialization, we can create a vector with specific number of elements,\n    std::vector<int> arrayE = { 9, 7, 5, 3, 1 }; // use initializer list to initialize array (Before C++11)\n    std::vector<int> arrayF{ 9, 7, 5, 3, 1 }; // use uniform initialization to initialize array\n    int n = 5;\n    std::vector<int> testV(n, -1); // direct initialization with run-time length, and initialize all the elements to -1\n    for (const auto num : testV) {\n        std::cout << num << ' '; // output: -1 -1 -1 -1 -1\n    }\n                                "),e.qZA(),e._uU(651,"\n                            "),e.qZA(),e.TgZ(652,"li"),e._uU(653,"std::vector supports both "),e.TgZ(654,"span",12),e._uU(655,"[]"),e.qZA(),e._uU(656," and "),e.TgZ(657,"span",12),e._uU(658,"at()"),e.qZA(),e._uU(659," function"),e.qZA(),e.TgZ(660,"li"),e._uU(661,"As of C++11, you can also assign values to a std::vector using an initializer-list, and then the vector will self-resize to match the number of elements provided."),e.qZA(),e.TgZ(662,"pre"),e._uU(663,"                                "),e.TgZ(664,"code"),e._uU(665,"\n    array = { 0, 1, 2, 3, 4 }; // okay, array length is now 5\n    array = { 9, 8, 7 }; // okay, array length is now 3\n                                "),e.qZA(),e._uU(666,"\n                            "),e.qZA(),e.TgZ(667,"li"),e._uU(668,"The memory of std::vector variables will be deallocated as soon as the varibale goes out of scope. This helps prevent memory leaks, and make std::vector much safer to use."),e.qZA(),e.TgZ(669,"li"),e._uU(670,"To get the length of a vector, use .size() function"),e.qZA(),e.TgZ(671,"li"),e._uU(672,"The .size() of std::vector is similar to .size() of std::array, which returns a nested type of "),e.TgZ(673,"span",12),e._uU(674,"size_type"),e.qZA(),e.qZA(),e.TgZ(675,"li"),e._uU(676,"A vector can be resized using the "),e.TgZ(677,"span",12),e._uU(678,"resize()"),e.qZA(),e._uU(679," function"),e.qZA(),e.TgZ(680,"pre"),e._uU(681,"                                "),e.TgZ(682,"code"),e._uU(683,"\n    std::vector<int> arrayF{ 4, 5, 3, 6, 8 };\n    arrayF.resize(3);\n    for (auto i : arrayF)\n        std::cout << i << ' '; // output: 4 5 3\n    std::cout << '\\n';\n    arrayF.resize(6);\n    for (auto i : arrayF)\n        std::cout << i << ' '; // output: 4 5 3 0 0 0\n                                "),e.qZA(),e._uU(684,"\n                            "),e.qZA(),e.qZA(),e.TgZ(685,"li"),e._uU(686,"Iterators"),e.qZA(),e.TgZ(687,"ul"),e.TgZ(688,"li"),e._uU(689,"An iterator is an object designed to traverse through a container (e.g. the values in an array, or the characters in a string), providing access to each element along the way."),e.qZA(),e.TgZ(690,"li"),e._uU(691,"Pointers as an iterator"),e.qZA(),e.TgZ(692,"ul"),e.TgZ(693,"li"),e._uU(694,"The simplest kind of iterator is a pointer."),e.qZA(),e.TgZ(695,"pre"),e._uU(696,"                                        "),e.TgZ(697,"code"),e._uU(698,"\n    #include <array>\n    #include <iostream>\n    \n    int main() {\n        std::array <int,7> data{ 0, 1, 2, 3, 4, 5, 6 };\n    \n        auto begin{ &data[0] };\n        // note that this points to one spot beyond the last element\n        auto end{ begin + std::size(data) };\n    \n        // for-loop with pointer\n        for (auto ptr{ begin }; ptr != end; ++ptr) // ++ to move to next element\n        {\n            std::cout << *ptr << ' '; // Indirection to get value of current element\n        }\n        std::cout << '\\n';\n        return 0;\n    }\n                                        "),e.qZA(),e._uU(699,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(700,"li"),e._uU(701,"Standard library iterators"),e.qZA(),e.TgZ(702,"ul"),e.TgZ(703,"li"),e._uU(704,"Instead of manually calculating our own begin and end points (like what is done in previous code snippet), we can use the .begin() and .end() functions provided by most of the standard library containers. "),e.qZA(),e.TgZ(705,"pre"),e._uU(706,"                                        "),e.TgZ(707,"code"),e._uU(708,"\n    std::array <int,3> array2{ 1, 2, 3 };\n\n    for (auto p{ array2.begin() }; p != array2.end(); ++p) // ++ to move to next element.\n    {\n        std::cout << *p << ' '; // Indirection to get value of current element.\n    }\n    std::cout << '\\n';\n\n    return 0;\n                                        "),e.qZA(),e._uU(709,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(710,"li"),e._uU(711,"All types that have "),e.TgZ(712,"span",12),e._uU(713,"begin"),e.qZA(),e._uU(714," and "),e.TgZ(715,"span",12),e._uU(716,"end"),e.qZA(),e._uU(717," member functions or can be used with "),e.TgZ(718,"span",12),e._uU(719,"std::begin"),e.qZA(),e._uU(720," and "),e.TgZ(721,"span",12),e._uU(722,"std::end"),e.qZA(),e._uU(723," are usable in range-based for-loops."),e.qZA(),e.TgZ(724,"li"),e._uU(725,"Iterator invalidation"),e.qZA(),e.TgZ(726,"ul"),e.TgZ(727,"li"),e._uU(728,"Some operations that modify containers (such as adding an element to a "),e.TgZ(729,"span",12),e._uU(730,"std::vector"),e.qZA(),e._uU(731,") can have the side effect of causing the elements in the container to change addresses."),e.qZA(),e.TgZ(732,"li"),e._uU(733,"When this happens, the iterator initialized previously might no longer be valid."),e.qZA(),e.TgZ(734,"li"),e._uU(735,"Please beware that accessing an invalidated iterator produces undefined behavior."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(736,"li"),e._uU(737,"Standard Library Algorithms"),e.qZA(),e.TgZ(738,"ul"),e.TgZ(739,"li"),e._uU(740,"The algorithms library has 3 categories of functionality"),e.qZA(),e.TgZ(741,"ul"),e.TgZ(742,"li"),e.TgZ(743,"strong"),e._uU(744,"Inspectors"),e.qZA(),e._uU(745," -- Used to view (but not modify) data in a container. Examples include searching and counting."),e.qZA(),e.TgZ(746,"li"),e.TgZ(747,"strong"),e._uU(748,"Mutators"),e.qZA(),e._uU(749," -- Used to modify data in a container. Examples include sorting and shuffling."),e.qZA(),e.TgZ(750,"li"),e.TgZ(751,"strong"),e._uU(752,"Facilitators"),e.qZA(),e._uU(753," -- Used to generate a result based on values of the data members. Examples include objects that multiply values, or objects that determine what order pairs of elements should be sorted in."),e.qZA(),e.qZA(),e.TgZ(754,"li"),e._uU(755,"Here are some examples of functions"),e.qZA(),e.TgZ(756,"ul"),e.TgZ(757,"li"),e._uU(758,"std::find"),e.qZA(),e.TgZ(759,"li"),e._uU(760,"std::find_if"),e.qZA(),e.TgZ(761,"li"),e._uU(762,"std::count"),e.qZA(),e.TgZ(763,"li"),e._uU(764,"std::count_if"),e.qZA(),e.TgZ(765,"li"),e._uU(766,"std::sort"),e.qZA(),e._UZ(767,"li"),e.TgZ(768,"li"),e._uU(769,"std::for_each"),e.qZA(),e.qZA(),e.TgZ(770,"li"),e._uU(771,"For examples and references, refer to the "),e.TgZ(772,"a",14),e._uU(773,"tutorial"),e.qZA(),e._uU(774,"."),e.qZA(),e.qZA(),e.qZA(),e._UZ(775,"mat-divider"),e.qZA(),e.TgZ(776,"div",15),e.TgZ(777,"h2"),e._uU(778,"Chapter 11: Functions"),e.qZA(),e.TgZ(779,"ul"),e.TgZ(780,"li"),e._uU(781,"Passing arguments by value"),e.qZA(),e.TgZ(782,"ul"),e.TgZ(783,"li"),e._uU(784,"When an argument is passed by value, the argument\u2019s value is copied into the value of the corresponding function parameter."),e.qZA(),e.TgZ(785,"li"),e._uU(786,"When to use pass by value:"),e.qZA(),e.TgZ(787,"ul"),e.TgZ(788,"li"),e._uU(789,"When passing fundamental data types and enumerators, and the function does not need to change the argument."),e.qZA(),e.qZA(),e.TgZ(790,"li"),e._uU(791,"When not to use pass by value:"),e.qZA(),e.TgZ(792,"ul"),e.TgZ(793,"li"),e._uU(794,"When passing structs or classes (including std::array, std::vector, and std::string)."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(795,"li"),e._uU(796,"Passing arguments by reference"),e.qZA(),e.TgZ(797,"ul"),e.TgZ(798,"li"),e._uU(799,"When an argument is passed by reference, a reference is created to the actual argument (which takes minimal time) and no copying of values takes place. This allows us to pass large structs and classes with a minimum performance penalty."),e.qZA(),e.TgZ(800,"li"),e._uU(801,"Take note that: Non-const references cannot bind to r-values. A function with a non-const reference parameter cannot be called with literals or temporaries."),e.qZA(),e.TgZ(802,"pre"),e._uU(803,"                                "),e.TgZ(804,"code"),e._uU(805,'\n    #include <string>\n\n    void foo(std::string& text) {}\n    \n    int main() {\n        std::string text{ "hello" };\n    \n        foo(text); // ok\n        foo(text + " world"); // illegal, non-const references can\'t bind to r-values.\n    \n        return 0;\n                                        }\n                                '),e.qZA(),e._uU(806,"\n                            "),e.qZA(),e.TgZ(807,"li"),e._uU(808,"When to use pass by reference:"),e.qZA(),e.TgZ(809,"ul"),e.TgZ(810,"li"),e._uU(811,"When passing structs or classes (use const if read-only)."),e.qZA(),e.TgZ(812,"li"),e._uU(813,"When you need the function to modify an argument."),e.qZA(),e.TgZ(814,"li"),e._uU(815,"When you need access to the type information of a fixed array."),e.qZA(),e.qZA(),e.TgZ(816,"li"),e._uU(817,"When not to use pass by reference:"),e.qZA(),e.TgZ(818,"ul"),e.TgZ(819,"li"),e._uU(820,"When passing fundamental types that don\u2019t need to be modified (use pass by value)."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(821,"li"),e._uU(822,"Passing arguments by address"),e.qZA(),e.TgZ(823,"ul"),e.TgZ(824,"li"),e._uU(825,"Because the argument is an address, the function parameter must be a pointer. The function can then dereference the pointer to access or change the value being pointed to."),e.qZA(),e.TgZ(826,"li"),e._uU(827,"Example:"),e.qZA(),e.TgZ(828,"pre"),e._uU(829,"                                "),e.TgZ(830,"code"),e._uU(831,"\n    #include <iostream>\n\n    void foo(int* ptr) {\n        *ptr = 6;\n    }\n    \n    int main() {\n        int value{ 5 };\n    \n        std::cout << \"value = \" << value << '\\n';\n        foo(&value);\n        std::cout << \"value = \" << value << '\\n';\n        return 0;\n    }\n                                "),e.qZA(),e._uU(832,"\n                            "),e.qZA(),e.TgZ(833,"li"),e._uU(834,"It is always a good idea to ensure parameters passed by address are not null pointers before dereferencing them, because it might cause the program to crash."),e.qZA(),e.TgZ(835,"pre"),e._uU(836,"                                "),e.TgZ(837,"code"),e._uU(838,"\n    void printArray(int* array, int length) {\n        // if user passed in a null pointer for array, bail out early!\n        if (!array)\n            return;\n\n        for (int index{ 0 }; index < length; ++index)\n            std::cout << array[index] << ' ';\n    }\n                                "),e.qZA(),e._uU(839,"\n                            "),e.qZA(),e.TgZ(840,"li"),e._uU(841,"When you pass a pointer to a function, the pointer\u2019s value (the address it points to) is copied from the argument to the function\u2019s parameter. Hence, you can simply set the ptr to null in the function and it won't affect the original pointer argument. However, if you deference the address and then change it's value, the value stored at the original value will be changed also. Moreover, if you pass the address by reference, then the original pointer can be modified in the function. "),e.qZA(),e.TgZ(842,"pre"),e._uU(843,"                                "),e.TgZ(844,"code"),e._uU(845,"\n    #include <iostream>\n    void setToNull(int* tempPtr) {\n        // we're making tempPtr point at something else, not changing the value that tempPtr points to.\n        tempPtr = nullptr; // use 0 instead if not C++11\n    }\n    void setToNullByReference(int*& tempPtr) {\n        // tempPtr is now a reference to a pointer, so any changes made to tempPtr will change the argument as well!\n        tempPtr = nullptr; // use 0 instead if not C++11\n    }\n    void setToSix(int* tempPtr) {\n        *tempPtr = 6; // we're changing the value that tempPtr (and ptr) points to\n    }\n\n    int main() {\n        int five{ 5 };\n        int* ptr{ &five };\n        setToNull(ptr); // tempPtr will receive a copy of ptr\n        std::cout << *ptr << '\\n'; // output: 5\n        setToSix(ptr);\n        std::cout << *ptr << '\\n'; // output: 6\n        setToNullByReference(ptr);\n        // ptr has now been changed to nullptr!\n        if (ptr)\n            std::cout << *ptr;\n        else\n            std::cout << \"ptr is null\"; // output: ptr is null \n        return 0;\n    }\n                                "),e.qZA(),e._uU(846,"\n                            "),e.qZA(),e.TgZ(847,"li"),e._uU(848,'From the code snippet above, we can say that "pass by address" is actually just passing an address by value'),e.qZA(),e.TgZ(849,"li"),e.TgZ(850,"strong"),e._uU(851,"Best practice: "),e.qZA(),e._uU(852,"Prefer pass by reference to pass by address whenever applicable."),e.qZA(),e.qZA(),e.TgZ(853,"li"),e._uU(854,"Returning values by value, reference, and address"),e.qZA(),e.TgZ(855,"ul"),e.TgZ(856,"li"),e._uU(857,"Return by address was often used to return dynamically allocated memory to the caller:"),e.qZA(),e.TgZ(858,"pre"),e._uU(859,"                                "),e.TgZ(860,"code"),e._uU(861,"\n    int* allocateArray(int size)\n    {\n        return new int[size];\n    }\n\n                                "),e.qZA(),e._uU(862,"\n                            "),e.qZA(),e.TgZ(863,"li"),e._uU(864,"Return by reference is typically used to return arguments passed by reference to the function back to the caller."),e.qZA(),e.TgZ(865,"pre"),e._uU(866,"                                "),e.TgZ(867,"code"),e._uU(868,"\n    // Returns a reference to the index element of array\n    int& getElement(std::array<int, 25>& array, int index)\n    {\n        // we know that array[index] will not be destroyed when we return to the caller (since the caller passed in the array in the first place!)\n        // so it's okay to return it by reference\n        return array[index];\n    }\n                                "),e.qZA(),e._uU(869,"\n                            "),e.qZA(),e.TgZ(870,"li"),e._uU(871,"Returning multiple values"),e.qZA(),e.TgZ(872,"ul"),e.TgZ(873,"li"),e._uU(874,"using a data-only struct:"),e.qZA(),e.TgZ(875,"ul"),e.TgZ(876,"li"),e._uU(877,"Example"),e.qZA(),e.TgZ(878,"pre"),e._uU(879,"                                                "),e.TgZ(880,"code"),e._uU(881,"\n    #include <iostream>\n\n    struct S\n    {\n        int m_x;\n        double m_y;\n    };\n    \n    S returnStruct()\n    {\n        S s;\n        s.m_x = 5;\n        s.m_y = 6.7;\n        return s;\n    }\n    \n    int main()\n    {\n        S s{ returnStruct() };\n        std::cout << s.m_x << ' ' << s.m_y << '\\n';\n    \n        return 0;\n    }\n                                                "),e.qZA(),e._uU(882,"\n                                            "),e.qZA(),e.qZA(),e.TgZ(883,"li"),e._uU(884,"use std::tuple"),e.qZA(),e.TgZ(885,"ul"),e.TgZ(886,"li"),e._uU(887,"A tuple is a sequence of elements that may be different types, where the type of each element must be explicitly specified."),e.qZA(),e.TgZ(888,"li"),e._uU(889,"Example:"),e.qZA(),e.TgZ(890,"pre"),e._uU(891,"                                                "),e.TgZ(892,"code"),e._uU(893,"\n    #include <tuple>\n    #include <iostream>\n\n    std::tuple<int, double> returnTuple() // return a tuple that contains an int and a double\n    {\n        return { 5, 6.7 };\n    }\n\n    int main()\n    {\n        std::tuple s{ returnTuple() }; // get our tuple\n        std::cout << std::get<0>(s) << ' ' << std::get<1>(s) << '\\n'; // use std::get<n> to get the nth element of the tuple (counting from 0)\n\n        return 0;\n    }\n                                                "),e.qZA(),e._uU(894,"\n                                            "),e.qZA(),e.TgZ(895,"li"),e._uU(896,"You can also use std::tie to unpack the tuple into predefined variables, like so:"),e.qZA(),e.TgZ(897,"pre"),e._uU(898,"                                                "),e.TgZ(899,"code"),e._uU(900,"\n    #include <tuple>\n    #include <iostream>\n\n    std::tuple<int, double> returnTuple() // return a tuple that contains an int and a double\n    {\n        return { 5, 6.7 };\n    }\n\n    int main()\n    {\n        int a;\n        double b;\n        std::tie(a, b) = returnTuple(); // put elements of tuple in variables a and b\n        std::cout << a << ' ' << b << '\\n';\n\n        return 0;\n    }\n                                                "),e.qZA(),e._uU(901,"\n                                            "),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e._UZ(902,"mat-divider"),e.qZA(),e.qZA(),e.TgZ(903,"div",16),e.NdJ("click",function(){return i.scrollTo("contentList")}),e._UZ(904,"fa-icon",17),e.qZA(),e.qZA()),2&t&&(e.xp6(904),e.Q6J("icon",i.faArrowAltCircleUp))},directives:[R,w,x,D,C.lW,_.xw,A,V.BN],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}.trFlex[_ngcontent-%COMP%]{display:flex;width:100%}.tdHalf[_ngcontent-%COMP%]{width:50%;display:flex;flex-direction:column;justify-content:center}.thHalf[_ngcontent-%COMP%]{width:50%}.tdQuarter[_ngcontent-%COMP%]{width:25%;min-width:122px;display:flex;flex-direction:column;justify-content:center}.thQuarter[_ngcontent-%COMP%]{width:25%;min-width:122px}.mat-tab-label[_ngcontent-%COMP%]:focus{outline:black}"]}),n})();var ce=d(8553),ge=d(2759),pe=d(5917),Mt=d(8634),U=d(6782),I=d(521),P=d(946),L=d(3989);function Dt(n,a){1&n&&e.Hsn(0)}const he=["*"];function Rt(n,a){}const Ot=function(n){return{animationDuration:n}},St=function(n,a){return{value:n,params:a}},It=["tabBodyWrapper"],Pt=["tabHeader"];function Et(n,a){}function Nt(n,a){if(1&n&&e.YNc(0,Et,0,0,"ng-template",9),2&n){const t=e.oxw().$implicit;e.Q6J("cdkPortalOutlet",t.templateLabel)}}function Lt(n,a){if(1&n&&e._uU(0),2&n){const t=e.oxw().$implicit;e.Oqu(t.textLabel)}}function Ft(n,a){if(1&n){const t=e.EpF();e.TgZ(0,"div",6),e.NdJ("click",function(){const o=e.CHM(t),r=o.$implicit,s=o.index,l=e.oxw(),u=e.MAs(1);return l._handleClick(r,u,s)})("cdkFocusChange",function(o){const s=e.CHM(t).index;return e.oxw()._tabFocusChanged(o,s)}),e.TgZ(1,"div",7),e.YNc(2,Nt,1,1,"ng-template",8),e.YNc(3,Lt,1,1,"ng-template",8),e.qZA(),e.qZA()}if(2&n){const t=a.$implicit,i=a.index,o=e.oxw();e.ekj("mat-tab-label-active",o.selectedIndex==i),e.Q6J("id",o._getTabLabelId(i))("disabled",t.disabled)("matRippleDisabled",t.disabled||o.disableRipple),e.uIk("tabIndex",o._getTabIndex(t,i))("aria-posinset",i+1)("aria-setsize",o._tabs.length)("aria-controls",o._getTabContentId(i))("aria-selected",o.selectedIndex==i)("aria-label",t.ariaLabel||null)("aria-labelledby",!t.ariaLabel&&t.ariaLabelledby?t.ariaLabelledby:null),e.xp6(2),e.Q6J("ngIf",t.templateLabel),e.xp6(1),e.Q6J("ngIf",!t.templateLabel)}}function Bt(n,a){if(1&n){const t=e.EpF();e.TgZ(0,"mat-tab-body",10),e.NdJ("_onCentered",function(){return e.CHM(t),e.oxw()._removeTabBodyWrapperHeight()})("_onCentering",function(o){return e.CHM(t),e.oxw()._setTabBodyWrapperHeight(o)}),e.qZA()}if(2&n){const t=a.$implicit,i=a.index,o=e.oxw();e.ekj("mat-tab-body-active",o.selectedIndex===i),e.Q6J("id",o._getTabContentId(i))("content",t.content)("position",t.position)("origin",t.origin)("animationDuration",o.animationDuration),e.uIk("tabindex",null!=o.contentTabIndex&&o.selectedIndex===i?o.contentTabIndex:null)("aria-labelledby",o._getTabLabelId(i))}}const Oe=["tabListContainer"],Se=["tabList"],Ie=["nextPaginator"],Pe=["previousPaginator"],Gt=new e.OlP("MatInkBarPositioner",{providedIn:"root",factory:function(){return a=>({left:a?(a.offsetLeft||0)+"px":"0",width:a?(a.offsetWidth||0)+"px":"0"})}});let $=(()=>{class n{constructor(t,i,o,r){this._elementRef=t,this._ngZone=i,this._inkBarPositioner=o,this._animationMode=r}alignToElement(t){this.show(),"undefined"!=typeof requestAnimationFrame?this._ngZone.runOutsideAngular(()=>{requestAnimationFrame(()=>this._setStyles(t))}):this._setStyles(t)}show(){this._elementRef.nativeElement.style.visibility="visible"}hide(){this._elementRef.nativeElement.style.visibility="hidden"}_setStyles(t){const i=this._inkBarPositioner(t),o=this._elementRef.nativeElement;o.style.left=i.left,o.style.width=i.width}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.SBq),e.Y36(e.R0b),e.Y36(Gt),e.Y36(q.Qb,8))},n.\u0275dir=e.lG2({type:n,selectors:[["mat-ink-bar"]],hostAttrs:[1,"mat-ink-bar"],hostVars:2,hostBindings:function(t,i){2&t&&e.ekj("_mat-animation-noopable","NoopAnimations"===i._animationMode)}}),n})();const Ee=new e.OlP("MatTabContent"),Ne=new e.OlP("MatTabLabel"),jt=(0,Z.Id)(class{}),Le=new e.OlP("MAT_TAB_GROUP");let Fe=(()=>{class n extends jt{constructor(t,i){super(),this._viewContainerRef=t,this._closestTabGroup=i,this.textLabel="",this._contentPortal=null,this._stateChanges=new v.xQ,this.position=null,this.origin=null,this.isActive=!1}get templateLabel(){return this._templateLabel}set templateLabel(t){this._setTemplateLabelInput(t)}get content(){return this._contentPortal}ngOnChanges(t){(t.hasOwnProperty("textLabel")||t.hasOwnProperty("disabled"))&&this._stateChanges.next()}ngOnDestroy(){this._stateChanges.complete()}ngOnInit(){this._contentPortal=new M.UE(this._explicitContent||this._implicitContent,this._viewContainerRef)}_setTemplateLabelInput(t){t&&(this._templateLabel=t)}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.s_b),e.Y36(Le,8))},n.\u0275cmp=e.Xpm({type:n,selectors:[["mat-tab"]],contentQueries:function(t,i,o){if(1&t&&(e.Suo(o,Ne,5),e.Suo(o,Ee,7,e.Rgc)),2&t){let r;e.iGM(r=e.CRH())&&(i.templateLabel=r.first),e.iGM(r=e.CRH())&&(i._explicitContent=r.first)}},viewQuery:function(t,i){if(1&t&&e.Gf(e.Rgc,7),2&t){let o;e.iGM(o=e.CRH())&&(i._implicitContent=o.first)}},inputs:{disabled:"disabled",textLabel:["label","textLabel"],ariaLabel:["aria-label","ariaLabel"],ariaLabelledby:["aria-labelledby","ariaLabelledby"]},exportAs:["matTab"],features:[e.qOj,e.TTD],ngContentSelectors:he,decls:1,vars:0,template:function(t,i){1&t&&(e.F$t(),e.YNc(0,Dt,1,0,"ng-template"))},encapsulation:2}),n})();const Yt={translateTab:(0,p.X$)("translateTab",[(0,p.SB)("center, void, left-origin-center, right-origin-center",(0,p.oB)({transform:"none"})),(0,p.SB)("left",(0,p.oB)({transform:"translate3d(-100%, 0, 0)",minHeight:"1px"})),(0,p.SB)("right",(0,p.oB)({transform:"translate3d(100%, 0, 0)",minHeight:"1px"})),(0,p.eR)("* => left, * => right, left => center, right => center",(0,p.jt)("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")),(0,p.eR)("void => left-origin-center",[(0,p.oB)({transform:"translate3d(-100%, 0, 0)"}),(0,p.jt)("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")]),(0,p.eR)("void => right-origin-center",[(0,p.oB)({transform:"translate3d(100%, 0, 0)"}),(0,p.jt)("{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)")])])};let Wt=(()=>{class n extends M.Pl{constructor(t,i,o,r){super(t,i,r),this._host=o,this._centeringSub=E.w.EMPTY,this._leavingSub=E.w.EMPTY}ngOnInit(){super.ngOnInit(),this._centeringSub=this._host._beforeCentering.pipe((0,Y.O)(this._host._isCenterPosition(this._host._position))).subscribe(t=>{t&&!this.hasAttached()&&this.attach(this._host._content)}),this._leavingSub=this._host._afterLeavingCenter.subscribe(()=>{this.detach()})}ngOnDestroy(){super.ngOnDestroy(),this._centeringSub.unsubscribe(),this._leavingSub.unsubscribe()}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e._Vd),e.Y36(e.s_b),e.Y36((0,e.Gpc)(()=>Be)),e.Y36(k.K0))},n.\u0275dir=e.lG2({type:n,selectors:[["","matTabBodyHost",""]],features:[e.qOj]}),n})(),Jt=(()=>{class n{constructor(t,i,o){this._elementRef=t,this._dir=i,this._dirChangeSubscription=E.w.EMPTY,this._translateTabComplete=new v.xQ,this._onCentering=new e.vpe,this._beforeCentering=new e.vpe,this._afterLeavingCenter=new e.vpe,this._onCentered=new e.vpe(!0),this.animationDuration="500ms",i&&(this._dirChangeSubscription=i.change.subscribe(r=>{this._computePositionAnimationState(r),o.markForCheck()})),this._translateTabComplete.pipe((0,xe.x)((r,s)=>r.fromState===s.fromState&&r.toState===s.toState)).subscribe(r=>{this._isCenterPosition(r.toState)&&this._isCenterPosition(this._position)&&this._onCentered.emit(),this._isCenterPosition(r.fromState)&&!this._isCenterPosition(this._position)&&this._afterLeavingCenter.emit()})}set position(t){this._positionIndex=t,this._computePositionAnimationState()}ngOnInit(){"center"==this._position&&null!=this.origin&&(this._position=this._computePositionFromOrigin(this.origin))}ngOnDestroy(){this._dirChangeSubscription.unsubscribe(),this._translateTabComplete.complete()}_onTranslateTabStarted(t){const i=this._isCenterPosition(t.toState);this._beforeCentering.emit(i),i&&this._onCentering.emit(this._elementRef.nativeElement.clientHeight)}_getLayoutDirection(){return this._dir&&"rtl"===this._dir.value?"rtl":"ltr"}_isCenterPosition(t){return"center"==t||"left-origin-center"==t||"right-origin-center"==t}_computePositionAnimationState(t=this._getLayoutDirection()){this._position=this._positionIndex<0?"ltr"==t?"left":"right":this._positionIndex>0?"ltr"==t?"right":"left":"center"}_computePositionFromOrigin(t){const i=this._getLayoutDirection();return"ltr"==i&&t<=0||"rtl"==i&&t>0?"left-origin-center":"right-origin-center"}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.SBq),e.Y36(P.Is,8),e.Y36(e.sBO))},n.\u0275dir=e.lG2({type:n,inputs:{animationDuration:"animationDuration",position:"position",_content:["content","_content"],origin:"origin"},outputs:{_onCentering:"_onCentering",_beforeCentering:"_beforeCentering",_afterLeavingCenter:"_afterLeavingCenter",_onCentered:"_onCentered"}}),n})(),Be=(()=>{class n extends Jt{constructor(t,i,o){super(t,i,o)}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.SBq),e.Y36(P.Is,8),e.Y36(e.sBO))},n.\u0275cmp=e.Xpm({type:n,selectors:[["mat-tab-body"]],viewQuery:function(t,i){if(1&t&&e.Gf(M.Pl,5),2&t){let o;e.iGM(o=e.CRH())&&(i._portalHost=o.first)}},hostAttrs:[1,"mat-tab-body"],features:[e.qOj],decls:3,vars:6,consts:[["cdkScrollable","",1,"mat-tab-body-content"],["content",""],["matTabBodyHost",""]],template:function(t,i){1&t&&(e.TgZ(0,"div",0,1),e.NdJ("@translateTab.start",function(r){return i._onTranslateTabStarted(r)})("@translateTab.done",function(r){return i._translateTabComplete.next(r)}),e.YNc(2,Rt,0,0,"ng-template",2),e.qZA()),2&t&&e.Q6J("@translateTab",e.WLB(3,St,i._position,e.VKq(1,Ot,i.animationDuration)))},directives:[Wt],styles:[".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\n"],encapsulation:2,data:{animation:[Yt.translateTab]}}),n})();const He=new e.OlP("MAT_TABS_CONFIG");let Qt=0;class Xt{}const Vt=(0,Z.pj)((0,Z.Kr)(class{constructor(n){this._elementRef=n}}),"primary");let $t=(()=>{class n extends Vt{constructor(t,i,o,r){var s;super(t),this._changeDetectorRef=i,this._animationMode=r,this._tabs=new e.n_E,this._indexToSelect=0,this._tabBodyWrapperHeight=0,this._tabsSubscription=E.w.EMPTY,this._tabLabelSubscription=E.w.EMPTY,this._selectedIndex=null,this.headerPosition="above",this.selectedIndexChange=new e.vpe,this.focusChange=new e.vpe,this.animationDone=new e.vpe,this.selectedTabChange=new e.vpe(!0),this._groupId=Qt++,this.animationDuration=o&&o.animationDuration?o.animationDuration:"500ms",this.disablePagination=!(!o||null==o.disablePagination)&&o.disablePagination,this.dynamicHeight=!(!o||null==o.dynamicHeight)&&o.dynamicHeight,this.contentTabIndex=null!==(s=null==o?void 0:o.contentTabIndex)&&void 0!==s?s:null}get dynamicHeight(){return this._dynamicHeight}set dynamicHeight(t){this._dynamicHeight=(0,m.Ig)(t)}get selectedIndex(){return this._selectedIndex}set selectedIndex(t){this._indexToSelect=(0,m.su)(t,null)}get animationDuration(){return this._animationDuration}set animationDuration(t){this._animationDuration=/^\d+$/.test(t)?t+"ms":t}get contentTabIndex(){return this._contentTabIndex}set contentTabIndex(t){this._contentTabIndex=(0,m.su)(t,null)}get backgroundColor(){return this._backgroundColor}set backgroundColor(t){const i=this._elementRef.nativeElement;i.classList.remove(`mat-background-${this.backgroundColor}`),t&&i.classList.add(`mat-background-${t}`),this._backgroundColor=t}ngAfterContentChecked(){const t=this._indexToSelect=this._clampTabIndex(this._indexToSelect);if(this._selectedIndex!=t){const i=null==this._selectedIndex;if(!i){this.selectedTabChange.emit(this._createChangeEvent(t));const o=this._tabBodyWrapper.nativeElement;o.style.minHeight=o.clientHeight+"px"}Promise.resolve().then(()=>{this._tabs.forEach((o,r)=>o.isActive=r===t),i||(this.selectedIndexChange.emit(t),this._tabBodyWrapper.nativeElement.style.minHeight="")})}this._tabs.forEach((i,o)=>{i.position=o-t,null!=this._selectedIndex&&0==i.position&&!i.origin&&(i.origin=t-this._selectedIndex)}),this._selectedIndex!==t&&(this._selectedIndex=t,this._changeDetectorRef.markForCheck())}ngAfterContentInit(){this._subscribeToAllTabChanges(),this._subscribeToTabLabels(),this._tabsSubscription=this._tabs.changes.subscribe(()=>{if(this._clampTabIndex(this._indexToSelect)===this._selectedIndex){const i=this._tabs.toArray();for(let o=0;o<i.length;o++)if(i[o].isActive){this._indexToSelect=this._selectedIndex=o;break}}this._changeDetectorRef.markForCheck()})}_subscribeToAllTabChanges(){this._allTabs.changes.pipe((0,Y.O)(this._allTabs)).subscribe(t=>{this._tabs.reset(t.filter(i=>i._closestTabGroup===this||!i._closestTabGroup)),this._tabs.notifyOnChanges()})}ngOnDestroy(){this._tabs.destroy(),this._tabsSubscription.unsubscribe(),this._tabLabelSubscription.unsubscribe()}realignInkBar(){this._tabHeader&&this._tabHeader._alignInkBarToSelectedTab()}focusTab(t){const i=this._tabHeader;i&&(i.focusIndex=t)}_focusChanged(t){this.focusChange.emit(this._createChangeEvent(t))}_createChangeEvent(t){const i=new Xt;return i.index=t,this._tabs&&this._tabs.length&&(i.tab=this._tabs.toArray()[t]),i}_subscribeToTabLabels(){this._tabLabelSubscription&&this._tabLabelSubscription.unsubscribe(),this._tabLabelSubscription=(0,X.T)(...this._tabs.map(t=>t._stateChanges)).subscribe(()=>this._changeDetectorRef.markForCheck())}_clampTabIndex(t){return Math.min(this._tabs.length-1,Math.max(t||0,0))}_getTabLabelId(t){return`mat-tab-label-${this._groupId}-${t}`}_getTabContentId(t){return`mat-tab-content-${this._groupId}-${t}`}_setTabBodyWrapperHeight(t){if(!this._dynamicHeight||!this._tabBodyWrapperHeight)return;const i=this._tabBodyWrapper.nativeElement;i.style.height=this._tabBodyWrapperHeight+"px",this._tabBodyWrapper.nativeElement.offsetHeight&&(i.style.height=t+"px")}_removeTabBodyWrapperHeight(){const t=this._tabBodyWrapper.nativeElement;this._tabBodyWrapperHeight=t.clientHeight,t.style.height="",this.animationDone.emit()}_handleClick(t,i,o){t.disabled||(this.selectedIndex=i.focusIndex=o)}_getTabIndex(t,i){return t.disabled?null:this.selectedIndex===i?0:-1}_tabFocusChanged(t,i){t&&"mouse"!==t&&"touch"!==t&&(this._tabHeader.focusIndex=i)}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.SBq),e.Y36(e.sBO),e.Y36(He,8),e.Y36(q.Qb,8))},n.\u0275dir=e.lG2({type:n,inputs:{headerPosition:"headerPosition",animationDuration:"animationDuration",disablePagination:"disablePagination",dynamicHeight:"dynamicHeight",contentTabIndex:"contentTabIndex",selectedIndex:"selectedIndex",backgroundColor:"backgroundColor"},outputs:{selectedIndexChange:"selectedIndexChange",focusChange:"focusChange",animationDone:"animationDone",selectedTabChange:"selectedTabChange"},features:[e.qOj]}),n})(),Kt=(()=>{class n extends $t{constructor(t,i,o,r){super(t,i,o,r)}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.SBq),e.Y36(e.sBO),e.Y36(He,8),e.Y36(q.Qb,8))},n.\u0275cmp=e.Xpm({type:n,selectors:[["mat-tab-group"]],contentQueries:function(t,i,o){if(1&t&&e.Suo(o,Fe,5),2&t){let r;e.iGM(r=e.CRH())&&(i._allTabs=r)}},viewQuery:function(t,i){if(1&t&&(e.Gf(It,5),e.Gf(Pt,5)),2&t){let o;e.iGM(o=e.CRH())&&(i._tabBodyWrapper=o.first),e.iGM(o=e.CRH())&&(i._tabHeader=o.first)}},hostAttrs:[1,"mat-tab-group"],hostVars:4,hostBindings:function(t,i){2&t&&e.ekj("mat-tab-group-dynamic-height",i.dynamicHeight)("mat-tab-group-inverted-header","below"===i.headerPosition)},inputs:{color:"color",disableRipple:"disableRipple"},exportAs:["matTabGroup"],features:[e._Bn([{provide:Le,useExisting:n}]),e.qOj],decls:6,vars:7,consts:[[3,"selectedIndex","disableRipple","disablePagination","indexFocused","selectFocusedIndex"],["tabHeader",""],["class","mat-tab-label mat-focus-indicator","role","tab","matTabLabelWrapper","","mat-ripple","","cdkMonitorElementFocus","",3,"id","mat-tab-label-active","disabled","matRippleDisabled","click","cdkFocusChange",4,"ngFor","ngForOf"],[1,"mat-tab-body-wrapper"],["tabBodyWrapper",""],["role","tabpanel",3,"id","mat-tab-body-active","content","position","origin","animationDuration","_onCentered","_onCentering",4,"ngFor","ngForOf"],["role","tab","matTabLabelWrapper","","mat-ripple","","cdkMonitorElementFocus","",1,"mat-tab-label","mat-focus-indicator",3,"id","disabled","matRippleDisabled","click","cdkFocusChange"],[1,"mat-tab-label-content"],[3,"ngIf"],[3,"cdkPortalOutlet"],["role","tabpanel",3,"id","content","position","origin","animationDuration","_onCentered","_onCentering"]],template:function(t,i){1&t&&(e.TgZ(0,"mat-tab-header",0,1),e.NdJ("indexFocused",function(r){return i._focusChanged(r)})("selectFocusedIndex",function(r){return i.selectedIndex=r}),e.YNc(2,Ft,4,14,"div",2),e.qZA(),e.TgZ(3,"div",3,4),e.YNc(5,Bt,1,9,"mat-tab-body",5),e.qZA()),2&t&&(e.Q6J("selectedIndex",i.selectedIndex||0)("disableRipple",i.disableRipple)("disablePagination",i.disablePagination),e.xp6(2),e.Q6J("ngForOf",i._tabs),e.xp6(1),e.ekj("_mat-animation-noopable","NoopAnimations"===i._animationMode),e.xp6(2),e.Q6J("ngForOf",i._tabs))},directives:function(){return[an,k.sg,Ge,Z.wG,N.kH,k.O5,M.Pl,Be]},styles:[".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\n"],encapsulation:2}),n})();const en=(0,Z.Id)(class{});let Ge=(()=>{class n extends en{constructor(t){super(),this.elementRef=t}focus(){this.elementRef.nativeElement.focus()}getOffsetLeft(){return this.elementRef.nativeElement.offsetLeft}getOffsetWidth(){return this.elementRef.nativeElement.offsetWidth}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.SBq))},n.\u0275dir=e.lG2({type:n,selectors:[["","matTabLabelWrapper",""]],hostVars:3,hostBindings:function(t,i){2&t&&(e.uIk("aria-disabled",!!i.disabled),e.ekj("mat-tab-disabled",i.disabled))},inputs:{disabled:"disabled"},features:[e.qOj]}),n})();const ze=(0,I.i$)({passive:!0});let Ye=(()=>{class n{constructor(t,i,o,r,s,l,u){this._elementRef=t,this._changeDetectorRef=i,this._viewportRuler=o,this._dir=r,this._ngZone=s,this._platform=l,this._animationMode=u,this._scrollDistance=0,this._selectedIndexChanged=!1,this._destroyed=new v.xQ,this._showPaginationControls=!1,this._disableScrollAfter=!0,this._disableScrollBefore=!0,this._stopScrolling=new v.xQ,this.disablePagination=!1,this._selectedIndex=0,this.selectFocusedIndex=new e.vpe,this.indexFocused=new e.vpe,s.runOutsideAngular(()=>{(0,ge.R)(t.nativeElement,"mouseleave").pipe((0,U.R)(this._destroyed)).subscribe(()=>{this._stopInterval()})})}get selectedIndex(){return this._selectedIndex}set selectedIndex(t){t=(0,m.su)(t),this._selectedIndex!=t&&(this._selectedIndexChanged=!0,this._selectedIndex=t,this._keyManager&&this._keyManager.updateActiveItem(t))}ngAfterViewInit(){(0,ge.R)(this._previousPaginator.nativeElement,"touchstart",ze).pipe((0,U.R)(this._destroyed)).subscribe(()=>{this._handlePaginatorPress("before")}),(0,ge.R)(this._nextPaginator.nativeElement,"touchstart",ze).pipe((0,U.R)(this._destroyed)).subscribe(()=>{this._handlePaginatorPress("after")})}ngAfterContentInit(){const t=this._dir?this._dir.change:(0,pe.of)("ltr"),i=this._viewportRuler.change(150),o=()=>{this.updatePagination(),this._alignInkBarToSelectedTab()};this._keyManager=new N.Em(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap(),this._keyManager.updateActiveItem(this._selectedIndex),"undefined"!=typeof requestAnimationFrame?requestAnimationFrame(o):o(),(0,X.T)(t,i,this._items.changes).pipe((0,U.R)(this._destroyed)).subscribe(()=>{this._ngZone.run(()=>Promise.resolve().then(o)),this._keyManager.withHorizontalOrientation(this._getLayoutDirection())}),this._keyManager.change.pipe((0,U.R)(this._destroyed)).subscribe(r=>{this.indexFocused.emit(r),this._setTabFocus(r)})}ngAfterContentChecked(){this._tabLabelCount!=this._items.length&&(this.updatePagination(),this._tabLabelCount=this._items.length,this._changeDetectorRef.markForCheck()),this._selectedIndexChanged&&(this._scrollToLabel(this._selectedIndex),this._checkScrollingControls(),this._alignInkBarToSelectedTab(),this._selectedIndexChanged=!1,this._changeDetectorRef.markForCheck()),this._scrollDistanceChanged&&(this._updateTabScrollPosition(),this._scrollDistanceChanged=!1,this._changeDetectorRef.markForCheck())}ngOnDestroy(){this._destroyed.next(),this._destroyed.complete(),this._stopScrolling.complete()}_handleKeydown(t){if(!(0,B.Vb)(t))switch(t.keyCode){case B.K5:case B.L_:this.focusIndex!==this.selectedIndex&&(this.selectFocusedIndex.emit(this.focusIndex),this._itemSelected(t));break;default:this._keyManager.onKeydown(t)}}_onContentChanges(){const t=this._elementRef.nativeElement.textContent;t!==this._currentTextContent&&(this._currentTextContent=t||"",this._ngZone.run(()=>{this.updatePagination(),this._alignInkBarToSelectedTab(),this._changeDetectorRef.markForCheck()}))}updatePagination(){this._checkPaginationEnabled(),this._checkScrollingControls(),this._updateTabScrollPosition()}get focusIndex(){return this._keyManager?this._keyManager.activeItemIndex:0}set focusIndex(t){!this._isValidIndex(t)||this.focusIndex===t||!this._keyManager||this._keyManager.setActiveItem(t)}_isValidIndex(t){if(!this._items)return!0;const i=this._items?this._items.toArray()[t]:null;return!!i&&!i.disabled}_setTabFocus(t){if(this._showPaginationControls&&this._scrollToLabel(t),this._items&&this._items.length){this._items.toArray()[t].focus();const i=this._tabListContainer.nativeElement;i.scrollLeft="ltr"==this._getLayoutDirection()?0:i.scrollWidth-i.offsetWidth}}_getLayoutDirection(){return this._dir&&"rtl"===this._dir.value?"rtl":"ltr"}_updateTabScrollPosition(){if(this.disablePagination)return;const t=this.scrollDistance,i="ltr"===this._getLayoutDirection()?-t:t;this._tabList.nativeElement.style.transform=`translateX(${Math.round(i)}px)`,(this._platform.TRIDENT||this._platform.EDGE)&&(this._tabListContainer.nativeElement.scrollLeft=0)}get scrollDistance(){return this._scrollDistance}set scrollDistance(t){this._scrollTo(t)}_scrollHeader(t){return this._scrollTo(this._scrollDistance+("before"==t?-1:1)*this._tabListContainer.nativeElement.offsetWidth/3)}_handlePaginatorClick(t){this._stopInterval(),this._scrollHeader(t)}_scrollToLabel(t){if(this.disablePagination)return;const i=this._items?this._items.toArray()[t]:null;if(!i)return;const o=this._tabListContainer.nativeElement.offsetWidth,{offsetLeft:r,offsetWidth:s}=i.elementRef.nativeElement;let l,u;"ltr"==this._getLayoutDirection()?(l=r,u=l+s):(u=this._tabList.nativeElement.offsetWidth-r,l=u-s);const g=this.scrollDistance,c=this.scrollDistance+o;l<g?this.scrollDistance-=g-l+60:u>c&&(this.scrollDistance+=u-c+60)}_checkPaginationEnabled(){if(this.disablePagination)this._showPaginationControls=!1;else{const t=this._tabList.nativeElement.scrollWidth>this._elementRef.nativeElement.offsetWidth;t||(this.scrollDistance=0),t!==this._showPaginationControls&&this._changeDetectorRef.markForCheck(),this._showPaginationControls=t}}_checkScrollingControls(){this.disablePagination?this._disableScrollAfter=this._disableScrollBefore=!0:(this._disableScrollBefore=0==this.scrollDistance,this._disableScrollAfter=this.scrollDistance==this._getMaxScrollDistance(),this._changeDetectorRef.markForCheck())}_getMaxScrollDistance(){return this._tabList.nativeElement.scrollWidth-this._tabListContainer.nativeElement.offsetWidth||0}_alignInkBarToSelectedTab(){const t=this._items&&this._items.length?this._items.toArray()[this.selectedIndex]:null,i=t?t.elementRef.nativeElement:null;i?this._inkBar.alignToElement(i):this._inkBar.hide()}_stopInterval(){this._stopScrolling.next()}_handlePaginatorPress(t,i){i&&null!=i.button&&0!==i.button||(this._stopInterval(),(0,Mt.H)(650,100).pipe((0,U.R)((0,X.T)(this._stopScrolling,this._destroyed))).subscribe(()=>{const{maxScrollDistance:o,distance:r}=this._scrollHeader(t);(0===r||r>=o)&&this._stopInterval()}))}_scrollTo(t){if(this.disablePagination)return{maxScrollDistance:0,distance:0};const i=this._getMaxScrollDistance();return this._scrollDistance=Math.max(0,Math.min(i,t)),this._scrollDistanceChanged=!0,this._checkScrollingControls(),{maxScrollDistance:i,distance:this._scrollDistance}}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.SBq),e.Y36(e.sBO),e.Y36(L.rL),e.Y36(P.Is,8),e.Y36(e.R0b),e.Y36(I.t4),e.Y36(q.Qb,8))},n.\u0275dir=e.lG2({type:n,inputs:{disablePagination:"disablePagination"}}),n})(),on=(()=>{class n extends Ye{constructor(t,i,o,r,s,l,u){super(t,i,o,r,s,l,u),this._disableRipple=!1}get disableRipple(){return this._disableRipple}set disableRipple(t){this._disableRipple=(0,m.Ig)(t)}_itemSelected(t){t.preventDefault()}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.SBq),e.Y36(e.sBO),e.Y36(L.rL),e.Y36(P.Is,8),e.Y36(e.R0b),e.Y36(I.t4),e.Y36(q.Qb,8))},n.\u0275dir=e.lG2({type:n,inputs:{disableRipple:"disableRipple"},features:[e.qOj]}),n})(),an=(()=>{class n extends on{constructor(t,i,o,r,s,l,u){super(t,i,o,r,s,l,u)}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(e.SBq),e.Y36(e.sBO),e.Y36(L.rL),e.Y36(P.Is,8),e.Y36(e.R0b),e.Y36(I.t4),e.Y36(q.Qb,8))},n.\u0275cmp=e.Xpm({type:n,selectors:[["mat-tab-header"]],contentQueries:function(t,i,o){if(1&t&&e.Suo(o,Ge,4),2&t){let r;e.iGM(r=e.CRH())&&(i._items=r)}},viewQuery:function(t,i){if(1&t&&(e.Gf($,7),e.Gf(Oe,7),e.Gf(Se,7),e.Gf(Ie,5),e.Gf(Pe,5)),2&t){let o;e.iGM(o=e.CRH())&&(i._inkBar=o.first),e.iGM(o=e.CRH())&&(i._tabListContainer=o.first),e.iGM(o=e.CRH())&&(i._tabList=o.first),e.iGM(o=e.CRH())&&(i._nextPaginator=o.first),e.iGM(o=e.CRH())&&(i._previousPaginator=o.first)}},hostAttrs:[1,"mat-tab-header"],hostVars:4,hostBindings:function(t,i){2&t&&e.ekj("mat-tab-header-pagination-controls-enabled",i._showPaginationControls)("mat-tab-header-rtl","rtl"==i._getLayoutDirection())},inputs:{selectedIndex:"selectedIndex"},outputs:{selectFocusedIndex:"selectFocusedIndex",indexFocused:"indexFocused"},features:[e.qOj],ngContentSelectors:he,decls:13,vars:8,consts:[["aria-hidden","true","mat-ripple","",1,"mat-tab-header-pagination","mat-tab-header-pagination-before","mat-elevation-z4",3,"matRippleDisabled","click","mousedown","touchend"],["previousPaginator",""],[1,"mat-tab-header-pagination-chevron"],[1,"mat-tab-label-container",3,"keydown"],["tabListContainer",""],["role","tablist",1,"mat-tab-list",3,"cdkObserveContent"],["tabList",""],[1,"mat-tab-labels"],["aria-hidden","true","mat-ripple","",1,"mat-tab-header-pagination","mat-tab-header-pagination-after","mat-elevation-z4",3,"matRippleDisabled","mousedown","click","touchend"],["nextPaginator",""]],template:function(t,i){1&t&&(e.F$t(),e.TgZ(0,"div",0,1),e.NdJ("click",function(){return i._handlePaginatorClick("before")})("mousedown",function(r){return i._handlePaginatorPress("before",r)})("touchend",function(){return i._stopInterval()}),e._UZ(2,"div",2),e.qZA(),e.TgZ(3,"div",3,4),e.NdJ("keydown",function(r){return i._handleKeydown(r)}),e.TgZ(5,"div",5,6),e.NdJ("cdkObserveContent",function(){return i._onContentChanges()}),e.TgZ(7,"div",7),e.Hsn(8),e.qZA(),e._UZ(9,"mat-ink-bar"),e.qZA(),e.qZA(),e.TgZ(10,"div",8,9),e.NdJ("mousedown",function(r){return i._handlePaginatorPress("after",r)})("click",function(){return i._handlePaginatorClick("after")})("touchend",function(){return i._stopInterval()}),e._UZ(12,"div",2),e.qZA()),2&t&&(e.ekj("mat-tab-header-pagination-disabled",i._disableScrollBefore),e.Q6J("matRippleDisabled",i._disableScrollBefore||i.disableRipple),e.xp6(5),e.ekj("_mat-animation-noopable","NoopAnimations"===i._animationMode),e.xp6(5),e.ekj("mat-tab-header-pagination-disabled",i._disableScrollAfter),e.Q6J("matRippleDisabled",i._disableScrollAfter||i.disableRipple))},directives:[Z.wG,ce.wD,$],styles:['.mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:"";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\n'],encapsulation:2}),n})(),dn=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[k.ez,Z.BQ,M.eL,Z.si,ce.Q8,N.rt],Z.BQ]}),n})();const cn=["childTabs"];let gn=(()=>{class n{constructor(t){this.router=t,this.faArrowAltCircleUp=Re.q9}scrollTo(t){this.router.navigate([],{fragment:t}).then(()=>{const i=document.getElementById(t);null!=i&&i.scrollIntoView()})}onTabChange(t){this.activeIndex=t.index,this.childTabs&&this.childTabs.forEach(i=>{i.realignInkBar()})}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(b.F0))},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-cpp-notes"]],viewQuery:function(t,i){if(1&t&&e.Gf(cn,5),2&t){let o;e.iGM(o=e.CRH())&&(i.childTabs=o)}},decls:1910,vars:3,consts:[[1,"flexContainer"],["id","contentList","displayMode","flat",2,"padding-left","5px","padding-right","5px"],[2,"margin-top","5px"],["mat-button","",1,"listItem",3,"click"],["fxLayout","column","fxLayout","column"],["href","https://www.learncpp.com/","target","_blank","rel","noopener noreferrer"],["id","chapter1"],["id","chapter2"],[2,"font-style","italic"],[2,"background-color","whitesmoke","font-style","italic"],["id","chapter3"],["id","chapter4"],[2,"margin","10px","overflow","auto","width","100%"],[1,"trFlex"],[1,"thQuarter"],[1,"tdQuarter"],[2,"margin","0px"],["href","https://www.learncpp.com/cpp-tutorial/an-introduction-to-stdstring/","target","_blank","rel","noopener noreferrer"],["id","chapter5"],["href","https://www.learncpp.com/cpp-tutorial/operator-precedence-and-associativity/","target","_blank","rel","noopener noreferrer"],["href","https://www.learncpp.com/cpp-tutorial/relational-operators-and-floating-point-comparisons/","target","_blank","rel","noopener noreferrer"],["id","chapterO"],["id","chapter6"],["disableRipple","true",2,"border","black","padding-left","10px","padding-right","10px","border","solid",3,"animationDuration"],["label","foo.h"],["label","foo.cpp"],["label","goo.h"],["label","goo.cpp"],["label","chapter6.cpp"],["label","automatic duration"],["label","static duration"],["href","https://www.learncpp.com/cpp-tutorial/scope-duration-and-linkage-summary/","target","_blank","rel","noopener noreferrer"],["id","chapter7"],["href","https://www.learncpp.com/cpp-tutorial/stdcin-and-handling-invalid-input/","target","_blank","rel","noopener noreferrer"],["href","https://www.learncpp.com/cpp-tutorial/assert-and-static_assert/","target","_blank","rel","noopener noreferrer"],["id","chapter8"],[2,"background-color","whitesmoke"],["href","https://www.learncpp.com/cpp-tutorial/function-overload-resolution-and-ambiguous-matches/","target","_blank","rel","noopener noreferrer"],[1,"floatingIconDiv",3,"click"],["size","2x",3,"icon"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"mat-accordion",1),e.TgZ(2,"mat-expansion-panel",2),e.TgZ(3,"mat-expansion-panel-header"),e.TgZ(4,"mat-panel-title"),e._uU(5," C++ "),e.qZA(),e.qZA(),e.TgZ(6,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter1")}),e._uU(7,"Chapter 1: C++ Basics"),e.qZA(),e.TgZ(8,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter2")}),e._uU(9,"Chapter 2: Functions and Files"),e.qZA(),e.TgZ(10,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter3")}),e._uU(11,"Chapter 3: Debugging C++ Programs"),e.qZA(),e.TgZ(12,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter4")}),e._uU(13,"Chapter 4: Fundamental Data Types"),e.qZA(),e.TgZ(14,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter5")}),e._uU(15,"Chapter 5: Operators"),e.qZA(),e.TgZ(16,"button",3),e.NdJ("click",function(){return i.scrollTo("chapterO")}),e._uU(17,"Chapter O: Bit Manipulation"),e.qZA(),e.TgZ(18,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter6")}),e._uU(19,"Chapter 6: Scope, Duration, and Linkage"),e.qZA(),e.TgZ(20,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter7")}),e._uU(21,"Chapter 7: Control Flow and Error Handling"),e.qZA(),e.TgZ(22,"button",3),e.NdJ("click",function(){return i.scrollTo("chapter8")}),e._uU(23,"Chapter 8: Type Conversion And Function Overloading"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(24,"div",4),e.TgZ(25,"div"),e.TgZ(26,"h1"),e._uU(27,"C++"),e.qZA(),e.TgZ(28,"h2"),e._uU(29,"Introduction"),e.qZA(),e.TgZ(30,"p"),e._uU(31,"The following are mainly the notes summarized from "),e.TgZ(32,"a",5),e._uU(33,"learncpp.com"),e.qZA(),e._uU(34,"."),e.qZA(),e._UZ(35,"mat-divider"),e.qZA(),e.TgZ(36,"div",6),e.TgZ(37,"h2"),e._uU(38,"Chapter 1: C++ Basics"),e.qZA(),e.TgZ(39,"ul"),e.TgZ(40,"li"),e._uU(41,"Every C++ program must have a special function named main (all lower case letters)."),e.qZA(),e.TgZ(42,"li"),e._uU(43,"In C++, an "),e.TgZ(44,"strong"),e._uU(45,"object"),e.qZA(),e._uU(46," is a region of storage (usually memory) that has a value and other associated properties."),e.qZA(),e.TgZ(47,"li"),e._uU(48,"A named object is called a "),e.TgZ(49,"strong"),e._uU(50,"variable"),e.qZA(),e._uU(51,", and the name of the object is called an "),e.TgZ(52,"strong"),e._uU(53,"identifier"),e.qZA(),e.qZA(),e.TgZ(54,"li"),e._uU(55,"In C++, the type of a variable must be known at compile-time (when the program is compiled), and that type can not be changed without recompiling the program."),e.qZA(),e.TgZ(56,"li"),e._uU(57,"4 ways to initialize variables in C++"),e.qZA(),e.TgZ(58,"ul"),e.TgZ(59,"li"),e._uU(60,"int a; // Uninitialized"),e.qZA(),e.TgZ(61,"li"),e._uU(62,"int b = 5; // Copy Initialization (NOT RECOMMENDED)"),e.qZA(),e.TgZ(63,"li"),e._uU(64,"int c(6); // Direct Initialization (NOT RECOMMENDED)"),e.qZA(),e.TgZ(65,"li"),e._uU(66,"int d{7}; // List Initilization or Uniform Initilization (RECOMMENDED)"),e.qZA(),e.qZA(),e.TgZ(67,"li"),e._uU(68,"List initialization has the added benefit of disallowing \u201cnarrowing\u201d conversions, whereas copy initialization and direct initialization only prompt warning."),e.qZA(),e.TgZ(69,"ul"),e.TgZ(70,"li"),e._uU(71,"int a = 3.5; // will have warning"),e.qZA(),e.TgZ(72,"li"),e._uU(73,"int b(3.5); // will have warning"),e.qZA(),e.TgZ(74,"li"),e._uU(75,"int c{3.5}; // will have error"),e.qZA(),e.qZA(),e.TgZ(76,"li"),e._uU(77,"Initializing variables with empty braces {} will initialize the variable to either zero or empty"),e.qZA(),e.TgZ(78,"li"),e._uU(79,"Using '\\n' is typically preferred as compared to std::endl because the later has an extra unnecessary action of flushing the output."),e.qZA(),e.TgZ(80,"li"),e._uU(81,"Using this statement as example: int x{2 + 3}"),e.qZA(),e.TgZ(82,"ul"),e.TgZ(83,"li"),e._uU(84,"'2' and '3' are "),e.TgZ(85,"strong"),e._uU(86,"literal"),e.qZA(),e.qZA(),e.TgZ(87,"li"),e._uU(88,"'+' is "),e.TgZ(89,"strong"),e._uU(90,"operator"),e.qZA(),e.qZA(),e.TgZ(91,"li"),e._uU(92,"'2 + 3' is "),e.TgZ(93,"strong"),e._uU(94,"expression"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e._UZ(95,"mat-divider"),e.qZA(),e.TgZ(96,"div",7),e.TgZ(97,"h2"),e._uU(98,"Chapter 2: Functions and Files"),e.qZA(),e.TgZ(99,"ul"),e.TgZ(100,"li"),e._uU(101,"Nested functions are not supported in C++"),e.qZA(),e.TgZ(102,"li"),e._uU(103,"Your main function should return 0 if the program ran normally."),e.qZA(),e.TgZ(104,"li"),e._uU(105,"The C++ standard only defines the meaning of 3 status codes: "),e.TgZ(106,"ul"),e.TgZ(107,"li"),e._uU(108,"0 >> means the program executed successfully"),e.qZA(),e.TgZ(109,"li"),e._uU(110,"EXIT_SUCCESS >> means the program executed successfully"),e.qZA(),e.TgZ(111,"li"),e._uU(112,"EXIT_FAILURE >> means the program did not executed successfully"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(113,"li"),e._uU(114,"Failure to return a value from a function with a non-void return type (other than main) will result in undefined behavior."),e.qZA(),e.TgZ(115,"li"),e._uU(116,"A "),e.TgZ(117,"strong"),e._uU(118,"function parameter"),e.qZA(),e._uU(119," is a variable used in a function."),e.qZA(),e.TgZ(120,"li"),e._uU(121,"An "),e.TgZ(122,"strong"),e._uU(123,"argument"),e.qZA(),e._uU(124," is a value that is passed from the caller to the function"),e.qZA(),e.TgZ(125,"li"),e._uU(126,"The C++ specification does not define whether function calls evaluate arguments left to right or right to left. Take care not to make function calls where argument order matters."),e.qZA(),e.TgZ(127,"li"),e._uU(128,"Always do a "),e.TgZ(129,"strong"),e._uU(130,"forward declaration"),e.qZA(),e._uU(131," to tell the compiler about the existence of an identifier (including function) before actually defining the identifier."),e.qZA(),e.TgZ(132,"li"),e._uU(133,"Example:"),e.qZA(),e.TgZ(134,"pre"),e._uU(135,"                    "),e.TgZ(136,"code"),e._uU(137,'\n    #include <iostream>\n    int getValueFromUser(); // forward declaration\n    int multiplyBy2(int num); // forward declaration\n\n    int main()\n    {\n        int num{ getValueFromUser() }; // initialize num with the return value of getValueFromUser()\n        std::cout << num << " doubled is: " << multiplyBy2(num) << \'\\n\'; // num here is called argument\n        return 0;\n    }\n\n    int getValueFromUser()\n    {\n        std::cout << "Enter an integer: ";\n        int input{};\n        std::cin >> input;\n\n        return input;\n    }\n\n    // num here is called parameter\n    int multiplyBy2(int num) {\n        return num * 2;\n    }\n                    '),e.qZA(),e._uU(138,"\n                "),e.qZA(),e.TgZ(139,"li"),e._uU(140,"Declaration vs Definition"),e.qZA(),e.TgZ(141,"ul"),e.TgZ(142,"li"),e._uU(143,"A "),e.TgZ(144,"strong"),e._uU(145,"declaration"),e.qZA(),e._uU(146," is a statement that tells the compiler about the existence of an identifier and its type information."),e.qZA(),e.TgZ(147,"li"),e._uU(148,"A "),e.TgZ(149,"strong"),e._uU(150,"definition"),e.qZA(),e._uU(151," actually implements (for functions or types) or instantiates (for variables) the identifier."),e.qZA(),e.qZA(),e.TgZ(152,"li"),e._uU(153,"Namespace"),e.qZA(),e.TgZ(154,"ul"),e.TgZ(155,"li"),e._uU(156,"A "),e.TgZ(157,"strong"),e._uU(158,"namespace"),e.qZA(),e._uU(159," is a declarative region that provides a scope (called namespace scope) to the identifiers (the names of types, functions, variables, etc) inside it"),e.qZA(),e.TgZ(160,"li"),e._uU(161,"In C++, any name that is not defined inside a class, function, or a namespace is considered to be part of "),e.TgZ(162,"strong"),e._uU(163,"global namespace"),e.qZA(),e._uU(164," (sometimes called "),e.TgZ(165,"strong"),e._uU(166,"global scope"),e.qZA(),e._uU(167,")"),e.qZA(),e.TgZ(168,"li"),e._uU(169,"If there are identical names within an explicit namespace or global namespace, "),e.TgZ(170,"strong"),e._uU(171,"naming collision"),e.qZA(),e._uU(172," error will be produced."),e.qZA(),e.TgZ(173,"li"),e._uU(174,"A common namespace that we always use is "),e.TgZ(175,"span",8),e._uU(176,"std"),e.qZA(),e._uU(177,", which we always use the :: symbol (scope resolution operator) to link std namespace and the identifiers within it."),e.qZA(),e.TgZ(178,"ul"),e.TgZ(179,"li"),e._uU(180,'std::cout << "Hello world!"; // example'),e.qZA(),e.qZA(),e.TgZ(181,"li"),e._uU(182,"Another way to access identifiers inside a namespace is to use a "),e.TgZ(183,"span",8),e._uU(184,"using directive"),e.qZA(),e._uU(185," statement (for example: "),e.TgZ(186,"span",8),e._uU(187,"using namespace std;"),e.qZA(),e._uU(188,"). However, avoid using this as it violates the reason why namespaces were added in the first place."),e.qZA(),e.qZA(),e.TgZ(189,"li"),e._uU(190,"Translation & Preprocessor"),e.qZA(),e.TgZ(191,"ul"),e.TgZ(192,"li"),e._uU(193,"Prior to compilation, the code file goes through a phase known as "),e.TgZ(194,"strong"),e._uU(195,"translation"),e.qZA(),e._uU(196,"."),e.qZA(),e.TgZ(197,"li"),e._uU(198,"The translation phases involves the "),e.TgZ(199,"strong"),e._uU(200,"preprocessor"),e.qZA(),e._uU(201,", which can be best thought of as a separate program that manipulates the text in each code file."),e.qZA(),e.TgZ(202,"li"),e.TgZ(203,"strong"),e._uU(204,"Preprocessor directives"),e.qZA(),e._uU(205," are instructions that start with a # symbol and end with a newline (NOT a semicolon)."),e.qZA(),e.TgZ(206,"li"),e._uU(207,"Directives are resolved before compilation, from top to bottom on a file-by-file basis, therefore the output of the preprocessor contains no directives at all."),e.qZA(),e.TgZ(208,"li"),e._uU(209,"#include"),e.qZA(),e.TgZ(210,"ul"),e.TgZ(211,"li"),e._uU(212,"When you #include a file, the preprocessor replaces the #include directive with the contents of the included file."),e.qZA(),e.qZA(),e.TgZ(213,"li"),e._uU(214,"#define"),e.qZA(),e.TgZ(215,"ul"),e.TgZ(216,"li"),e._uU(217,"The #define directive can be used to create a macro."),e.qZA(),e.qZA(),e.TgZ(218,"li"),e._uU(219,"Macro"),e.qZA(),e.TgZ(220,"ul"),e.TgZ(221,"li"),e._uU(222,"In C++, a "),e.TgZ(223,"strong"),e._uU(224,"macro"),e.qZA(),e._uU(225," is a rule that defines how input text is converted into replacement output text."),e.qZA(),e.TgZ(226,"li"),e._uU(227,"Object-like macros with substitution text"),e.qZA(),e.TgZ(228,"ul"),e.TgZ(229,"li"),e._uU(230,"The preprocessor will replace any futher occurence of the identifier (normally in all capital letters and use underscores to represent spaces) by the "),e.TgZ(231,"span",8),e._uU(232,"substitution text"),e.qZA(),e._uU(233,"."),e.qZA(),e.TgZ(234,"li"),e._uU(235,"The text substitution action will not affect other preprocessor directives."),e.qZA(),e.TgZ(236,"pre"),e._uU(237,"                                            "),e.TgZ(238,"code"),e._uU(239,'\n    #include <iostream>\n    #define MY_NAME "ALEX"\n    int main() {\n        std::cout << "My name is: " << MY_NAME;\n    }\n                                            '),e.qZA(),e._uU(240,"\n                                        "),e.qZA(),e.qZA(),e.TgZ(241,"li"),e._uU(242,"Object-like macros without substitution text"),e.qZA(),e.TgZ(243,"ul"),e.TgZ(244,"li"),e._uU(245,"This is useless for doing text substitution but it is used for conditional compilation."),e.qZA(),e.TgZ(246,"li"),e._uU(247,"#define USE_YEN // example"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(248,"li"),e._uU(249,"Conditional Compilation"),e.qZA(),e.TgZ(250,"ul"),e.TgZ(251,"li"),e._uU(252,"The commonly used conditional compilation directives are:"),e.qZA(),e.TgZ(253,"ul"),e.TgZ(254,"li"),e._uU(255,"#ifdef"),e.qZA(),e.TgZ(256,"li"),e._uU(257,"#ifndef"),e.qZA(),e.TgZ(258,"li"),e._uU(259,"#endif"),e.qZA(),e.TgZ(260,"li"),e._uU(261,"#if 0"),e.qZA(),e.qZA(),e.TgZ(262,"li"),e._uU(263,"Example:"),e.qZA(),e.TgZ(264,"pre"),e._uU(265,"                                        "),e.TgZ(266,"code"),e._uU(267,'\n    #include <iostream>\n\n    #define PRINT_JOE\n        \n    int main() {\n        #ifdef PRINT_JOE\n            std::cout << "Joe is defined\\n"; // if PRINT_JOE is defined, compile this code\n        #endif\n            \n        #ifndef PRINT_BOB\n            std::cout << "Bob is not defined\\n"; // if PRINT_BOB is defined, compile this code\n        #endif\n\n        #if 0 // Don\'t compile anything starting here\n            std::cout << "Test 123\\n";\n        #endif // until this point\n            \n        return 0;\n    }\n                                        '),e.qZA(),e._uU(268,"\n                                    "),e.qZA(),e.TgZ(269,"li"),e.TgZ(270,"span",9),e._uU(271,"#ifdef PRINT_BOB"),e.qZA(),e._uU(272," can also be written as "),e.TgZ(273,"span",9),e._uU(274,"#if defined(PRINT_BOB)"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(275,"li"),e._uU(276,"Directives defined in one code file do not have impact on other code files in the same project. In other words, they are not in global scope."),e.qZA(),e.qZA(),e.TgZ(277,"li"),e._uU(278,"Header files"),e.qZA(),e.TgZ(279,"ul"),e.TgZ(280,"li"),e.TgZ(281,"strong"),e._uU(282,"Best practice"),e.qZA(),e._uU(283,": Use a .h suffix when naming your header files."),e.qZA(),e.TgZ(284,"li"),e.TgZ(285,"strong"),e._uU(286,"Best practice"),e.qZA(),e._uU(287,": When including a header file from the standard library, use the version without the .h extension if it exists."),e.qZA(),e.TgZ(288,"li"),e.TgZ(289,"strong"),e._uU(290,"Best practice"),e.qZA(),e._uU(291,": DO NOT put any function definition in header files."),e.qZA(),e.TgZ(292,"li"),e.TgZ(293,"strong"),e._uU(294,"Best practice"),e.qZA(),e._uU(295,": If a header file is paired with a code file (e.g. add.h with add.cpp), they should both have the same base name (add)."),e.qZA(),e.TgZ(296,"li"),e.TgZ(297,"strong"),e._uU(298,"Best practice"),e.qZA(),e._uU(299,": Code files should #include their paired header file (if one exists)."),e.qZA(),e.TgZ(300,"pre"),e._uU(301,"                            "),e.TgZ(302,"code"),e._uU(303,'\n    // IN add.h\n    int add (int x, int y)\n\n    // IN add.cpp\n    #include "add.h"\n    int add (int x, int y) {\n        return x + y;\n    }\n\n    // IN main.cpp\n    #include "add.h"         // double quotes\n    #include <iostream>      // angled quotes, and without .h extension\n    \n    int main()\n    {\n        std::cout << "The sum of 3 and 4 is " << add(3, 4) << \'\\n\';\n        return 0;\n    }\n                            '),e.qZA(),e._uU(304,"\n                        "),e.qZA(),e.TgZ(305,"li"),e._uU(306,"Angled brackets vs double quotes"),e.qZA(),e.TgZ(307,"ul"),e.TgZ(308,"li"),e._uU(309,"When we use angled brackets, we\u2019re telling the preprocessor that this is a header file we didn\u2019t write ourselves."),e.qZA(),e.TgZ(310,"ul"),e.TgZ(311,"li"),e._uU(312,"The compiler will search for the header only in the directories specified by the "),e.TgZ(313,"span",9),e._uU(314,"include directories"),e.qZA(),e._uU(315,"."),e.qZA(),e.TgZ(316,"li"),e._uU(317,"The "),e.TgZ(318,"span",9),e._uU(319,"include directories"),e.qZA(),e._uU(320," are configured as part of your project/IDE settings/compiler settings, and typically default to the directories containing the header files that come with your compiler and/or OS."),e.qZA(),e.TgZ(321,"li"),e._uU(322,"The compiler WILL NOT search for the header file in your project\u2019s source code directory."),e.qZA(),e.qZA(),e.TgZ(323,"li"),e._uU(324,"When we use double-quotes, we\u2019re telling the preprocessor that this is a header file that we wrote."),e.qZA(),e.TgZ(325,"ul"),e.TgZ(326,"li"),e._uU(327,"The compiler will first search for the header file in the current directory."),e.qZA(),e.TgZ(328,"li"),e._uU(329,"If it can\u2019t find a matching header there, it WILL then search the "),e.TgZ(330,"span",9),e._uU(331,"include directories"),e.qZA(),e._uU(332,"."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(333,"li"),e._uU(334,"Why doesn\u2019t iostream have a .h extension?"),e.qZA(),e.TgZ(335,"ul"),e.TgZ(336,"li"),e._uU(337,"iostream.h and iostream are two different header files."),e.qZA(),e.TgZ(338,"li"),e._uU(339,"iostream.h was initally used and the iostream is a new header file with std namespace implementation"),e.qZA(),e.TgZ(340,"li"),e._uU(341,"iostream.h is for the support of older programs"),e.qZA(),e.TgZ(342,"li"),e._uU(343,"Hence, when including a header file from the standard library, use the version without the .h extension if it exists."),e.qZA(),e.qZA(),e.TgZ(344,"li"),e.TgZ(345,"strong"),e._uU(346,"Best practice"),e.qZA(),e._uU(347,": Each file should explicitly #include all the header files needed for its compilation. DO NOT rely on headers included in other some other header files."),e.qZA(),e.TgZ(348,"li"),e.TgZ(349,"strong"),e._uU(350,"Best practice"),e.qZA(),e._uU(351,": Order your #includes as follows and sort each section alphabetically: "),e.TgZ(352,"ul"),e.TgZ(353,"li"),e._uU(354,"your own user-defined headers"),e.qZA(),e.TgZ(355,"li"),e._uU(356,"3rd party library headers"),e.qZA(),e.TgZ(357,"li"),e._uU(358,"standard library headers"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(359,"li"),e._uU(360,"Header Guards"),e.qZA(),e.TgZ(361,"ul"),e.TgZ(362,"li"),e._uU(363,"As header files may include other headers, it is possible that we include a same header multiple times, and this will lead to compilation error due to duplicate definition."),e.qZA(),e.TgZ(364,"li"),e._uU(365,"Hence, we need "),e.TgZ(366,"strong"),e._uU(367,"Header Guards"),e.qZA(),e._uU(368,", which are the conditional compilation directives."),e.qZA(),e.TgZ(369,"li"),e._uU(370,"Example:"),e.qZA(),e.TgZ(371,"pre"),e._uU(372,"                                "),e.TgZ(373,"code"),e._uU(374,'\n    // IN add.h\n    #ifndef ADD_H\n    #define ADD_H\n    int add(int x, int y);\n    ##endif\n\n    // IN add.cpp\n    #include "add.h"\n    int add(int x, int y) {\n        return x + y;\n    }\n\n    // IN main.cpp\n    #include "add.h"\n    #include <iostream>\n    \n    int main() {\n        std::cout << "1 + 2 = " << add(1,2) << \'\\n\';\n    \n        return 0;\n    }\n                                '),e.qZA(),e._uU(375,"\n                            "),e.qZA(),e.TgZ(376,"li"),e._uU(377,"#pragma once"),e.qZA(),e.TgZ(378,"ul"),e.TgZ(379,"li"),e.TgZ(380,"span",9),e._uU(381,"#pragma once"),e.qZA(),e._uU(382," is an alternative type of header guards"),e.qZA(),e.TgZ(383,"li"),e._uU(384,"However, "),e.TgZ(385,"span",9),e._uU(386,"#pragma once"),e.qZA(),e._uU(387," is NOT an official part of the C++ language, and not all compilers support it (although most modern compilers do)."),e.qZA(),e.TgZ(388,"li"),e.TgZ(389,"strong"),e._uU(390,"Best practice"),e.qZA(),e._uU(391,": For compatibility purposes, stick to traditional header guards."),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e._UZ(392,"mat-divider"),e.qZA(),e.TgZ(393,"div",10),e.TgZ(394,"h2"),e._uU(395,"Chapter 3: Debugging C++ Programs"),e.qZA(),e.TgZ(396,"p"),e._uU(397,"Debugging is general skill and debugging skill should be polished through hands-on. Hence, not many notes for this chapter."),e.qZA(),e.TgZ(398,"ul"),e.TgZ(399,"li"),e._uU(400,"A "),e.TgZ(401,"strong"),e._uU(402,"syntax error"),e.qZA(),e._uU(403," occurs when you write a statement that is not valid according to the grammar of the C++ language."),e.qZA(),e.TgZ(404,"li"),e._uU(405,"A "),e.TgZ(406,"strong"),e._uU(407,"semantic error"),e.qZA(),e._uU(408," occurs when a statement is syntactically valid, but does not do what the programmer intended."),e.qZA(),e.qZA(),e._UZ(409,"mat-divider"),e.qZA(),e.TgZ(410,"div",11),e.TgZ(411,"h2"),e._uU(412,"Chapter 4: Fundamental Data Types"),e.qZA(),e.TgZ(413,"ul"),e.TgZ(414,"li"),e._uU(415,"Bits, bytes, and memory addressing"),e.qZA(),e.TgZ(416,"ul"),e.TgZ(417,"li"),e._uU(418,"The smallest unit of memory is a binary digit (also called a bit)"),e.qZA(),e.TgZ(419,"li"),e._uU(420,"Memory is organized into sequential units called memory addresses"),e.qZA(),e.TgZ(421,"li"),e._uU(422,"Each memory address holds 1 byte of data (1 byte = 8 sequential bits)"),e.qZA(),e.TgZ(423,"li"),e._uU(424,"In C++, we typically work with \u201cbyte-sized\u201d chunks of data."),e.qZA(),e.qZA(),e.TgZ(425,"li"),e._uU(426,"_t suffix"),e.qZA(),e.TgZ(427,"ul"),e.TgZ(428,"li"),e._uU(429,"Many of the types defined in newer versions of C++ (e.g. std::nullptr_t) use a _t suffix."),e.qZA(),e.TgZ(430,"li"),e._uU(431,"This suffix means \u201ctype\u201d, and it\u2019s a common nomenclature applied to modern types."),e.qZA(),e.qZA(),e.TgZ(432,"li"),e._uU(433,"Object sizes and the sizeof operator"),e.qZA(),e.TgZ(434,"ul"),e.TgZ(435,"li"),e._uU(436,"A single object may use 2, 4, 8, or even more consecutive memory addresses. "),e.qZA(),e.TgZ(437,"li"),e._uU(438,"The amount of memory that an object uses is based on its data type."),e.qZA(),e.TgZ(439,"li"),e._uU(440,"The size of a given data type is dependent on the compiler and/or the computer architecture!"),e.qZA(),e.TgZ(441,"li"),e._uU(442,"C++ only guarantees that each fundamental data types will have a minimum size:"),e.qZA(),e.TgZ(443,"table",12),e.TgZ(444,"tr",13),e.TgZ(445,"th",14),e._uU(446,"Category"),e.qZA(),e.TgZ(447,"th",14),e._uU(448,"Types"),e.qZA(),e.TgZ(449,"th",14),e._uU(450,"Minumum Size"),e.qZA(),e.TgZ(451,"th",14),e._uU(452,"Note"),e.qZA(),e.qZA(),e.TgZ(453,"tr",13),e.TgZ(454,"td",15),e._uU(455,"Integral (Boolean)"),e.qZA(),e.TgZ(456,"td",15),e._uU(457,"bool"),e.qZA(),e.TgZ(458,"td",15),e._uU(459,"1 byte"),e.qZA(),e._UZ(460,"td",15),e.qZA(),e.TgZ(461,"tr",13),e.TgZ(462,"td",15),e._uU(463," Integral (Character) "),e.qZA(),e.TgZ(464,"td",15),e.TgZ(465,"div"),e._uU(466,"char"),e.qZA(),e.TgZ(467,"div"),e._uU(468,"wchar_t"),e.qZA(),e.TgZ(469,"div"),e._uU(470,"char8_t"),e.qZA(),e.TgZ(471,"div"),e._uU(472,"char16_t"),e.qZA(),e.TgZ(473,"div"),e._uU(474,"char32_t"),e.qZA(),e.qZA(),e.TgZ(475,"td",15),e.TgZ(476,"div"),e._uU(477,"1 byte"),e.qZA(),e.TgZ(478,"div"),e._uU(479,"2 bytes"),e.qZA(),e.TgZ(480,"div"),e._uU(481,"1 byte"),e.qZA(),e.TgZ(482,"div"),e._uU(483,"2 bytes"),e.qZA(),e.TgZ(484,"div"),e._uU(485,"4 bytes"),e.qZA(),e.qZA(),e.TgZ(486,"td",15),e.TgZ(487,"div"),e._uU(488,"Always 1 byte"),e.qZA(),e.TgZ(489,"div"),e._uU(490,"-"),e.qZA(),e.TgZ(491,"div"),e._uU(492,"-"),e.qZA(),e.TgZ(493,"div"),e._uU(494,"-"),e.qZA(),e.TgZ(495,"div"),e._uU(496,"-"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(497,"tr",13),e.TgZ(498,"td",15),e._uU(499,"Integral (Integer)"),e.qZA(),e.TgZ(500,"td",15),e.TgZ(501,"div"),e._uU(502,"short"),e.qZA(),e.TgZ(503,"div"),e._uU(504,"int"),e.qZA(),e.TgZ(505,"div"),e._uU(506,"long"),e.qZA(),e.TgZ(507,"div"),e._uU(508,"long long"),e.qZA(),e.qZA(),e.TgZ(509,"td",15),e.TgZ(510,"div"),e._uU(511,"2 bytes"),e.qZA(),e.TgZ(512,"div"),e._uU(513,"2 bytes"),e.qZA(),e.TgZ(514,"div"),e._uU(515,"4 bytes"),e.qZA(),e.TgZ(516,"div"),e._uU(517,"8 bytes"),e.qZA(),e.qZA(),e._UZ(518,"td",15),e.qZA(),e.TgZ(519,"tr",13),e.TgZ(520,"td",15),e._uU(521,"Floating Point"),e.qZA(),e.TgZ(522,"td",15),e.TgZ(523,"div"),e._uU(524,"float"),e.qZA(),e.TgZ(525,"div"),e._uU(526,"double"),e.qZA(),e.TgZ(527,"div"),e._uU(528,"long double"),e.qZA(),e.qZA(),e.TgZ(529,"td",15),e.TgZ(530,"div"),e._uU(531,"4 bytes"),e.qZA(),e.TgZ(532,"div"),e._uU(533,"8 bytes"),e.qZA(),e.TgZ(534,"div"),e._uU(535,"8 bytes"),e.qZA(),e.qZA(),e._UZ(536,"td",15),e.qZA(),e.qZA(),e.TgZ(537,"li"),e.TgZ(538,"strong"),e._uU(539,"Best practice"),e.qZA(),e._uU(540,": For maximum compatibility, you shouldn\u2019t assume that variables are larger than the specified minimum size."),e.qZA(),e.TgZ(541,"li"),e._uU(542,"The "),e.TgZ(543,"strong"),e._uU(544,"sizeof operator"),e.qZA(),e._uU(545," can be used to get the size in bytes of a date type or variable."),e.qZA(),e.qZA(),e.TgZ(546,"li"),e._uU(547,"integers"),e.qZA(),e.TgZ(548,"ul"),e.TgZ(549,"li"),e._uU(550,"By default, integers are "),e.TgZ(551,"strong"),e._uU(552,"signed"),e.qZA(),e._uU(553,", which means the number\u2019s sign is stored as part of the number (using a single bit called the sign bit)."),e.qZA(),e.TgZ(554,"li"),e._uU(555,"An n-bit signed variable has a range of -(2"),e.TgZ(556,"sup"),e._uU(557,"n-1"),e.qZA(),e._uU(558,") to 2"),e.TgZ(559,"sup"),e._uU(560,"n-1"),e.qZA(),e._uU(561,"-1."),e.qZA(),e.TgZ(562,"li"),e.TgZ(563,"strong"),e._uU(564,"Integer overflow"),e.qZA(),e._uU(565," occurs when we try to store a value that is outside the range of the type."),e.qZA(),e.TgZ(566,"li"),e.TgZ(567,"strong"),e._uU(568,"Warning: "),e.qZA(),e._uU(569,"Signed integer overflow will result in undefined behavior."),e.qZA(),e.TgZ(570,"li"),e.TgZ(571,"strong"),e._uU(572,"Warning: "),e.qZA(),e._uU(573,"When doing division with two integers (called integer division), C++ always produces an integer result. Since integers can\u2019t hold fractional values, any fractional portion is simply dropped (not rounded!)."),e.qZA(),e.qZA(),e.TgZ(574,"li"),e._uU(575,"unsigned integers"),e.qZA(),e.TgZ(576,"ul"),e.TgZ(577,"li"),e._uU(578,"An n-bit unsigned variable has a range of 0 to (2"),e.TgZ(579,"sup"),e._uU(580,"n"),e.qZA(),e._uU(581,")-1."),e.qZA(),e.TgZ(582,"li"),e._uU(583,"To define an unsigned integer, we use the unsigned keyword. By convention, this is placed before the type:"),e.qZA(),e.TgZ(584,"li"),e._uU(585,"Unsigned integer overflow"),e.qZA(),e.TgZ(586,"ul"),e.TgZ(587,"li"),e._uU(588,"When unsigned integer overflow happens, the value can be determined and it is not undefined dehaviour."),e.qZA(),e.TgZ(589,"li"),e._uU(590,"The result of overflowed unsigned integer will be the overflow value divided by number of integers it can present, and only the remainder kept."),e.qZA(),e.TgZ(591,"li"),e._uU(592,"For example, 1-byte unsigned integer has a range of 0 - 255, if the unsigned integer overflows to 256, it will be 0, and if it overflows to 513, the value will be 1. "),e.qZA(),e.TgZ(593,"li"),e._uU(594,"In another way round, -negative numbers will be wrapped also. For example, setting a 1-byte unsigned integer to -1 will get 255."),e.qZA(),e.TgZ(595,"li"),e.TgZ(596,"strong"),e._uU(597,"Warning: "),e.qZA(),e._uU(598,"Avoid using unsigned numbers, except in specific cases or when unavoidable."),e.qZA(),e.TgZ(599,"li"),e.TgZ(600,"strong"),e._uU(601,"Warning: "),e.qZA(),e._uU(602,"If you do use unsigned numbers, avoid mixing signed and unsigned numbers where possible."),e.qZA(),e.TgZ(603,"li"),e._uU(604,"However, unsigned numbers are preferred when:"),e.qZA(),e.TgZ(605,"ul"),e.TgZ(606,"li"),e._uU(607,"dealing with bit manipulation"),e.qZA(),e.TgZ(608,"li"),e._uU(609,"array indexing"),e.qZA(),e.TgZ(610,"li"),e._uU(611,"dealing with embedded system for performance reasons"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(612,"li"),e._uU(613,"Fixed-width integers and size_t"),e.qZA(),e.TgZ(614,"ul"),e.TgZ(615,"li"),e._uU(616,"C++ only guarantees that integer variables will have a minimum size -- but they could be larger, depending on the target system."),e.qZA(),e.TgZ(617,"li"),e._uU(618,"When dealing with types that have uncertain ranges, it is possible that a program might work on one architecture but no on another due to difference in the range that they support. "),e.qZA(),e.TgZ(619,"li"),e._uU(620,"To help with cross-platform portability, C99 defined a set of "),e.TgZ(621,"strong"),e._uU(622,"fixed-width integers"),e.qZA(),e._uU(623," (in the stdint.h header) that are guaranteed to have the same size on any architecture."),e.qZA(),e.TgZ(624,"li"),e.TgZ(625,"strong"),e._uU(626,"Warning: "),e.qZA(),e._uU(627,"Using fixed-width integers doesn't guarantee faster processing, it may be slower, it's depending on the architectures."),e.qZA(),e.TgZ(628,"li"),e.TgZ(629,"strong"),e._uU(630,"Warning: "),e.qZA(),e._uU(631,"Fixed-width integers should be avoided, as they may not be defined on all target architectures."),e.qZA(),e.qZA(),e.TgZ(632,"li"),e._uU(633,"Fast and least integers"),e.qZA(),e.TgZ(634,"ul"),e.TgZ(635,"li"),e._uU(636,"The "),e.TgZ(637,"strong"),e._uU(638,"fast type"),e.qZA(),e._uU(639," (std::int_fast#_t) provides the fastest signed integer type with a width of at least # bits (where # = 8, 16, 32, or 64)."),e.qZA(),e.TgZ(640,"li"),e._uU(641,"The "),e.TgZ(642,"strong"),e._uU(643,"least type"),e.qZA(),e._uU(644," (std::int_least#_t) provides the smallest signed integer type with a width of at least # bits (where # = 8, 16, 32, or 64)."),e.qZA(),e.TgZ(645,"pre",16),e._uU(646,"                            "),e.TgZ(647,"code"),e._uU(648,'\n    #include <cstdint>\n    #inlcude <iostream>\n    \n    int main() {\n        std::cout << "fast 8: " << sizeof(std::int_fast8_t) * 8 << " bits\\n";\n        std::cout << "fast 16: " << sizeof(std::int_fast16_t) * 8 << " bits\\n";\n        std::cout << "fast 32: " << sizeof(std::int_fast32_t) * 8 << " bits\\n";\n        std::cout << "least 8: " << sizeof(std::int_least8_t) * 8 << " bits\\n";\n        std::cout << "least 16: " << sizeof(std::int_least16_t) * 8 << " bits\\n";\n        std::cout << "least 32: " << sizeof(std::int_least32_t) * 8 << " bits\\n\\n";\n        return 0\n    }\n                            '),e.qZA(),e._uU(649,"\n                        "),e.qZA(),e.TgZ(650,"li"),e._uU(651,"These fast and least types are guaranteed to be defined, and are safe to use."),e.qZA(),e.TgZ(652,"li"),e.TgZ(653,"strong"),e._uU(654,"Best practice"),e.qZA(),e._uU(655,": Favor the std::int_fast#_t and std::int_least#_t integers when you need an integer guaranteed to be at least a certain minimum size."),e.qZA(),e.qZA(),e.TgZ(656,"li"),e.TgZ(657,"strong"),e._uU(658,"Warning: "),e.qZA(),e._uU(659,"std::int8_t and std::uint8_t may behave like chars instead of integers"),e.qZA(),e.TgZ(660,"ul"),e.TgZ(661,"li"),e._uU(662,"For example, for the case below, most systems will print 'A' and only some systems may print 65."),e.qZA(),e.TgZ(663,"pre",16),e._uU(664,"                                "),e.TgZ(665,"code"),e._uU(666,"\n    std::int8_t myint{65};\n    std::cout << myint;                                \n                                "),e.qZA(),e._uU(667,"\n                            "),e.qZA(),e.TgZ(668,"li"),e.TgZ(669,"strong"),e._uU(670,"Warning: "),e.qZA(),e._uU(671,"Avoid the 8-bit fixed-width integer types. If you do use them, note that they are often treated like chars."),e.qZA(),e.qZA(),e.TgZ(672,"li"),e.TgZ(673,"strong"),e._uU(674,"Integer best practices"),e.qZA(),e.qZA(),e.TgZ(675,"ul"),e.TgZ(676,"li"),e._uU(677,"Use int when the size of the integer doesn\u2019t matter (numbers always fit within the range of -65535 to 65535)"),e.qZA(),e.TgZ(678,"li"),e._uU(679,"For guaranteed size and better performance, use std::int_fast#_t."),e.qZA(),e.TgZ(680,"li"),e._uU(681,"For guaranteed size and better memory conservation, use std::int_least#_t."),e.qZA(),e.TgZ(682,"li"),e._uU(683,"Avoid unsigned types unless really needed."),e.qZA(),e.TgZ(684,"li"),e._uU(685,"Avoid 8-bit fixed-width integer types."),e.qZA(),e.TgZ(686,"li"),e._uU(687,"Avoid compiler-specific fixed-width integers, for example, Visual Studio defines __int8, __int16, etc"),e.qZA(),e.qZA(),e.TgZ(688,"li"),e._uU(689,"Scientic Notation"),e.qZA(),e.TgZ(690,"ul"),e.TgZ(691,"li"),e._uU(692,"Numbers in scientific notation take the following form: significand x 10"),e.TgZ(693,"sup"),e._uU(694,"exponent"),e.qZA(),e.qZA(),e.TgZ(695,"li"),e._uU(696,"For example: 1.2 x 10"),e.TgZ(697,"sup"),e._uU(698,"4"),e.qZA(),e.qZA(),e.TgZ(699,"li"),e._uU(700,"In C++, the letter \u2018e\u2019 (or sometimes \u2018E\u2019) is used to represent the \u201ctimes 10 to the power of\u201d part of the equation"),e.qZA(),e.TgZ(701,"li"),e._uU(702,"For example: 5.9736 x 10"),e.TgZ(703,"sup"),e._uU(704,"24"),e.qZA(),e._uU(705," could be written as 5.9736e24"),e.qZA(),e.TgZ(706,"li"),e._uU(707,"The digits in the significand (the part before the \u2018e\u2019) are called the significant digits. "),e.qZA(),e.TgZ(708,"li"),e._uU(709,"In standard scientfic notation, the trailing zeros after a decimal point represents the precision of a number. However, in C++, 88 and 88.000 are treated exactly the same by the compiler."),e.qZA(),e.qZA(),e.TgZ(710,"li"),e._uU(711,"Floating point numbers"),e.qZA(),e.TgZ(712,"ul"),e.TgZ(713,"li"),e._uU(714,"A floating point type variable is a variable that can hold a real number, such as 4320.0, -3.33, or 0.01226."),e.qZA(),e.TgZ(715,"li"),e._uU(716,"There are three different floating point data types: "),e.TgZ(717,"strong"),e._uU(718,"float"),e.qZA(),e._uU(719,", "),e.TgZ(720,"strong"),e._uU(721,"double"),e.qZA(),e._uU(722,", and "),e.TgZ(723,"strong"),e._uU(724,"long double"),e.qZA(),e._uU(725,"."),e.qZA(),e.TgZ(726,"li"),e._uU(727,"Floating point data types are always signed"),e.qZA(),e.TgZ(728,"li"),e._uU(729,"When using floating point literals, always include at least one decimal place (even if the decimal is 0). This helps the compiler understand that the number is a floating point number and not an integer."),e.qZA(),e.TgZ(730,"li"),e._uU(731,"By default, floating point literals default to type double. An f suffix is used to denote a literal of type float."),e.qZA(),e.TgZ(732,"li"),e._uU(733,"Best practice: Always make sure the type of your literals match the type of the variables they\u2019re being assigned to or used to initialize. Otherwise an unnecessary conversion will result, possibly with a loss of precision."),e.qZA(),e.TgZ(734,"pre"),e._uU(735,"                                "),e.TgZ(736,"code"),e._uU(737,"\n    int v{ 5.0 }; // will have conversion error\n    int w{ 5 }; \n    double x{ 5 }; // avoid using integer literals for floating point variables\n    double y{ 5.0 }; // no suffix means double type by default\n    float z{ 5.0f }; // f suffix means float type\n    std::cout << x << \"\\n\"; // output: 5\n    std::cout << y << \"\\n\"; // output: 5\n    std::cout << z << \"\\n\"; // output: 5\n    std::cout << 5.0 << '\\n'; // output: 5\n    std::cout << 6.7f << '\\n'; // output: 6.7\n    std::cout << 9876543.21 << '\\n'; // output: 9.87654e+06\n                                "),e.qZA(),e._uU(738,"\n                            "),e.qZA(),e.TgZ(739,"li"),e._uU(740,"When outputting floating point numbers, std::cout has a default precision of 6 -- that is, it assumes all floating point variables are only significant to 6 digits (the minimum precision of a float), and hence it will truncate anything after that."),e.qZA(),e.TgZ(741,"li"),e._uU(742,"We can override the default precision that std::cout shows by using an output manipulator function named "),e.TgZ(743,"strong"),e._uU(744,"std::setprecision()"),e.qZA(),e.qZA(),e.TgZ(745,"li"),e._uU(746,"floating numbers precision:"),e.qZA(),e.TgZ(747,"ul"),e.TgZ(748,"li"),e._uU(749,"Float values have between 6 and 9 digits of precision."),e.qZA(),e.TgZ(750,"li"),e._uU(751,"Double values have between 15 and 18 digits of precision."),e.qZA(),e.TgZ(752,"li"),e._uU(753,"Long double has a minimum precision of 15, 18, or 33 significant digits"),e.qZA(),e.qZA(),e.TgZ(754,"li"),e.TgZ(755,"strong"),e._uU(756,"Best practice"),e.qZA(),e._uU(757,": Favor double over float unless space is at a premium, as the lack of precision in a float will often lead to inaccuracies."),e.qZA(),e.TgZ(758,"pre"),e._uU(759,"                                "),e.TgZ(760,"code"),e._uU(761,"\n    #include <iomanip>\n    #include <iostream>\n\n    int main() {\n        std::cout << std::setprecision(16); // show 16 digits of precision\n        std::cout << 3.33333333333333333333333333333333333333f << '\\n'; // output: 3.333333253860474 (float has lower precision, hence more errors)\n        std::cout << 3.33333333333333333333333333333333333333 << '\\n'; // output: 3.333333333333333\n        float f{ 123456789.0f };\n        std::cout << std::setprecision(9); // to show 9 digits in f\n        std::cout << f << '\\n';\n        // output: 123456792 // float only has 7 digits of precision, hence it is only precise to 7 significant figures\n\n        return 0;\n    }\n                                "),e.qZA(),e._uU(762,"\n                            "),e.qZA(),e.TgZ(763,"li"),e.TgZ(764,"strong"),e._uU(765,"Warning: "),e.qZA(),e._uU(766,"Never assume your floating point numbers are exact."),e.qZA(),e.TgZ(767,"pre"),e._uU(768,"                                "),e.TgZ(769,"code"),e._uU(770,"\n    double d1{ 1.0 };\n    std::cout << d1 << '\\n'; // output: 1\n    double d2{ 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1 + 0.1}; // should be equal to 1.0\n    std::cout << std::setprecision(17);\n    std::cout << d2 << '\\n'; // output: 0.99999999999999989\n                                "),e.qZA(),e._uU(771,"\n                            "),e.qZA(),e.qZA(),e.TgZ(772,"li"),e._uU(773,"NaN & Inf"),e.qZA(),e.TgZ(774,"ul"),e.TgZ(775,"li"),e.TgZ(776,"strong"),e._uU(777,"NaN"),e.qZA(),e._uU(778,", stands for \u201cNot a Number\u201d"),e.qZA(),e.TgZ(779,"li"),e.TgZ(780,"strong"),e._uU(781,"Inf"),e.qZA(),e._uU(782,", represents infinity, can be positive or negative"),e.qZA(),e.TgZ(783,"li"),e._uU(784,"NaN and Inf are only available if the compiler uses a specific format (IEEE 754) for floating point numbers."),e.qZA(),e.TgZ(785,"li"),e._uU(786,"The following are results using Visual Studio 2019 on Windows"),e.qZA(),e.TgZ(787,"pre"),e._uU(788,"                                "),e.TgZ(789,"code"),e._uU(790,"\n    double posinf { 5.0 / zero }; // positive infinity\n    std::cout << posinf << '\\n'; // output: inf\n\n    double neginf { -5.0 / zero }; // negative infinity\n    std::cout << neginf << '\\n'; // output: -inf\n\n    double nan { zero / zero }; // not a number (mathematically invalid)\n    std::cout << nan << '\\n'; // output: -nan(ind)\n                                "),e.qZA(),e._uU(791,"\n                            "),e.qZA(),e.TgZ(792,"li"),e.TgZ(793,"strong"),e._uU(794,"Best practice"),e.qZA(),e._uU(795,": Avoid division by 0 altogether, even if your compiler supports it."),e.qZA(),e.qZA(),e.TgZ(796,"li"),e._uU(797,"Boolean values"),e.qZA(),e.TgZ(798,"ul"),e.TgZ(799,"li"),e._uU(800,"Boolean variables can have only two possible values: true, and false."),e.qZA(),e.TgZ(801,"li"),e._uU(802,"To declare a Boolean variable, we use the keyword bool."),e.qZA(),e.TgZ(803,"li"),e._uU(804,"In C++, std::cout prints 0 for false, and 1 for true:"),e.qZA(),e.TgZ(805,"li"),e._uU(806,"If you want std::cout to print \u201ctrue\u201d or \u201cfalse\u201d instead of 0 or 1, you can use std::boolalpha."),e.qZA(),e.TgZ(807,"li"),e._uU(808,"To make std::cin accept \u201cfalse\u201d and \u201ctrue\u201d as inputs, need to enable the std::boolalpha option as well."),e.qZA(),e.TgZ(809,"pre"),e._uU(810,"                            "),e.TgZ(811,"code"),e._uU(812,"\n    std::cout << true << '\\n'; // output: 0\n    std::cout << false << '\\n'; // output: 1\n    std::cout << std::boolalpha; // enable cout std::boolalpha\n    std::cout << true << '\\n'; // output: true\n    std::cout << false << '\\n'; // output: false\n    bool b{}; // default initialize to false\n    std::cout << \"Enter a boolean value: \";\n    std::cin >> std::boolalpha; // enable cin std::boolalpha\n    std::cin >> b; // input: 'true'\n    std::cout << b << '\\n'; // output: true \n                            "),e.qZA(),e._uU(813,"\n                        "),e.qZA(),e.qZA(),e.TgZ(814,"li"),e._uU(815,"Chars"),e.qZA(),e.TgZ(816,"ul"),e.TgZ(817,"li"),e._uU(818,"The "),e.TgZ(819,"strong"),e._uU(820,"char"),e.qZA(),e._uU(821," data type was designed to hold a character."),e.qZA(),e.TgZ(822,"li"),e._uU(823,"A character can be a single letter, number, symbol, or whitespace."),e.qZA(),e.TgZ(824,"li"),e._uU(825,"The char data type is an integral type, meaning the underlying value is stored as an integer."),e.qZA(),e.TgZ(826,"li"),e._uU(827,"The integer stored by a char variable are intepreted as an ASCII character."),e.qZA(),e.TgZ(828,"li"),e._uU(829,"Character literals are always placed between single quotes (e.g. \u2018g\u2019, \u20181\u2019, \u2018 \u2018)."),e.qZA(),e.TgZ(830,"li"),e._uU(831,"Key insight: Whenever you see C++ syntax (excluding the preprocessor) that makes use of angled brackets, the thing between the angled brackets will most likely be a type. This is typically how C++ deals with concepts that need a parameterizable type."),e.qZA(),e.TgZ(832,"li"),e._uU(833,"Char variables can only hold 1 character, if you input more than one characters in std::cin, it will put the rest in input buffer."),e.qZA(),e.TgZ(834,"li"),e._uU(835,"Char is defined by C++ to always be 1 byte in size."),e.qZA(),e.TgZ(836,"li"),e._uU(837,"By default, a char may be signed or unsigned (though it\u2019s usually signed)."),e.qZA(),e.TgZ(838,"li"),e._uU(839,"Single Quotes vs Double Quotes"),e.qZA(),e.TgZ(840,"ul"),e.TgZ(841,"li"),e._uU(842,"Stand-alone chars are always put in single quotes"),e.qZA(),e.TgZ(843,"li"),e._uU(844,"Text put between double quotes (e.g. \u201cHello, world!\u201d) is called a "),e.TgZ(845,"strong"),e._uU(846,"string"),e.qZA(),e.qZA(),e.TgZ(847,"li"),e.TgZ(848,"strong"),e._uU(849,"Warning: "),e.qZA(),e._uU(850,"Remember not use single quotes for string:"),e.qZA(),e.TgZ(851,"pre"),e._uU(852,"                                        "),e.TgZ(853,"code"),e._uU(854,"\n    std::int16_t x{ 6 };\n    std::int16_t y{ 12 };\n    std::cout << 'x: ' << x << '\\n'; // output: 78792006\n    std::cout << 'y: ' << y << '\\n'; // output: 794473612\n    std::cout << \"x: \" << x << '\\n'; // output: x: 6\n    std::cout << \"y: \" << y << '\\n'; // output: y: 12\n                                        "),e.qZA(),e._uU(855,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(856,"li"),e._uU(857,"wchar_t, char8_t, char16_t, and char32_t"),e.qZA(),e.TgZ(858,"ul"),e.TgZ(859,"li"),e._uU(860,"wchar_t should be avoided in almost all cases (except when interfacing with the Windows API). "),e.qZA(),e.TgZ(861,"li"),e._uU(862,"char16_t and char32_t were added to C++11 to provide explicit support for 16-bit and 32-bit Unicode characters."),e.qZA(),e.TgZ(863,"li"),e._uU(864,"char8_t has been added in C++20."),e.qZA(),e.TgZ(865,"li"),e._uU(866,"You won\u2019t need to use char8_t, char16_t, or char32_t unless you\u2019re planning on making your program Unicode compatible."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(867,"li"),e._uU(868,"String"),e.qZA(),e.TgZ(869,"ul"),e.TgZ(870,"li"),e._uU(871,"In C++, strings aren\u2019t a fundamental type. Hence, to use strings in C++, we first need to #include the <string> header to bring in the declarations for std::string."),e.qZA(),e.TgZ(872,"li"),e.TgZ(873,"strong"),e._uU(874,"Warning: "),e.qZA(),e._uU(875,"Don't use std::cin to read strings, use std::getline instead."),e.qZA(),e.TgZ(876,"li"),e.TgZ(877,"strong"),e._uU(878,"Best practice"),e.qZA(),e._uU(879,": If using std::getline to read strings, use the "),e.TgZ(880,"strong"),e._uU(881,"std::ws"),e.qZA(),e._uU(882," input manipulator to ignore leading whitespace. For detailed reason, refer to "),e.TgZ(883,"a",17),e._uU(884,"this tutorial"),e.qZA(),e._uU(885,"."),e.qZA(),e.TgZ(886,"pre"),e._uU(887,"                            "),e.TgZ(888,"code"),e._uU(889,'\n    #include <string>\n    #include <iostream>\n    \n    int main() {\n        std::cout << "Now enter your name: ";\n        std::string name{};\n        std::getline(std::cin >> std::ws, name); // note: added std::ws here\n        std::cout << "Hello, " << name << \'\\n\';\n        return 0;\n    }\n                            '),e.qZA(),e._uU(890,"\n                        "),e.qZA(),e.TgZ(891,"li"),e._uU(892,".length() can be used to get the length of a string"),e.qZA(),e.qZA(),e.TgZ(893,"li"),e._uU(894,"Literal constants"),e.qZA(),e.TgZ(895,"ul"),e.TgZ(896,"li"),e._uU(897,"Literal suffix can be used to change the type of a literal"),e.qZA(),e.TgZ(898,"pre"),e._uU(899,"                            "),e.TgZ(900,"code"),e._uU(901,'\n    std::cout << 5 << "\\n"; // 5 (no suffix) is type int (by default)\n    std::cout << 5u << "\\n"; // 5u is type unsigned int\n    std::cout << 5L << "\\n"; // 5L is type long\n    std::cout << 5.0 << "\\n"; // 5.0 (no suffix) is type double (by default)\n    std::cout << 5.0f << "\\n"; // 5.0f is type float\n    std::cout << 5.0L << "\\n"; // 5.0L is type logn double\n\n    // String literals\n    std::cout << "Hello, world!"; // "Hello, world!" is a C-style string literal\n    std::cout << "Hello," " world!"; // C++ will concatenate sequential string literals\n    \n    // Scientific notation for floating point literals\n    double pi { 3.14159 }; // 3.14159 is a double literal in standard notation\n    double avogadro { 6.02e23 }; // 6.02 x 10^23 is a double literal in scientific notation\n\n    // Octal and hexadecimal literals\n    int a{ 12 } // 12 in decimal \n    int b{ 014 }; // 0 before the number means this is octal // equivalent to 12 in decimal \n    int c{ 0xC} // 0x before the number means this is hexadecimal // equivalent to 12 in decimal\n                            '),e.qZA(),e._uU(902,"\n                        "),e.qZA(),e.TgZ(903,"li"),e._uU(904,"C++14 binary literals and digit separators"),e.qZA(),e.TgZ(905,"ul"),e.TgZ(906,"li"),e._uU(907,"In C++14, we can assign binary literals by using the 0b prefix:"),e.qZA(),e.TgZ(908,"pre"),e._uU(909,"                                    "),e.TgZ(910,"code"),e._uU(911,"\n    int bin{};        // assume 32-bit ints\n    bin = 0b1;        // assign binary 0000 0000 0000 0001 to the variable\n    bin = 0b11;       // assign binary 0000 0000 0000 0011 to the variable\n    bin = 0b1010;     // assign binary 0000 0000 0000 1010 to the variable\n    bin = 0b1111'0000; // quotation mark (\u2018) can be used as a digit separator\n    int bin2 { 0b1011'0010 };  // quotation mark (\u2018) can be used as a digit separator\n                                    "),e.qZA(),e._uU(912,"\n                                "),e.qZA(),e.qZA(),e.TgZ(913,"li"),e._uU(914,"Printing decimal, octal, hexadecimal, and binary numbers"),e.qZA(),e.TgZ(915,"ul"),e.TgZ(916,"li"),e._uU(917,"By default, C++ prints values in decimal."),e.qZA(),e.TgZ(918,"li"),e._uU(919,"You need to use std::dec, std::oct, and std::hex to print the number in different bases."),e.qZA(),e.TgZ(920,"pre"),e._uU(921,"                                    "),e.TgZ(922,"code"),e._uU(923,"\n    int x { 12 };\n    std::cout << x << '\\n'; // decimal (by default)\n    std::cout << std::hex << x << '\\n'; // hexadecimal\n    std::cout << x << '\\n'; // now hexadecimal\n    std::cout << std::oct << x << '\\n'; // octal\n    std::cout << std::dec << x << '\\n'; // return to decimal\n    std::cout << x << '\\n'; // decimal\n                                    "),e.qZA(),e._uU(924,"\n                                "),e.qZA(),e.TgZ(925,"li"),e._uU(926,"To print in binary, we need to use std::bitset:"),e.qZA(),e.TgZ(927,"pre"),e._uU(928,"                                        "),e.TgZ(929,"code"),e._uU(930,"\n    #include <bitset> // for std::bitset\n    #include <iostream>\n    \n    int main() {\n        // std::bitset<8> means we want to store 8 bits\n        std::bitset<8> bin1{ 0b1100'0101 }; // binary literal for binary 1100 0101\n        std::bitset<8> bin2{ 0xC5 }; // hexadecimal literal for binary 1100 0101\n        std::cout << bin1 << ' ' << bin2 << '\\n'; // output: 11000101 11000101\n        return 0;\n    }\n                                        "),e.qZA(),e._uU(931,"\n                                    "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(932,"li"),e._uU(933,"Constants"),e.qZA(),e.TgZ(934,"ul"),e.TgZ(935,"li"),e._uU(936,"Runtime constants & Compile-time constants"),e.qZA(),e.TgZ(937,"pre"),e._uU(938,"                                "),e.TgZ(939,"code"),e._uU(940,'\n    #include <iostream>\n    const int maxAge {100} // compile-time constant\n    constexpr int maxNameLength { 30 }; // compile-time constant\n    int main() {\n        constexpr double gravity { 9.8 }; // compile-time constant\n        std::cout << "Enter your age: ";\n        int age{};\n        std::cin >> age;\n        const int usersAge { age }; // runtime constant because the value isn\'t known until the program is run\n        constexpr int myAge { age }; // will have error because age is not known during compile-time\n        return 0;\n    }\n                                '),e.qZA(),e._uU(941,"\n                            "),e.qZA(),e.TgZ(942,"li"),e.TgZ(943,"strong"),e._uU(944,"Best practice"),e.qZA(),e._uU(945,": If the constant value is known before running the program, use "),e.TgZ(946,"strong"),e._uU(947,"constexpr"),e.qZA(),e._uU(948," to declare. Else, use "),e.TgZ(949,"strong"),e._uU(950,"const"),e.qZA(),e._uU(951,"."),e.qZA(),e.TgZ(952,"li"),e.TgZ(953,"strong"),e._uU(954,"Warning: "),e.qZA(),e._uU(955,"Avoid using #define to create symbolic constants macros."),e.qZA(),e.TgZ(956,"li"),e.TgZ(957,"strong"),e._uU(958,"Best practice"),e.qZA(),e._uU(959,": Use constexpr variables to provide a name and context for your magic numbers."),e.qZA(),e.qZA(),e.qZA(),e._UZ(960,"mat-divider"),e.qZA(),e.TgZ(961,"div",18),e.TgZ(962,"h2"),e._uU(963,"Chapter 5: Operators"),e.qZA(),e.TgZ(964,"ul"),e.TgZ(965,"li"),e._uU(966,"Operator's precedence determines which operator to be evaluated first."),e.qZA(),e.TgZ(967,"li"),e._uU(968,"Operator's associativity determines whether a operator is to be evaluated from left to right or right to left."),e.qZA(),e.TgZ(969,"li"),e._uU(970,"Precedence level 1 is the highest precedence level, and level 17 is the lowest. Operators with a higher precedence level get evaluated first."),e.qZA(),e.TgZ(971,"li"),e._uU(972,"The operators in C++ have different precedences and associativity, refer to "),e.TgZ(973,"a",19),e._uU(974,"this page"),e.qZA(),e._uU(975," for detailed list of operators."),e.qZA(),e.TgZ(976,"li"),e.TgZ(977,"strong"),e._uU(978,"Best practice"),e.qZA(),e._uU(979,": Use parentheses to make it clear how an expression should evaluate, even if they are technically unnecessary."),e.qZA(),e.TgZ(980,"li"),e._uU(981,"To do exponents in C++, #include the <cmath> header, and use the pow() function:"),e.qZA(),e.TgZ(982,"pre"),e._uU(983,"                        "),e.TgZ(984,"code"),e._uU(985,"\n    #include <cmath>\n\n    double x{ std::pow(2.0, 5.0) }; // 2 to the 5th power\n                        "),e.qZA(),e._uU(986,"\n                    "),e.qZA(),e.TgZ(987,"li"),e._uU(988,"Note that the parameters (and return value) of function pow() are of type double. Due to rounding errors in floating point numbers, the results of pow() may not be precise (even if you pass it integers or whole numbers)."),e.qZA(),e.TgZ(989,"li"),e._uU(990,"Hence, to do integer exponentiation, you should use your own function, however, please make sure that your integer exponentiation will not overflow the integral type:"),e.qZA(),e.TgZ(991,"pre"),e._uU(992,"                        "),e.TgZ(993,"code"),e._uU(994,"\n    #include <cstdint> // for std::int_fast64_t\n    #include <iostream>\n\n    // note: exp must be non-negative\n    std::int_fast64_t powInt(int base, int exp) {\n        std::int_fast64_t result{ 1 };\n        while (exp)\n        {\n            if (exp & 1)\n                result *= base;\n            exp >>= 1;\n            base *= base;\n        }\n\n        return result;\n    }\n\n    int main() {\n        std::cout << powInt(2, 4); // output: 16\n        return 0;\n    }\n                        "),e.qZA(),e._uU(995,"\n                    "),e.qZA(),e.TgZ(996,"li"),e.TgZ(997,"strong"),e._uU(998,"Warning: "),e.qZA(),e._uU(999,"C++ does not define the order of evaluation for function arguments or operator operands. Hence, don\u2019t use a variable that has a side effect applied to it more than once in a given statement. For example:"),e.qZA(),e.TgZ(1e3,"pre"),e._uU(1001,"                        "),e.TgZ(1002,"code"),e._uU(1003,"\n    int add(int x, int y) {\n        return x + y;\n    }\n    \n    int main() {\n        int x{ 5 };\n        int value = add(x, ++x); // is this 5 + 6, or 6 + 6?\n        // It depends on what order your compiler evaluates the function arguments in\n    \n        std::cout << value; // value could be 11 or 12, depending on how the above line evaluates!\n        return 0;\n    }  \n                        "),e.qZA(),e._uU(1004,"\n                    "),e.qZA(),e.TgZ(1005,"li"),e.TgZ(1006,"strong"),e._uU(1007,"Best practice"),e.qZA(),e._uU(1008,": Always parenthesize the conditional part of the "),e.TgZ(1009,"strong"),e._uU(1010,"conditional operator (?:)"),e.qZA(),e._uU(1011,", and consider parenthesizing the whole thing as well."),e.qZA(),e.TgZ(1012,"ul"),e.TgZ(1013,"li"),e._uU(1014,"This is because the ?: operator has a very low precedence"),e.qZA(),e.TgZ(1015,"li"),e._uU(1016,"For example: "),e.qZA(),e.TgZ(1017,"pre"),e._uU(1018,"                            "),e.TgZ(1019,"code"),e._uU(1020,"\n    int a{ 4 };\n    int b{ 2 };\n    std::cout << ((a > b) ? a : b) << '\\n'; // output: 4\n    std::cout << (a > b) ? a : b << '\\n'; // output: 1\n                            "),e.qZA(),e._uU(1021,"\n                        "),e.qZA(),e.TgZ(1022,"li"),e._uU(1023,"The second std::cout prints 1 because it was evaluated as (std::cout << (x > y)) ? x : y;"),e.qZA(),e.qZA(),e.TgZ(1024,"li"),e._uU(1025,"Conditional operator can be useful for initializing constant variables:"),e.qZA(),e.TgZ(1026,"pre"),e._uU(1027,"                        "),e.TgZ(1028,"code"),e._uU(1029,"\n    constexpr bool inBigClassroom { false };\n    constexpr int classSize { inBigClassroom ? 30 : 20 };\n                        "),e.qZA(),e._uU(1030,"\n                    "),e.qZA(),e.TgZ(1031,"li"),e._uU(1032,"If a high level of precision is required, comparing floating point values using any of the relational operators can be dangerous."),e.qZA(),e.TgZ(1033,"li"),e.TgZ(1034,"strong"),e._uU(1035,"Warning: "),e.qZA(),e._uU(1036,"Avoid using operator== and operator!= with floating point operands, as the floating numbers might be slightly different due to rounding errors."),e.qZA(),e.TgZ(1037,"li"),e._uU(1038,"For floating point comparison, you are recommended to read the "),e.TgZ(1039,"a",20),e._uU(1040,"full tutorial and explanation"),e.qZA(),e._uU(1041,"."),e.qZA(),e.TgZ(1042,"li"),e._uU(1043,"Short circuit evaluation"),e.qZA(),e.TgZ(1044,"ul"),e.TgZ(1045,"li"),e._uU(1046,"Examples of short circuit evaluation"),e.qZA(),e.TgZ(1047,"pre"),e._uU(1048,"                                "),e.TgZ(1049,"code"),e._uU(1050,"\n    if (x == 1 && y ==2 ) {\n        // if x == 1 is false, y == 2 is not evaluated, short circuit evaluation happen\n    }\n\n    if (x > 0 || y > 2) {\n        // if x > 0 is true, y > 2 is not evaluated, short circuit evaluation happen\n    }\n                                "),e.qZA(),e._uU(1051,"\n                            "),e.qZA(),e.TgZ(1052,"li"),e._uU(1053,"Short circuit evaluation is good for optimization purposes, but it will has bad effects when happening on expressions with side effects, for example:"),e.qZA(),e.TgZ(1054,"pre"),e._uU(1055,"                            "),e.TgZ(1056,"code"),e._uU(1057,"\n        if (x == 1 && ++y == 2) // if x == 1 is false, the ++y will not be executed\n                            "),e.qZA(),e._uU(1058,"\n                        "),e.qZA(),e.TgZ(1059,"li"),e._uU(1060,"Hence, avoid using expressions with side effects in conjunction with binary logical operators."),e.qZA(),e.qZA(),e.TgZ(1061,"li"),e._uU(1062,"De Morgan's Law"),e.qZA(),e.TgZ(1063,"ul"),e.TgZ(1064,"li"),e._uU(1065,"!(x && y) is equivalent to !x || !y"),e.qZA(),e.TgZ(1066,"li"),e._uU(1067,"!(x || y) is equivalent to !x && !y"),e.qZA(),e.qZA(),e.TgZ(1068,"li"),e._uU(1069,"Logical XOR"),e.qZA(),e.TgZ(1070,"ul"),e.TgZ(1071,"li"),e._uU(1072,"C++ DOES NOT provide a logical XOR operator. "),e.qZA(),e.TgZ(1073,"li"),e._uU(1074,"However, you can easily mimic logical XOR using the inequality operator (!=):"),e.qZA(),e.TgZ(1075,"ul"),e.TgZ(1076,"li"),e._uU(1077,"if (a != b) ... // a XOR b, assuming a and b are Booleans"),e.qZA(),e.TgZ(1078,"li"),e._uU(1079,"if (a != b != c != d) ... // a XOR b XOR c XOR d, assuming a, b, c, and d are Booleans"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e._UZ(1080,"mat-divider"),e.qZA(),e.TgZ(1081,"div",21),e.TgZ(1082,"h2"),e._uU(1083,"Chapter O: Bit Manipulation"),e.qZA(),e.TgZ(1084,"ul"),e.TgZ(1085,"li"),e._uU(1086,"Bit position is counted from right to left, starting from zero. For example, given a bit sequence 00000101, we can say that the bits in position 0 and 2 have value 1."),e.qZA(),e.TgZ(1087,"li"),e._uU(1088,"std::bitset provides 4 key functions that are useful for doing bit manipulation: "),e.qZA(),e.TgZ(1089,"ul"),e.TgZ(1090,"li"),e._uU(1091,"test() allows us to query whether a bit is a 0 or 1"),e.qZA(),e.TgZ(1092,"li"),e._uU(1093,"set() allows us to turn a bit on (this will do nothing if the bit is already on)"),e.qZA(),e.TgZ(1094,"li"),e._uU(1095,"reset() allows us to turn a bit off (this will do nothing if the bit is already off)"),e.qZA(),e.TgZ(1096,"li"),e._uU(1097,"flip() allows us to flip a bit value from a 0 to a 1 or vice versa"),e.qZA(),e.qZA(),e.TgZ(1098,"li"),e.TgZ(1099,"strong"),e._uU(1100,"Best practice: "),e.qZA(),e._uU(1101,"Use unsigned integer or std::bitset for bit manipulation, avoid using signed integer."),e.qZA(),e.TgZ(1102,"pre"),e._uU(1103,"                        "),e.TgZ(1104,"code"),e._uU(1105,"\n    #include <bitset>\n    #include <iostream>\n    \n    int main() {\n        // bitset functions\n        std::bitset<8> bits{ 0b0000'0101u }; // we need 8 bits, start with bit pattern 0000 0101\n        bits.set(3); // set bit position 3 to 1 (now we have 0000 1101)\n        bits.flip(4); // flip bit 4 (now we have 0001 1101)\n        bits.reset(4); // set bit 4 back to 0 (now we have 0000 1101)\n        std::cout << \"All the bits: \" << bits << '\\n';  // output: 0000 1101\n        std::cout << \"Bit 3 has value: \" << bits.test(3) << '\\n'; // output: 1\n        std::cout << \"Bit 4 has value: \" << bits.test(4) << '\\n'; // output: 0\n        \n        // Bitwise Operators\n        std::bitset<8> x{ 0b0000'0110u };\n        std::bitset<8> y{ 0b0001'0100u };\n        std::cout << x << '\\n';         // output: 00000110\n        std::cout << y << '\\n';         // output: 00010100\n        std::cout << (x << 1) << '\\n';  // output: 00001100\n        std::cout << (y >> 2) << '\\n';  // output: 00000101\n        std::cout << (x | y) << '\\n';   // output: 00010110\n        std::cout << (x & y) << '\\n';   // output: 00000100\n        std::cout << (x ^ y) << '\\n';   // output: 00010010\n        std::cout << ~x << '\\n';        // output: 11111001\n    \n        return 0;\n    }\n                        "),e.qZA(),e._uU(1106,"\n                    "),e.qZA(),e.TgZ(1107,"li"),e._uU(1108,"C++ also provides bitwise assignment operators. For example, you can write x >>= 2, instead of x = x >> 2"),e.qZA(),e.TgZ(1109,"li"),e._uU(1110,"Bit masks"),e.qZA(),e.TgZ(1111,"ul"),e.TgZ(1112,"li"),e._uU(1113,"A bit mask is a predefined set of bits that is used to select which specific bits will be modified by subsequent operations."),e.qZA(),e.TgZ(1114,"pre"),e._uU(1115,"                                "),e.TgZ(1116,"code"),e._uU(1117,"\n    constexpr std::uint_fast8_t mask0{ 0b0000'0001 }; // represents bit 0\n    constexpr std::uint_fast8_t mask1{ 0b0000'0010 }; // represents bit 1\n    constexpr std::uint_fast8_t mask2{ 0b0000'0100 }; // represents bit 2\n    constexpr std::uint_fast8_t mask3{ 0b0000'1000 }; // represents bit 3\n    constexpr std::uint_fast8_t mask4{ 0b0001'0000 }; // represents bit 4\n    constexpr std::uint_fast8_t mask5{ 0b0010'0000 }; // represents bit 5\n    constexpr std::uint_fast8_t mask6{ 0b0100'0000 }; // represents bit 6\n    constexpr std::uint_fast8_t mask7{ 0b1000'0000 }; // represents bit 7\n    std::uint_fast8_t switches{ 0b0000'1010 }; // assuming each bit control 1 switch\n    std::cout << \"switch 1 is \" << ((switches & mask1) ? \"on\\n\" : \"off\\n\"); // check switch1 status\n    switches |= mask7; // turn on switch 7\n    std::cout << std::bitset<8> {switches} << '\\n'; // output: 10001010\n    switches &= ~mask1; // turn off switch 1\n    std::cout << std::bitset<8> {switches} << '\\n'; // output: 10001000\n    switches ^= mask2; // toggle switch 2\n    std::cout << std::bitset<8> {switches} << '\\n'; // output: 10001100\n    switches |= (mask5 | mask6); // bit masks involving multiple bits\n    std::cout << std::bitset<8> {switches} << '\\n'; // output: 11101100\n                                "),e.qZA(),e._uU(1118,"\n                            "),e.qZA(),e.qZA(),e.TgZ(1119,"li"),e._uU(1120,"Signed numbers and two's complement"),e.qZA(),e.TgZ(1121,"ul"),e.TgZ(1122,"li"),e._uU(1123,"Signed integers are typically stored using a method known as "),e.TgZ(1124,"strong"),e._uU(1125,"two\u2019s complement"),e.qZA(),e._uU(1126,"."),e.qZA(),e.TgZ(1127,"li"),e._uU(1128,"In two\u2019s complement, the leftmost (most significant) bit is used as the sign bit."),e.qZA(),e.TgZ(1129,"li"),e._uU(1130,"A 0 sign bit means the number is positive, and a 1 sign bit means the number is negative."),e.qZA(),e.TgZ(1131,"li"),e._uU(1132,"Positive signed numbers are represented in binary just like positive unsigned numbers"),e.qZA(),e.TgZ(1133,"li"),e._uU(1134,"Negative signed numbers are represented in binary as the bitwise inverse of the positive number, plus 1."),e.qZA(),e.TgZ(1135,"li"),e._uU(1136,"Converting decimal to binary (two\u2019s complement)"),e.qZA(),e.TgZ(1137,"ul"),e.TgZ(1138,"li"),e._uU(1139,"For example: representing -5 in binary two's complement"),e.qZA(),e.TgZ(1140,"li"),e._uU(1141,"5 is 0000 0101"),e.qZA(),e.TgZ(1142,"li"),e._uU(1143,"Invert the bits: 1111 1010"),e.qZA(),e.TgZ(1144,"li"),e._uU(1145,"Add 1 to the bits: 1111 1011 // final answer"),e.qZA(),e.qZA(),e.TgZ(1146,"li"),e._uU(1147,"Converting binary (two's complement) to decimal"),e.qZA(),e.TgZ(1148,"ul"),e.TgZ(1149,"li"),e._uU(1150,"For example: converting 1001 1110 from two\u2019s complement into a decimal number"),e.qZA(),e.TgZ(1151,"li"),e._uU(1152,"The signed bit value is 1, so cannot straight away convert to decimal."),e.qZA(),e.TgZ(1153,"li"),e._uU(1154,"Invert the bits: 0110 0001"),e.qZA(),e.TgZ(1155,"li"),e._uU(1156,"Add 1 to the bits: 0110 0010"),e.qZA(),e.TgZ(1157,"li"),e._uU(1158,"0110 0010 in decimal is 98, hence, the final answer is -98"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e._UZ(1159,"mat-divider"),e.qZA(),e.TgZ(1160,"div",22),e.TgZ(1161,"h2"),e._uU(1162,"Chapter 6: Scope, Duration, and Linkage"),e.qZA(),e.TgZ(1163,"ul"),e.TgZ(1164,"li"),e.TgZ(1165,"strong"),e._uU(1166,"Best practice: "),e.qZA(),e._uU(1167,"Keep the nesting level of your functions to 3 or less."),e.qZA(),e.TgZ(1168,"li"),e._uU(1169,"Defining your own namespaces"),e.qZA(),e.TgZ(1170,"ul"),e.TgZ(1171,"li"),e._uU(1172,"C++ allows us to define our own "),e.TgZ(1173,"strong"),e._uU(1174,"user-defined namespaces"),e.qZA(),e._uU(1175," via the "),e.TgZ(1176,"span",8),e._uU(1177,"namespace"),e.qZA(),e._uU(1178," keyword."),e.qZA(),e.TgZ(1179,"li"),e._uU(1180,"Namespace identifiers are typically non-capitalized."),e.qZA(),e.TgZ(1181,"li"),e._uU(1182,"With namespaces, naming collisions can be prevented:"),e.qZA(),e.TgZ(1183,"mat-tab-group",23),e.TgZ(1184,"mat-tab",24),e.TgZ(1185,"pre"),e._uU(1186,"                                        "),e.TgZ(1187,"code"),e._uU(1188,"\n        // IN foo.h\n        #ifndef FOO_H\n        #define FOO_H\n    \n        namespace foo {\n            int doSomething(int x, int y);\n        }\n    \n        #endif\n                                        "),e.qZA(),e._uU(1189,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(1190,"mat-tab",25),e.TgZ(1191,"pre"),e._uU(1192,"                                        "),e.TgZ(1193,"code"),e._uU(1194,'\n        // IN foo.cpp\n        #include "foo.h"\n        namespace foo // define a namespace named foo\n        {\n            // This doSomething() belongs to namespace foo\n            int doSomething(int x, int y)\n            {\n                return x + y;\n            }\n        }\n                                        '),e.qZA(),e._uU(1195,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(1196,"mat-tab",26),e.TgZ(1197,"pre"),e._uU(1198,"                                        "),e.TgZ(1199,"code"),e._uU(1200,"\n        // IN goo.h\n        #ifndef GOO_H\n        #define GOO_H\n    \n        namespace goo {\n            int doSomething(int x, int y);\n        }\n    \n        #endif\n                                        "),e.qZA(),e._uU(1201,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(1202,"mat-tab",27),e.TgZ(1203,"pre"),e._uU(1204,"                                        "),e.TgZ(1205,"code"),e._uU(1206,'\n        // IN goo.cpp\n        #include "goo.h"\n        namespace goo // define a namespace named goo\n        {\n            // This doSomething() belongs to namespace goo\n            int doSomething(int x, int y)\n            {\n                return x - y;\n            }\n        }\n                                        '),e.qZA(),e._uU(1207,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(1208,"mat-tab",28),e.TgZ(1209,"pre"),e._uU(1210,"                                        "),e.TgZ(1211,"code"),e._uU(1212,"\n        // IN chapter6.cpp\n        #include <iostream>\n        #include \"foo.h\"\n        #include \"goo.h\"\n        \n        int main() {\n            std::cout << goo::doSomething(4, 3) << '\\n'; // output: 7\n            std::cout << foo::doSomething(4, 3) << '\\n'; // output: 1\n            return 0;\n        }\n                                        "),e.qZA(),e._uU(1213,"\n                                    "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(1214,"li"),e._uU(1215,"Nested namespaces"),e.qZA(),e.TgZ(1216,"ul"),e.TgZ(1217,"li"),e._uU(1218,"Namespaces can be nested inside other namespaces. For example:"),e.qZA(),e.TgZ(1219,"pre"),e._uU(1220,"                                        "),e.TgZ(1221,"code"),e._uU(1222,"\n    namespace foo {\n        namespace goo {\n            int add(int x, int y) {\n                return x + y;\n            }\n        }\n    }                                            \n                                        "),e.qZA(),e._uU(1223,"\n                                    "),e.qZA(),e.qZA(),e.TgZ(1224,"li"),e._uU(1225,"You also can create "),e.TgZ(1226,"strong"),e._uU(1227,"namespace alliases"),e.qZA(),e._uU(1228,". For example:"),e.qZA(),e.TgZ(1229,"pre"),e._uU(1230,"                                "),e.TgZ(1231,"code"),e._uU(1232,"\n                                    \nint main() {\n    namespace active = foo::goo; // active now refers to foo::goo\n    std::cout << active::add(1, 2) << '\\n'; // This is really foo::goo::add()\n    return 0;\n}\n                                "),e.qZA(),e._uU(1233,"\n                            "),e.qZA(),e.qZA(),e.TgZ(1234,"li"),e._uU(1235,"Local variables"),e.qZA(),e.TgZ(1236,"ul"),e.TgZ(1237,"li"),e._uU(1238,"Local variables have "),e.TgZ(1239,"strong"),e._uU(1240,"block scope"),e.qZA(),e.qZA(),e.TgZ(1241,"li"),e._uU(1242,"Local variables have "),e.TgZ(1243,"strong"),e._uU(1244,"automatic storage duration"),e.qZA(),e._uU(1245,", which means they are created at the point of definition and destroyed at the end of the block they are defined in."),e.qZA(),e.TgZ(1246,"li"),e._uU(1247,"Local variables have "),e.TgZ(1248,"strong"),e._uU(1249,"no linkage"),e.qZA(),e._uU(1250,", which means that each declaration refers to a unique object."),e.qZA(),e.TgZ(1251,"li"),e._uU(1252,"Scope & Linkage"),e.qZA(),e.TgZ(1253,"ul"),e.TgZ(1254,"li"),e.TgZ(1255,"strong"),e._uU(1256,"Scope"),e.qZA(),e._uU(1257," defines where a single declaration can be seen and used"),e.qZA(),e.TgZ(1258,"li"),e.TgZ(1259,"strong"),e._uU(1260,"Linkage"),e.qZA(),e._uU(1261," defines whether multiple declarations refer to the same object or not."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(1262,"li"),e._uU(1263,"Global variables"),e.qZA(),e.TgZ(1264,"ul"),e.TgZ(1265,"li"),e.TgZ(1266,"strong"),e._uU(1267,"Best practice: "),e.qZA(),e._uU(1268,"Consider using a \u201cg\u201d or \u201cg_\u201d prefix for global variables to help differentiate them from local variables."),e.qZA(),e.TgZ(1269,"li"),e._uU(1270,"Global variables have "),e.TgZ(1271,"strong"),e._uU(1272,"file scope"),e.qZA(),e._uU(1273," (also called global scope). They are visible from the point of declaration until the end of the file in which they are declared."),e.qZA(),e.TgZ(1274,"li"),e._uU(1275,"Global variables are created when the program starts, and destroyed when it ends. This is called "),e.TgZ(1276,"strong"),e._uU(1277,"static duration"),e.qZA(),e._uU(1278,"."),e.qZA(),e.TgZ(1279,"li"),e._uU(1280,"Unlike local variables, which are uninitialized by default, static variables are zero-initialized by default, except const variables."),e.qZA(),e.TgZ(1281,"li"),e.TgZ(1282,"strong"),e._uU(1283,"Best practice: "),e.qZA(),e._uU(1284,"Use local variables instead of global variables whenever possible."),e.qZA(),e.qZA(),e.TgZ(1285,"li"),e._uU(1286,"Internal linkage & External linkage"),e.qZA(),e.TgZ(1287,"ul"),e.TgZ(1288,"li"),e._uU(1289,"Internal Linkage"),e.qZA(),e.TgZ(1290,"ul"),e.TgZ(1291,"li"),e._uU(1292,"An identifier with "),e.TgZ(1293,"strong"),e._uU(1294,"internal linkage"),e.qZA(),e._uU(1295," can be seen and used within a single file, but it is not accessible from other files (that is, it is not exposed to the linker)."),e.qZA(),e.TgZ(1296,"li"),e._uU(1297,"Global variables with internal linkage are sometimes called "),e.TgZ(1298,"strong"),e._uU(1299,"internal variables"),e.qZA(),e._uU(1300,"."),e.qZA(),e.TgZ(1301,"li"),e._uU(1302,"Non-constant global variables have external linkage by default."),e.qZA(),e.TgZ(1303,"li"),e._uU(1304,"const and constexpr global variables have internal linkage by default."),e.qZA(),e.TgZ(1305,"li"),e._uU(1306,"To make a non-constant global variable internal, we use the "),e.TgZ(1307,"strong"),e._uU(1308,"static"),e.qZA(),e._uU(1309," keyword."),e.qZA(),e.TgZ(1310,"li"),e._uU(1311,"Functions are also default to external linkage, but can be set to internal linkage via the static keyword:"),e.qZA(),e.qZA(),e.TgZ(1312,"li"),e._uU(1313,"External linkage"),e.qZA(),e.TgZ(1314,"ul"),e.TgZ(1315,"li"),e._uU(1316,"An identifier with "),e.TgZ(1317,"strong"),e._uU(1318,"external linkage"),e.qZA(),e._uU(1319," can be seen and used both from the file in which it is defined, and from other code files (via a forward declaration)."),e.qZA(),e.TgZ(1320,"li"),e._uU(1321,"Global variables with external linkage are sometimes called "),e.TgZ(1322,"strong"),e._uU(1323,"external variables"),e.qZA(),e._uU(1324,"."),e.qZA(),e.TgZ(1325,"li"),e._uU(1326,"To make a global variable external (and thus accessible by other files), we can use the "),e.TgZ(1327,"strong"),e._uU(1328,"extern"),e.qZA(),e._uU(1329," keyword to do so:"),e.qZA(),e.TgZ(1330,"li"),e.TgZ(1331,"strong"),e._uU(1332,"Warning: "),e.qZA(),e._uU(1333,"If you want to define an uninitialized non-const global variable, do not use the extern keyword, otherwise C++ will think you\u2019re trying to make a forward declaration for the variable."),e.qZA(),e.TgZ(1334,"li"),e.TgZ(1335,"strong"),e._uU(1336,"Warning: "),e.qZA(),e._uU(1337,"Although constexpr variables can be given external linkage via the extern keyword, they can not be forward declared, so there is no value in giving them external linkage."),e.qZA(),e.qZA(),e.TgZ(1338,"pre"),e._uU(1339,"                            "),e.TgZ(1340,"code"),e._uU(1341,"\n    // IN abc.cpp\n    extern const int g_w{ 3 }; // this extern gives g_w external linkage\n\n    int minus(int x, int y) {\n        return (x - y);\n    }\n                            "),e.qZA(),e._uU(1342,"\n                        "),e.qZA(),e.TgZ(1343,"pre"),e._uU(1344,"                            "),e.TgZ(1345,"code"),e._uU(1346,"\n    // IN chapter6.cpp\n    #include <iostream>\n        \n    int g_s; // non-constant global variables have external linkage by default\n    static int g_x; // the static keyword is used to make a non-constant global have internal linkage\n    const int g_y{ 4 }; // const global variables have internal linkage by default\n    constexpr int g_z{ 5 }; // constexpr global variables have internal linkage by default\n    static int add(int x, int y); // set this function to internal linkage\n    \n    // Forward Declarations\n    int minus(int x, int y); // functions are external linkage by default\n    extern const int g_w; // this extern is a forward declaration of a variable named g_w that is defined in the abc.cpp\n    \n    int add(int x, int y) {\n        return (x + y);\n    }\n    \n    int main() {\n        std::cout << add(g_y, g_z) << '\\n'; // output: 9\n        std::cout << minus(g_z, g_y) << '\\n'; // output: 1\n        std::cout << add(g_y, g_w) << '\\n'; // output: 7\n        return 0;\n    }\n                            "),e.qZA(),e._uU(1347,"\n                        "),e.qZA(),e.qZA(),e.TgZ(1348,"li"),e._uU(1349,"Static Local Variables"),e.qZA(),e.TgZ(1350,"ul"),e.TgZ(1351,"li"),e._uU(1352,"Using the static keyword on a local variable changes its duration from automatic duration to static duration."),e.qZA(),e.TgZ(1353,"li"),e._uU(1354,"The following shows the difference between automatic duration and static duration:"),e.qZA(),e.TgZ(1355,"mat-tab-group",23),e.TgZ(1356,"mat-tab",29),e.TgZ(1357,"pre"),e._uU(1358,"                                    "),e.TgZ(1359,"code"),e._uU(1360,"\n    // AUTOMATIC DURATION DEMO\n    #include <iostream>\n\n    void incrementAndPrint() {\n        int value{ 1 }; // automatic duration by default\n        ++value;\n        std::cout << value << '\\n';\n    } // value is destroyed here\n    \n    int main() {\n        incrementAndPrint(); // output: 2\n        incrementAndPrint(); // output: 2\n        incrementAndPrint(); // output: 2\n        return 0;\n    }\n                                    "),e.qZA(),e._uU(1361,"\n                                "),e.qZA(),e.qZA(),e.TgZ(1362,"mat-tab",30),e.TgZ(1363,"pre"),e._uU(1364,"                                    "),e.TgZ(1365,"code"),e._uU(1366,"\n    // STATIC DURATION DEMO\n    #include <iostream>\n\n    void incrementAndPrint() {\n        static int s_value{ 1 }; // static duration via static keyword.  This initializer is only executed once.\n        ++s_value;\n        std::cout << s_value << '\\n';\n    } // s_value is not destroyed here, but becomes inaccessible because it goes out of scope\n    \n    int main() {\n        incrementAndPrint(); // output: 2\n        incrementAndPrint(); // output: 3\n        incrementAndPrint(); // output: 4\n        return 0;\n    }\n                                    "),e.qZA(),e._uU(1367,"\n                                "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(1368,"li"),e.TgZ(1369,"strong"),e._uU(1370,"Best practice: "),e.qZA(),e._uU(1371,"Avoid static local variables unless the variable NEVER needs to be reset."),e.qZA(),e.qZA(),e.TgZ(1372,"li"),e._uU(1373,"Static Local Constants"),e.qZA(),e.TgZ(1374,"ul"),e.TgZ(1375,"li"),e._uU(1376,"If you have a function that has a const value, you should make it static so that it only be initialized once."),e.qZA(),e.qZA(),e.TgZ(1377,"li"),e.TgZ(1378,"a",31),e._uU(1379,"A great summary of Chapter 6."),e.qZA(),e.qZA(),e.qZA(),e._UZ(1380,"mat-divider"),e.qZA(),e.TgZ(1381,"div",32),e.TgZ(1382,"h2"),e._uU(1383,"Chapter 7: Control Flow and Error Handling"),e.qZA(),e.TgZ(1384,"p"),e._uU(1385,"This chapter might have less notes for control flow as they are basics and common in all programming languages. They are very similar with C programming as well."),e.qZA(),e.TgZ(1386,"ul"),e.TgZ(1387,"li"),e._uU(1388,"Control Flow"),e.qZA(),e.TgZ(1389,"ul"),e.TgZ(1390,"li"),e._uU(1391,"Categories of flow control statements"),e.qZA(),e.TgZ(1392,"table",12),e.TgZ(1393,"tr"),e.TgZ(1394,"th"),e._uU(1395,"Category"),e.qZA(),e.TgZ(1396,"th"),e._uU(1397,"Meaning"),e.qZA(),e.TgZ(1398,"th"),e._uU(1399,"Examples"),e.qZA(),e.qZA(),e.TgZ(1400,"tr"),e.TgZ(1401,"td"),e._uU(1402,"Conditional statements"),e.qZA(),e.TgZ(1403,"td"),e._uU(1404,"Execute a sequence of code if only some condition is met."),e.qZA(),e.TgZ(1405,"td"),e._uU(1406,"if else, switch"),e.qZA(),e.qZA(),e.TgZ(1407,"tr"),e.TgZ(1408,"td"),e._uU(1409,"Jumps"),e.qZA(),e.TgZ(1410,"td"),e._uU(1411,"Jumps tell the CPU to start executing the statements at some other location."),e.qZA(),e.TgZ(1412,"td"),e._uU(1413,"goto, break, continue"),e.qZA(),e.qZA(),e.TgZ(1414,"tr"),e.TgZ(1415,"td"),e._uU(1416,"Function calls"),e.qZA(),e.TgZ(1417,"td"),e._uU(1418,"Function calls are jumps to some other location and back."),e.qZA(),e.TgZ(1419,"td"),e._uU(1420,"function calls, return"),e.qZA(),e.qZA(),e.TgZ(1421,"tr"),e.TgZ(1422,"td"),e._uU(1423,"Loops"),e.qZA(),e.TgZ(1424,"td"),e._uU(1425,"Execute a sequence of code repeatedly until some condition is met."),e.qZA(),e.TgZ(1426,"td"),e._uU(1427,"while, do-while, for, ranged-for"),e.qZA(),e.qZA(),e.TgZ(1428,"tr"),e.TgZ(1429,"td"),e._uU(1430,"Exceptions"),e.qZA(),e.TgZ(1431,"td"),e._uU(1432,"Designed for error handling."),e.qZA(),e.TgZ(1433,"td"),e._uU(1434,"try, throw, catch"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(1435,"li"),e.TgZ(1436,"strong"),e._uU(1437,"Best practice: "),e.qZA(),e._uU(1438,"Avoid "),e.TgZ(1439,"strong"),e._uU(1440,"goto statements"),e.qZA(),e._uU(1441," because this creates "),e.TgZ(1442,"span",8),e._uU(1443,"spaghetti code"),e.qZA(),e._uU(1444,"."),e.qZA(),e.TgZ(1445,"li"),e.TgZ(1446,"strong"),e._uU(1447,"Best practice: "),e.qZA(),e._uU(1448,"Favor while loops over do-while when given an equal choice."),e.qZA(),e.TgZ(1449,"li"),e._uU(1450,"As of C++11, there are two different kinds of for loops. The newer range-based for statement will be covered in Chapter 10."),e.qZA(),e.TgZ(1451,"li"),e._uU(1452,"It is possible to do for loops with multiple counters"),e.qZA(),e.TgZ(1453,"pre"),e._uU(1454,"                                "),e.TgZ(1455,"code"),e._uU(1456,"\n    #include <iostream>\n\n    int main() {\n        for (int x{ 0 }, y{ 9 }; x < 10 ; ++x, --y)\n            std::cout << x << ' ' << y << '\\n';\n    \n        return 0;\n    }\n                                "),e.qZA(),e._uU(1457,"\n                            "),e.qZA(),e.TgZ(1458,"li"),e._uU(1459,"break VS return"),e.qZA(),e.TgZ(1460,"ul"),e.TgZ(1461,"li"),e._uU(1462,"A "),e.TgZ(1463,"strong"),e._uU(1464,"break statement"),e.qZA(),e._uU(1465," terminates a switch or loop."),e.qZA(),e.TgZ(1466,"li"),e._uU(1467,"A "),e.TgZ(1468,"strong"),e._uU(1469,"return statement"),e.qZA(),e._uU(1470," terminates the entire function"),e.qZA(),e.qZA(),e.TgZ(1471,"li"),e._uU(1472,"A "),e.TgZ(1473,"strong"),e._uU(1474,"halt"),e.qZA(),e._uU(1475," is a flow control statement that terminates the program. In C++, halts are implemented as functions."),e.qZA(),e.TgZ(1476,"li"),e._uU(1477,"When the main() function returns:"),e.qZA(),e.TgZ(1478,"ul"),e.TgZ(1479,"li"),e._uU(1480,"First, because we\u2019re leaving the function, all local variables and function parameters are destroyed "),e.qZA(),e.TgZ(1481,"li"),e._uU(1482,"Next, a special function called std::exit() is called, with the return value from main() (the status code) passed in as an argument."),e.qZA(),e.qZA(),e.TgZ(1483,"li"),e._uU(1484,"std::exit()"),e.qZA(),e.TgZ(1485,"ul"),e.TgZ(1486,"li"),e._uU(1487,"std::exit() is a function that causes the program to terminate normally. "),e.qZA(),e.TgZ(1488,"li"),e._uU(1489,"Normal termination means the program has exited in an expected way."),e.qZA(),e.TgZ(1490,"li"),e._uU(1491,"std::exit() performs a number of cleanup function"),e.qZA(),e.TgZ(1492,"ul"),e.TgZ(1493,"li"),e._uU(1494,"First, objects with static storage duration are destroyed."),e.qZA(),e.TgZ(1495,"li"),e._uU(1496,"Then some other miscellaneous file cleanup is done if any files were used."),e.qZA(),e.TgZ(1497,"li"),e._uU(1498,"Finally, control is returned back to the OS, with the argument passed to std::exit() used as the status code."),e.qZA(),e.qZA(),e.TgZ(1499,"li"),e._uU(1500,"We can #include <cstdlib> (maybe not needed in C++14) to call the std::exit() explicitly, but please take note that it does not clean up local variables in the current function or up the call stack."),e.qZA(),e.TgZ(1501,"li"),e._uU(1502,"We can register a function to be called when the std::exit is called by using the "),e.TgZ(1503,"strong"),e._uU(1504,"std::atexit()"),e.qZA(),e._uU(1505," function"),e.qZA(),e.TgZ(1506,"pre"),e._uU(1507,"                                    "),e.TgZ(1508,"code"),e._uU(1509,"\n    #include <iostream>\n    void cleanup();\n    \n    void cleanup() {\n        // code here to do any kind of cleanup required\n        std::cout << \"The program is being terminated!\\n\";\n    }\n    \n    int main() {\n        // register cleanup() to be called automatically when std::exit() is called\n        std::atexit(cleanup); // note: we use cleanup rather than cleanup()\n        std::cout << 1 << '\\n';\n        std::exit(0); // terminate and return status code 0 to operating system\n        std::cout << 2 << '\\n';\n        return 0;\n    }\n                                    "),e.qZA(),e._uU(1510,"\n                                "),e.qZA(),e.TgZ(1511,"li"),e._uU(1512,"Take notes about std::atexit()"),e.qZA(),e.TgZ(1513,"ul"),e.TgZ(1514,"li"),e._uU(1515,"The function being registered must take no parameters and have no return value."),e.qZA(),e.TgZ(1516,"li"),e._uU(1517,"You can register multiple cleanup functions using std::atexit() if you want"),e.qZA(),e.TgZ(1518,"li"),e._uU(1519,"The registered functions will be called in reverse order (the last one registered will be called first)."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(1520,"li"),e.TgZ(1521,"strong"),e._uU(1522,"Best practice: "),e.qZA(),e._uU(1523,"Only use a halt if there is no safe way to return normally from the main function."),e.qZA(),e.qZA(),e.TgZ(1524,"li"),e._uU(1525,"std::cin, buffers, and extraction"),e.qZA(),e.TgZ(1526,"ul"),e.TgZ(1527,"li"),e._uU(1528,"When the user enters input in response to an extraction operation (std::cin>>), that data is placed in a buffer inside of std::cin."),e.qZA(),e.TgZ(1529,"li"),e._uU(1530,"A "),e.TgZ(1531,"strong"),e._uU(1532,"buffer"),e.qZA(),e._uU(1533," is simply a piece of memory set aside for storing data temporarily while it\u2019s moved from one place to another."),e.qZA(),e.TgZ(1534,"li"),e._uU(1535,"In this case, the buffer is used to hold user input while it\u2019s waiting to be extracted to variables."),e.qZA(),e.TgZ(1536,"li"),e._uU(1537,"When the extraction operator is used:"),e.qZA(),e.TgZ(1538,"ul"),e.TgZ(1539,"li"),e._uU(1540,"If there is data already in the input buffer, that data is used for extraction."),e.qZA(),e.TgZ(1541,"li"),e._uU(1542,"If the input buffer contains no data, the user is asked to input data for extraction."),e.qZA(),e.TgZ(1543,"li"),e._uU(1544,"When the user hits enter, a \u2018\\n\u2019 character will be placed in the input buffer."),e.qZA(),e.TgZ(1545,"li"),e._uU(1546,"operator>> extracts as much data from the input buffer as it can into the variable(ignoring any leading whitespace characters, such as spaces, tabs, or \u2018\\n\u2019)."),e.qZA(),e.TgZ(1547,"li"),e._uU(1548,"Any data that can not be extracted is left in the input buffer for the next extraction."),e.qZA(),e.qZA(),e.TgZ(1549,"li"),e._uU(1550,"For example, for the code snippet below:"),e.qZA(),e.TgZ(1551,"pre"),e._uU(1552,"                                "),e.TgZ(1553,"code"),e._uU(1554,"\n        int a{};\n        char b{};\n        std::cin >> a;\n        std::cin >> b;\n        std::cout << a << '\\n';\n        std::cout << b << '\\n';\n                                "),e.qZA(),e._uU(1555,"\n                            "),e.qZA(),e.TgZ(1556,"ul"),e.TgZ(1557,"li"),e._uU(1558,"If user inputs '5b' and presses enter:"),e.qZA(),e.TgZ(1559,"ul"),e.TgZ(1560,"li"),e._uU(1561,"5 will be extracted, converted to an integer, and assigned to variable a"),e.qZA(),e.TgZ(1562,"li"),e._uU(1563,"b is left in input buffer as it cannot be extracted to an integer variable"),e.qZA(),e.TgZ(1564,"li"),e._uU(1565,"the second std::cin will be skipped as the input buffer still have the 'b'"),e.qZA(),e.TgZ(1566,"li"),e._uU(1567,"the output will be printing '5' and 'b' in 2 separate lines"),e.qZA(),e.qZA(),e.TgZ(1568,"li"),e._uU(1569,"If user inputs '55' and presses enter:"),e.qZA(),e.TgZ(1570,"ul"),e.TgZ(1571,"li"),e._uU(1572,"55 will be extracted, converted to an integer, and assigned to variable a"),e.qZA(),e.TgZ(1573,"li"),e._uU(1574,"when comes to the second std::cin, the input buffer contains no data, so user will be asked to input data again"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(1575,"li"),e._uU(1576,"Handling invalid input"),e.qZA(),e.TgZ(1577,"ul"),e.TgZ(1578,"li"),e._uU(1579,"For each point of text input, consider:"),e.qZA(),e.TgZ(1580,"ul"),e.TgZ(1581,"li"),e._uU(1582,"Use something like switch case to check whether the input is meaningful."),e.qZA(),e.TgZ(1583,"li"),e._uU(1584,"Use std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\\n'); to ignore extraneous input"),e.qZA(),e.TgZ(1585,"li"),e._uU(1586,"Use std::cin.fail() to check whether extraction fails, if yes std::cin.clear() and ignore"),e.qZA(),e.TgZ(1587,"li"),e._uU(1588,"For overflow case, std::cin goes immediately into \u201cfailure mode\u201d, we can handle it like how we handle failed extractions"),e.qZA(),e.qZA(),e.TgZ(1589,"li"),e._uU(1590,"For detailed examples and case studies, refer to the "),e.TgZ(1591,"a",33),e._uU(1592,"full article"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(1593,"li"),e._uU(1594,"Assert and static_assert"),e.qZA(),e.TgZ(1595,"ul"),e.TgZ(1596,"li"),e._uU(1597,"Best practice: Use assertions to document cases that should be logically impossible."),e.qZA(),e.TgZ(1598,"li"),e._uU(1599,"Assert is checked at runtime, and if the conditional expression evaluates to false, the program is terminated via std::abort."),e.qZA(),e.TgZ(1600,"li"),e._uU(1601,"static_assert is checked at compile-time. so there will be compile error if the conditional expression evaluates to false."),e.qZA(),e.TgZ(1602,"li"),e._uU(1603,"For more details, refer to the detailed explanation and examples in this "),e.TgZ(1604,"a",34),e._uU(1605,"tutorial"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e._UZ(1606,"mat-divider"),e.qZA(),e.TgZ(1607,"div",35),e.TgZ(1608,"h2"),e._uU(1609,"Chapter 8: Type Conversion And Function Overloading"),e.qZA(),e.TgZ(1610,"ul"),e.TgZ(1611,"li"),e._uU(1612,"Implicit Type Conversion"),e.qZA(),e.TgZ(1613,"ul"),e.TgZ(1614,"li"),e.TgZ(1615,"strong"),e._uU(1616,"Implicit type conversion"),e.qZA(),e._uU(1617," (also called automatic type conversion or "),e.TgZ(1618,"strong"),e._uU(1619,"coercion"),e.qZA(),e._uU(1620,") is performed automatically by the compiler when one data type is required, but a different data type is supplied."),e.qZA(),e.TgZ(1621,"li"),e._uU(1622,"For example:"),e.qZA(),e.TgZ(1623,"pre"),e._uU(1624,"                                "),e.TgZ(1625,"code"),e._uU(1626,"\n    double d{ 3 }; // int value 3 implicitly converted to type double\n    float doSomething() {\n        return 3.0; // double value 3.0 implicitly converted to type float\n    }\n    double division{ 4.0 / 3 }; // int value 3 implicitly converted to type double\n                                "),e.qZA(),e._uU(1627,"\n                            "),e.qZA(),e.TgZ(1628,"li"),e._uU(1629,"If the compiler can't find an acceptable conversion, then the compile will fail with a compile error."),e.qZA(),e.TgZ(1630,"li"),e._uU(1631,"C++ has "),e.TgZ(1632,"strong"),e._uU(1633,"standard conversions"),e.qZA(),e._uU(1634," that can be divided to 4 categories:"),e.qZA(),e.TgZ(1635,"ul"),e.TgZ(1636,"li"),e._uU(1637,"Numeric promotions (Floating-point and integral promotion)"),e.qZA(),e.TgZ(1638,"li"),e._uU(1639,"Numeric conversions (Numeric conversions)"),e.qZA(),e.TgZ(1640,"li"),e._uU(1641,"Arithmetic conversions (Arithmetic conversions)"),e.qZA(),e.TgZ(1642,"li"),e._uU(1643,"Other conversions (which includes various pointer and reference conversions)"),e.qZA(),e.qZA(),e.TgZ(1644,"li"),e._uU(1645,"Numeric promotion & Numeric conversion"),e.qZA(),e.TgZ(1646,"pre"),e._uU(1647,"                                                        "),e.TgZ(1648,"code"),e._uU(1649,"\n    #include <iostream>\n\n    void printDouble(double d) {\n        std::cout << d << '\\n';\n    }\n    \n    void printInt(int x) {\n        std::cout << x << '\\n';\n    }\n    \n    int main() {\n        // numeric promotions\n        printDouble(5.0); // no conversion necessary\n        printDouble(4.0f); // numeric promotion of float to double\n        printInt(2); // no conversion necessary\n        short s{ 3 }; // there is no short literal suffix, so we'll use a variable for this one\n        printInt(s); // numeric promotion of short to int\n        printInt('a'); // numeric promotion of char to int\n        printInt(true); // numeric promotion of bool to int\n\n        // numeric conversions\n        short s = 3; // convert int to short\n        long l = 3; // convert int to long\n        char ch = s; // convert short to char\n        float f = 3.0; // convert double to float\n        long double ld = 3.0; // convert double to long double\n        int i = 3.5; // convert double to int\n        double d = 3; // convert int to double\n        bool b1 = 3; // convert int to bool\n        bool b2 = 3.0; // convert double to bool\n        return 0;\n    }                                                                \n                                                        "),e.qZA(),e._uU(1650,"\n                                                    "),e.qZA(),e.TgZ(1651,"li"),e._uU(1652,"Arithmetic conversion"),e.qZA(),e.TgZ(1653,"ul"),e.TgZ(1654,"li"),e._uU(1655,"In C++, the following operators quire operands of the same type"),e.qZA(),e.TgZ(1656,"ul"),e.TgZ(1657,"li"),e._uU(1658,"The binary arithmetic operators: +, -, *, /, %"),e.qZA(),e.TgZ(1659,"li"),e._uU(1660,"The binary relational operators: <, >, <=, >=, ==, !="),e.qZA(),e.TgZ(1661,"li"),e._uU(1662,"The binary bitwise arithmetic operators: &, ^, |"),e.qZA(),e.TgZ(1663,"li"),e._uU(1664,"The conditional operator ?: (excluding the condition, which is expected to be of type bool)"),e.qZA(),e.qZA(),e.TgZ(1665,"li"),e._uU(1666,"If one or both the operands are not of the same type, they will be implicitly converted according to the following "),e.TgZ(1667,"strong"),e._uU(1668,"usual arithmetic conversion rules"),e.qZA(),e._uU(1669," that define the priorities. "),e.qZA(),e.TgZ(1670,"ul"),e.TgZ(1671,"li"),e._uU(1672,"long double (highest)"),e.qZA(),e.TgZ(1673,"li"),e._uU(1674,"double"),e.qZA(),e.TgZ(1675,"li"),e._uU(1676,"float"),e.qZA(),e.TgZ(1677,"li"),e._uU(1678,"unsigned long long"),e.qZA(),e.TgZ(1679,"li"),e._uU(1680,"long long"),e.qZA(),e.TgZ(1681,"li"),e._uU(1682,"unsigned long"),e.qZA(),e.TgZ(1683,"li"),e._uU(1684,"long"),e.qZA(),e.TgZ(1685,"li"),e._uU(1686,"unsigned int"),e.qZA(),e.TgZ(1687,"li"),e._uU(1688,"int (lowest)"),e.qZA(),e.qZA(),e.TgZ(1689,"li"),e._uU(1690,"The usual arithmetic conversion rules explain why doing float divided by int will get integer."),e.qZA(),e.TgZ(1691,"li"),e._uU(1692,"Note that unsigned has higher priority than signed, and you need to be extra careful of this. For example, in the following example, the variable z will be converted to 4294967294 when it is converted to unsigned int, and hence producing the wrong answer."),e.qZA(),e.TgZ(1693,"pre"),e._uU(1694,"                                        "),e.TgZ(1695,"code"),e._uU(1696,"\n    unsigned int y{ 3 };\n    signed int z{ -2 };\n    std::cout << std::boolalpha << (z < y); // output: false\n                                        "),e.qZA(),e._uU(1697,"\n                                    "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(1698,"li"),e._uU(1699,"Explicit Type Conversion"),e.qZA(),e.TgZ(1700,"ul"),e.TgZ(1701,"li"),e._uU(1702,"C++ supports 5 different types of casts: "),e.qZA(),e.TgZ(1703,"ul"),e.TgZ(1704,"li"),e._uU(1705,"C-style casts"),e.qZA(),e.TgZ(1706,"li"),e._uU(1707,"static casts"),e.qZA(),e.TgZ(1708,"li"),e._uU(1709,"const casts"),e.qZA(),e.TgZ(1710,"li"),e._uU(1711,"dynamic casts"),e.qZA(),e.TgZ(1712,"li"),e._uU(1713,"reinterpret casts"),e.qZA(),e.qZA(),e.TgZ(1714,"li"),e.TgZ(1715,"strong"),e._uU(1716,"Warning: "),e.qZA(),e._uU(1717,"Avoid C-style casts, const casts and reinterpret casts unless you have a very good reason to use them."),e.qZA(),e.TgZ(1718,"li"),e._uU(1719,"C-style casts"),e.qZA(),e.TgZ(1720,"ul"),e.TgZ(1721,"li"),e._uU(1722,"Example: double d { double(x) / y }; // convert x to a double so we get floating point division"),e.qZA(),e.qZA(),e.TgZ(1723,"li"),e._uU(1724,"static_cast"),e.qZA(),e.TgZ(1725,"ul"),e.TgZ(1726,"li"),e._uU(1727,"Example: double d { static_cast<double>(x) / y };"),e.qZA(),e.qZA(),e.TgZ(1728,"li"),e.TgZ(1729,"strong"),e._uU(1730,"Best practice: "),e.qZA(),e._uU(1731,"Favor static_cast when you need to convert a value from one type to another type."),e.qZA(),e.qZA(),e.TgZ(1732,"li"),e._uU(1733,"Typedefs and type aliases"),e.qZA(),e.TgZ(1734,"ul"),e.TgZ(1735,"li"),e._uU(1736,"Type aliases (preferred)"),e.qZA(),e.TgZ(1737,"ul"),e.TgZ(1738,"li"),e._uU(1739,"In C++, "),e.TgZ(1740,"strong"),e._uU(1741,"using"),e.qZA(),e._uU(1742," is a keyword that creates an alias for an existing data type."),e.qZA(),e.TgZ(1743,"li"),e._uU(1744,"For example: using distance_t = double; // define distance_t as an alias for type double"),e.qZA(),e.TgZ(1745,"li"),e._uU(1746,"An alias does not actually define a new type -- it just introduces a new identifier for an existing type."),e.qZA(),e.qZA(),e.TgZ(1747,"li"),e._uU(1748,"Typedef (not preferred)"),e.qZA(),e.TgZ(1749,"ul"),e.TgZ(1750,"li"),e.TgZ(1751,"strong"),e._uU(1752,"typedef"),e.qZA(),e._uU(1753," is a keyword with the same semantics as \u201cusing\u201d, but reversed syntax."),e.qZA(),e.TgZ(1754,"li"),e._uU(1755,"For example: typedef double distance_t;"),e.qZA(),e.qZA(),e.TgZ(1756,"li"),e.TgZ(1757,"strong"),e._uU(1758,"Best practice: "),e.qZA(),e._uU(1759,"When creating aliased types, prefer the type alias syntax over the typedef syntax."),e.qZA(),e.TgZ(1760,"li"),e._uU(1761,"Use case examples"),e.qZA(),e.TgZ(1762,"ul"),e.TgZ(1763,"li"),e._uU(1764,"Using type aliases for platform independent coding"),e.qZA(),e.TgZ(1765,"pre"),e._uU(1766,"                                        "),e.TgZ(1767,"code"),e._uU(1768,"\n    #ifdef INT_2_BYTES\n    using int8_t = char;\n    using int16_t = int;\n    using int32_t = long;\n    #else\n    using int8_t = char;\n    using int16_t = short;\n    using int32_t = int;\n    #endif\n                                        "),e.qZA(),e._uU(1769,"\n                                    "),e.qZA(),e.TgZ(1770,"li"),e._uU(1771,"Using type aliases to make complex types simple"),e.qZA(),e.TgZ(1772,"pre"),e._uU(1773,"                                        "),e.TgZ(1774,"code"),e._uU(1775,"\n    using pairlist_t = std::vector<std::pair<std::string, int> >; // make pairlist_t an alias for this crazy type\n                                        "),e.qZA(),e._uU(1776,"\n                                    "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(1777,"li"),e._uU(1778,"Type deduction for objects using the "),e.TgZ(1779,"strong"),e._uU(1780,"auto"),e.qZA(),e._uU(1781," keyword"),e.qZA(),e.TgZ(1782,"ul"),e.TgZ(1783,"li"),e._uU(1784,'For example, we say "double d{ 5.0 };" is an redundant variable definition because 5.0 itself is a double-typed literal.'),e.qZA(),e.TgZ(1785,"li"),e._uU(1786,"Hence, we can use the "),e.TgZ(1787,"strong"),e._uU(1788,"auto"),e.qZA(),e._uU(1789," keyword to let compiler deduces the type of an object from the object's initializer."),e.qZA(),e.TgZ(1790,"pre"),e._uU(1791,"                                "),e.TgZ(1792,"code"),e._uU(1793,"\n    int add(int x, int y) {\n        return x + y;\n    }\n    \n    int main() {\n        auto d{ 5.0 };         // 5.0 is a double literal, so d will be type double\n        auto i{ 1 + 2 };       // 1 + 2 evaluates to an int, so i will be type int\n        auto x { i };          // i is an int, so x will be type int too\n        auto sum{ add(5, 6) }; // add() returns an int, so sum's type will be deduced to int\n        return 0;\n    }\n                                "),e.qZA(),e._uU(1794,"\n                            "),e.qZA(),e.qZA(),e.TgZ(1795,"li"),e._uU(1796,"Type deduction for functions"),e.qZA(),e.TgZ(1797,"ul"),e.TgZ(1798,"li"),e._uU(1799,"Type deduction can work on functions, but SHOULD BE AVOIDED."),e.qZA(),e.TgZ(1800,"li"),e._uU(1801,"One exceptional use case is "),e.TgZ(1802,"strong"),e._uU(1803,"trailing return syntax"),e.qZA(),e._uU(1804,". In this case the "),e.TgZ(1805,"span",36),e._uU(1806,"auto"),e.qZA(),e._uU(1807," does not perform type deduction, it is just part of the trailing return syntax."),e.qZA(),e.TgZ(1808,"pre"),e._uU(1809,"                                "),e.TgZ(1810,"code"),e._uU(1811,"\n    auto add(int x, int y) -> int; // declaration\n    auto add(int x, int y) -> int { //definition\n        return (x + y);\n    }\n                                "),e.qZA(),e._uU(1812,"\n                            "),e.qZA(),e.TgZ(1813,"li"),e._uU(1814,"Type deduction can\u2019t be used for function parameter types."),e.qZA(),e.qZA(),e.TgZ(1815,"li"),e._uU(1816,"Function Overloading"),e.qZA(),e.TgZ(1817,"ul"),e.TgZ(1818,"li"),e.TgZ(1819,"strong"),e._uU(1820,"Function overloading"),e.qZA(),e._uU(1821," allows us to create multiple functions with the same name, so long as each identically named function has different parameters"),e.qZA(),e.TgZ(1822,"li"),e._uU(1823,"For example:"),e.qZA(),e.TgZ(1824,"pre"),e._uU(1825,"                                "),e.TgZ(1826,"code"),e._uU(1827,"\n    int add(int x, int y) // integer version\n    {\n        return x + y;\n    }\n\n    double add(double x, double y) // floating point version\n    {\n        return x + y;\n    }\n                                    "),e.qZA(),e._uU(1828,"\n                            "),e.qZA(),e.TgZ(1829,"li"),e.TgZ(1830,"strong"),e._uU(1831,"Best practice: "),e.qZA(),e._uU(1832,"Use function overloading to make your program simpler."),e.qZA(),e.TgZ(1833,"li"),e._uU(1834,"Overloaded functions are differentiated by: "),e.qZA(),e.TgZ(1835,"ul"),e.TgZ(1836,"li"),e._uU(1837,"Number of parameters"),e.qZA(),e.TgZ(1838,"li"),e._uU(1839,"Type of parameters // excludes typedefs, type aliases"),e.qZA(),e.qZA(),e.TgZ(1840,"li"),e._uU(1841,"Take notet that return type of a function is NOT considered for differentiation"),e.qZA(),e.TgZ(1842,"li"),e._uU(1843,"There is a detailed explanation about how function overload resolution happen in this "),e.TgZ(1844,"a",37),e._uU(1845,"tutorial"),e.qZA(),e._uU(1846," but it will not be covered in this short note."),e.qZA(),e.qZA(),e.TgZ(1847,"li"),e._uU(1848,"C++ Templates"),e.qZA(),e.TgZ(1849,"ul"),e.TgZ(1850,"li"),e._uU(1851,"Just like a normal definition, a "),e.TgZ(1852,"strong"),e._uU(1853,"template"),e.qZA(),e._uU(1854," describes what a function or class looks like."),e.qZA(),e.TgZ(1855,"li"),e._uU(1856,"Unlike a normal definition, in a template we can use one or more placeholder types. A placeholder type represents some type that is not known at the time the template is written, but that will be provided later."),e.qZA(),e.qZA(),e.TgZ(1857,"li"),e._uU(1858,"Function Templates"),e.qZA(),e.TgZ(1859,"ul"),e.TgZ(1860,"li"),e._uU(1861,"2 things to do to create a function template"),e.qZA(),e.TgZ(1862,"ul"),e.TgZ(1863,"li"),e._uU(1864,"replace our specific types with template types"),e.qZA(),e.TgZ(1865,"li"),e._uU(1866,"declare the template parameter"),e.qZA(),e.TgZ(1867,"pre"),e._uU(1868,"                                    "),e.TgZ(1869,"code"),e._uU(1870,"\n    template <typename T> // this is the template parameter declaration\n    T max(T x, T y) // this is the function template definition for max<T>\n    {\n        return (x > y) ? x : y;\n    }\n                                    "),e.qZA(),e._uU(1871,"\n                                "),e.qZA(),e.qZA(),e.TgZ(1872,"li"),e._uU(1873,"To instantiate or use the function template above: "),e.qZA(),e.TgZ(1874,"pre"),e._uU(1875,"                                "),e.TgZ(1876,"code"),e._uU(1877,"\n    #include <iostream>\n\n    template <typename T>\n    T max(T x, T y) {\n        return (x > y) ? x : y;\n    }\n    \n    int main() {\n        std::cout << max<int>(1, 2) << '\\n'; // output: 2\n        std::cout << max<double>(3.5, 2.8) << '\\n'; // output: 3.5\n        return 0;\n    }\n                                "),e.qZA(),e._uU(1878,"\n                            "),e.qZA(),e.TgZ(1879,"li"),e._uU(1880,"We can also use "),e.TgZ(1881,"strong"),e._uU(1882,"template argument deduction"),e.qZA(),e._uU(1883," to let the compiler deduce the actual type that should be used:"),e.qZA(),e.TgZ(1884,"pre"),e._uU(1885,"                                "),e.TgZ(1886,"code"),e._uU(1887,"\n    std::cout << max<>(1, 2) << '\\n';  // compiler will deduce the actual type\n    std::cout << max(1, 2) << '\\n';  // if the template type parameters defined in your funtion template are of same type, then max(1, 2.4) will have error \n                                "),e.qZA(),e._uU(1888,"\n                            "),e.qZA(),e.TgZ(1889,"li"),e._uU(1890,"You can also have function templates with non-template parameters"),e.qZA(),e.TgZ(1891,"pre"),e._uU(1892,"                                "),e.TgZ(1893,"code"),e._uU(1894,"\n    template <typename T>\n    int someFcn (T x, double y) { // y here is non-template parameter\n        return 5;\n    }\n                                "),e.qZA(),e._uU(1895,"\n                            "),e.qZA(),e.TgZ(1896,"li"),e._uU(1897,"You can also create function templates with multiple template type parameters"),e.qZA(),e.TgZ(1898,"pre"),e._uU(1899,"                                "),e.TgZ(1900,"code"),e._uU(1901,"\n    template <typename T, typename U> // We're using two template type parameters named T and U\n    auto max(T x, U y) // auto here is to let compiler deduce what type should be returned\n    {\n        return (x > y) ? x : y; // with auto return type, the compiler will deduce what the return type should be\n    }\n                                "),e.qZA(),e._uU(1902,"\n                            "),e.qZA(),e.TgZ(1903,"li"),e._uU(1904,"Programming with templates is sometimes called "),e.TgZ(1905,"strong"),e._uU(1906,"generic programming"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e._UZ(1907,"mat-divider"),e.qZA(),e.qZA(),e.TgZ(1908,"div",38),e.NdJ("click",function(){return i.scrollTo("contentList")}),e._UZ(1909,"fa-icon",39),e.qZA(),e.qZA()),2&t&&(e.xp6(1183),e.Q6J("animationDuration",0),e.xp6(172),e.Q6J("animationDuration",0),e.xp6(554),e.Q6J("icon",i.faArrowAltCircleUp))},directives:[R,w,x,D,C.lW,_.xw,A,Kt,Fe,V.BN],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}.trFlex[_ngcontent-%COMP%]{display:flex;width:100%}.tdHalf[_ngcontent-%COMP%]{width:50%;display:flex;flex-direction:column;justify-content:center}.thHalf[_ngcontent-%COMP%]{width:50%}.tdQuarter[_ngcontent-%COMP%]{width:25%;min-width:122px;display:flex;flex-direction:column;justify-content:center}.thQuarter[_ngcontent-%COMP%]{width:25%;min-width:122px}.mat-tab-label[_ngcontent-%COMP%]:focus{outline:black}"]}),n})(),pn=(()=>{class n{constructor(t){this.router=t}scrollTo(t){this.router.navigate([],{fragment:t}).then(()=>{const i=document.getElementById(t);null!=i&&i.scrollIntoView()})}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(b.F0))},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-data-structures"]],decls:634,vars:0,consts:[[1,"flexContainer"],["displayMode","flat",2,"padding-left","5px","padding-right","5px"],[2,"margin-top","5px"],["mat-button","",1,"listItem",3,"click"],["fxLayout","column","fxLayout","column"],["href","https://www.algoexpert.io/product","target","_blank","rel","noopener noreferrer"],["href","https://leetcode.com/","target","_blank","rel","noopener noreferrer"],["id","complexAnalysis"],["id","memory"],["id","bigONotation"],["id","arrays"],["href","https://medium.com/@satorusasozaki/amortized-time-in-the-time-complexity-of-an-algorithm-6dd9a5d38045","target","_blank","rel","noopener noreferrer"],["id","linkedLists"],[2,"font-style","italic"],["id","hashTables"],["id","stacksAndQueues"],[2,"width","50%"],["id","strings"],["id","graphs"],["id","trees"],[2,"text-decoration","underline"],["id","heaps"],["href","https://blog.bitsrc.io/implementing-heaps-in-javascript-c3fbf1cb2e65","target","_blank","rel","noopener noreferrer"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"mat-accordion",1),e.TgZ(2,"mat-expansion-panel",2),e.TgZ(3,"mat-expansion-panel-header"),e.TgZ(4,"mat-panel-title"),e._uU(5," Fundamental "),e.qZA(),e.qZA(),e.TgZ(6,"button",3),e.NdJ("click",function(){return i.scrollTo("complexityAnalysis")}),e._uU(7,"Complexity Analysis"),e.qZA(),e.TgZ(8,"button",3),e.NdJ("click",function(){return i.scrollTo("memory")}),e._uU(9,"Memory"),e.qZA(),e.TgZ(10,"button",3),e.NdJ("click",function(){return i.scrollTo("bigONotation")}),e._uU(11,"Big O Notation"),e.qZA(),e.TgZ(12,"button",3),e.NdJ("click",function(){return i.scrollTo("arrays")}),e._uU(13,"Arrays"),e.qZA(),e.TgZ(14,"button",3),e.NdJ("click",function(){return i.scrollTo("linkedLists")}),e._uU(15,"Linked Lists"),e.qZA(),e.TgZ(16,"button",3),e.NdJ("click",function(){return i.scrollTo("hashTables")}),e._uU(17,"Hash Tables"),e.qZA(),e.TgZ(18,"button",3),e.NdJ("click",function(){return i.scrollTo("stacksAndQueues")}),e._uU(19,"Stacks & Queues"),e.qZA(),e.TgZ(20,"button",3),e.NdJ("click",function(){return i.scrollTo("strings")}),e._uU(21,"Strings"),e.qZA(),e.TgZ(22,"button",3),e.NdJ("click",function(){return i.scrollTo("graphs")}),e._uU(23,"Graphs"),e.qZA(),e.TgZ(24,"button",3),e.NdJ("click",function(){return i.scrollTo("trees")}),e._uU(25,"Trees"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(26,"div",4),e.TgZ(27,"div"),e.TgZ(28,"h1"),e._uU(29,"Algo Expert Fundamental"),e.qZA(),e.TgZ(30,"h2"),e._uU(31,"Introduction"),e.qZA(),e.TgZ(32,"p"),e._uU(33,"These are my personal notes when I go through the "),e.TgZ(34,"a",5),e._uU(35,"AlgoExpert course"),e.qZA(),e._uU(36,"."),e.qZA(),e.TgZ(37,"p"),e._uU(38,"These are just short notes, the course is recommended as there are some great explanations for different algorithm questions."),e.qZA(),e.TgZ(39,"p"),e._uU(40,"However, for alternative option, you may proceed with "),e.TgZ(41,"a",6),e._uU(42,"LeetCode"),e.qZA(),e._uU(43,"."),e.qZA(),e._UZ(44,"mat-divider"),e.qZA(),e.TgZ(45,"div",7),e.TgZ(46,"h2"),e._uU(47,"Complexity Analysis"),e.qZA(),e.TgZ(48,"p"),e._uU(49,"Commonly there are more than one solution to a problem. And how do we determine which one is better? Through complexity analysis. The worse solutions normally have needless complexity. There are 2 types of complexity, time complexity and space complexity. You can refer to them together as space-time complexity as well."),e.qZA(),e.TgZ(50,"p"),e._uU(51,"Time complexity is a measure of how fast an algorithm or solution runs."),e.qZA(),e.TgZ(52,"p"),e._uU(53,"Space complexity is a measure of how much memory or space an algorithm uses up."),e.qZA(),e._UZ(54,"mat-divider"),e.qZA(),e.TgZ(55,"div",8),e.TgZ(56,"h2"),e._uU(57,"Memory"),e.qZA(),e.TgZ(58,"p"),e._uU(59,"There are few things that you need to know:"),e.qZA(),e.TgZ(60,"ul"),e.TgZ(61,"li"),e._uU(62,"There are limited memory in each computer"),e.qZA(),e.TgZ(63,"li"),e._uU(64,"The data are stored in bytes ( 8 bits = 1 byte)"),e.qZA(),e.TgZ(65,"li"),e._uU(66,"Int is 32-bit integer and Long is 64-bit integer, and these are called fixed-width integers"),e.qZA(),e.TgZ(67,"li"),e._uU(68,"Hence, the memory taken up by the integers are fixed, depending on their data type, not their value"),e.qZA(),e.TgZ(69,"li"),e._uU(70,"The idea of pointer is you record the memory address of another memory slot in a memory slot"),e.qZA(),e.qZA(),e._UZ(71,"mat-divider"),e.qZA(),e.TgZ(72,"div",9),e.TgZ(73,"h2"),e._uU(74,"Big O Notation"),e.qZA(),e.TgZ(75,"p"),e._uU(76,"Big O Notation is a notation used to describe the time complexity and space complexity of an algorithm. For time complexity, it is not logical to exactly describe the speed of an algorithm with the unit of milliseconds or seconds, as the execution time is affected by many factors such as programs running in the background or even processing ability of your CPU."),e.qZA(),e.TgZ(77,"p"),e._uU(78,"Hence, to describe time complexity, we usually describe how fast an algorithm runs as the input size increases. This is because different algorithms have different processing speeds when the input size is different. Hence, we describe them with a notation, without any SI unit."),e.qZA(),e.TgZ(79,"p"),e._uU(80,"The following are some common examples of complexities and their Big O Notations (ordered from fastest to slowest):"),e.qZA(),e.TgZ(81,"ul"),e.TgZ(82,"li"),e._uU(83,"Constant: O(1)"),e.qZA(),e.TgZ(84,"li"),e._uU(85,"Logarithmic: O(log(n))"),e.qZA(),e.TgZ(86,"li"),e._uU(87,"Linear: O(n)"),e.qZA(),e.TgZ(88,"li"),e._uU(89,"Log-Linear: O(nlog(n))"),e.qZA(),e.TgZ(90,"li"),e._uU(91,"Quadaratic: O(n^2)"),e.qZA(),e.TgZ(92,"li"),e._uU(93,"Cubic: O(n^3)"),e.qZA(),e.TgZ(94,"li"),e._uU(95,"Exponential: O(2^n)"),e.qZA(),e.TgZ(96,"li"),e._uU(97,"Factorial: O(n!)"),e.qZA(),e.qZA(),e._UZ(98,"mat-divider"),e.qZA(),e.TgZ(99,"div",10),e.TgZ(100,"h2"),e._uU(101,"Arrays"),e.qZA(),e.TgZ(102,"p"),e._uU(103,"There are two types of arrays: Static Array & Dynamic Array. "),e.qZA(),e.TgZ(104,"p"),e._uU(105,"In C++ or Java, when you declare an array, you need to specify the length of the array. On the other hand, in Python or Javascript, you do not need to specify the length of an array."),e.qZA(),e.TgZ(106,"p"),e._uU(107,"The follwing are some array's standard operations and their corresponding time complexities:"),e.qZA(),e.TgZ(108,"table"),e.TgZ(109,"tr"),e.TgZ(110,"th"),e._uU(111,"Operation"),e.qZA(),e.TgZ(112,"th"),e._uU(113,"Time Complexity"),e.qZA(),e.TgZ(114,"th"),e._uU(115,"Space Complexity"),e.qZA(),e.qZA(),e.TgZ(116,"tr"),e.TgZ(117,"td"),e._uU(118,"Accessing a value at a given index"),e.qZA(),e.TgZ(119,"td"),e._uU(120,"O(1)"),e.qZA(),e.TgZ(121,"td"),e._uU(122,"O(1)"),e.qZA(),e.qZA(),e.TgZ(123,"tr"),e.TgZ(124,"td"),e._uU(125,"Updating a value at a given index"),e.qZA(),e.TgZ(126,"td"),e._uU(127,"O(1)"),e.qZA(),e.TgZ(128,"td"),e._uU(129,"O(1)"),e.qZA(),e.qZA(),e.TgZ(130,"tr"),e.TgZ(131,"td"),e._uU(132,"Inserting a value at the beginning"),e.qZA(),e.TgZ(133,"td"),e._uU(134,"O(n)"),e.qZA(),e.TgZ(135,"td"),e.TgZ(136,"div"),e.TgZ(137,"span"),e._uU(138,"Dynamic Array: O(1) or O(n)"),e.qZA(),e.qZA(),e.TgZ(139,"div"),e.TgZ(140,"span"),e._uU(141,"Staticc Array: O(1)"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(142,"tr"),e.TgZ(143,"td"),e._uU(144,"Inserting a value in the middle"),e.qZA(),e.TgZ(145,"td"),e._uU(146,"O(n)"),e.qZA(),e.TgZ(147,"td"),e.TgZ(148,"div"),e.TgZ(149,"span"),e._uU(150,"Dynamic Array: O(1) or O(n)"),e.qZA(),e.qZA(),e.TgZ(151,"div"),e.TgZ(152,"span"),e._uU(153,"Static Array: O(1)"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(154,"tr"),e.TgZ(155,"td"),e._uU(156,"Inserting a value at the end"),e.qZA(),e.TgZ(157,"td"),e.TgZ(158,"div"),e.TgZ(159,"span"),e._uU(160,"Dynamic Array: O(1) or O(n)"),e.qZA(),e.qZA(),e.TgZ(161,"div"),e.TgZ(162,"span"),e._uU(163,"Static Array: O(n)"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(164,"td"),e.TgZ(165,"div"),e.TgZ(166,"span"),e._uU(167,"Dynamic Array: O(1) or O(n)"),e.qZA(),e.qZA(),e.TgZ(168,"div"),e.TgZ(169,"span"),e._uU(170,"Static Array: O(1)"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(171,"tr"),e.TgZ(172,"td"),e._uU(173,"Removing a value at the beginning"),e.qZA(),e.TgZ(174,"td"),e._uU(175,"O(n)"),e.qZA(),e.TgZ(176,"td"),e._uU(177,"O(1)"),e.qZA(),e.qZA(),e.TgZ(178,"tr"),e.TgZ(179,"td"),e._uU(180,"Removing a value in the middle"),e.qZA(),e.TgZ(181,"td"),e._uU(182,"O(n)"),e.qZA(),e.TgZ(183,"td"),e._uU(184,"O(1)"),e.qZA(),e.qZA(),e.TgZ(185,"tr"),e.TgZ(186,"td"),e._uU(187,"Removing a value at the end"),e.qZA(),e.TgZ(188,"td"),e._uU(189,"O(1)"),e.qZA(),e.TgZ(190,"td"),e._uU(191,"O(1)"),e.qZA(),e.qZA(),e.TgZ(192,"tr"),e.TgZ(193,"td"),e._uU(194,"Copying the array"),e.qZA(),e.TgZ(195,"td"),e._uU(196,"O(n)"),e.qZA(),e.TgZ(197,"td"),e._uU(198,"O(n)"),e.qZA(),e.qZA(),e.TgZ(199,"tr"),e.TgZ(200,"td"),e._uU(201,"Traversing the array"),e.qZA(),e.TgZ(202,"td"),e._uU(203,"O(n)"),e.qZA(),e.TgZ(204,"td"),e._uU(205,"O(1)"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(206,"p"),e._uU(207,"Side Notes:"),e.qZA(),e.TgZ(208,"ul"),e.TgZ(209,"li"),e._uU(210,"For Dynamic Array, time complexity of inserting a value at the end will take O(1) if it has enough memory slots. Else, it will take O(n)+ time complexity, which also called "),e.TgZ(211,"a",11),e._uU(212,"Armotized O(1)"),e.qZA(),e._uU(213,". "),e.qZA(),e.TgZ(214,"li"),e._uU(215,"The space complexity for inserting value in Dynamic Array is also depending on whether it has enough memory slots."),e.qZA(),e.TgZ(216,"li"),e._uU(217,"However, for Static Array, everytime when an additional value is inserted, the array will be copied and relocated to new memory slots. This is because it is not guaranteed that the subsequent memory slots are available for expanding the array. After copying, the previous memory slots will be free, hence resulting in O(1) space complexity. "),e.qZA(),e.qZA(),e._UZ(218,"mat-divider"),e.qZA(),e.qZA(),e.TgZ(219,"div",12),e.TgZ(220,"h2"),e._uU(221,"Linked Lists"),e.qZA(),e.TgZ(222,"p"),e._uU(223,"Linked list is quite similar to an array, except that it has pointers between each element."),e.qZA(),e.TgZ(224,"p"),e._uU(225,"There are 2 common types of linked lists: Singly Linked List & Doubly Linked List."),e.qZA(),e.TgZ(226,"ul"),e.TgZ(227,"li"),e._uU(228,"Each node of a Singly Linked List is a node (class) with "),e.TgZ(229,"span",13),e._uU(230,"value"),e.qZA(),e._uU(231," and "),e.TgZ(232,"span",13),e._uU(233,"next"),e.qZA(),e._uU(234," properties. The first node is called "),e.TgZ(235,"span",13),e._uU(236,"head"),e.qZA(),e._uU(237,", whereas the last node which has the "),e.TgZ(238,"span",13),e._uU(239,"next"),e.qZA(),e._uU(240," property points to a null value is called "),e.TgZ(241,"span",13),e._uU(242,"tail"),e.qZA(),e._uU(243,"."),e.qZA(),e.TgZ(244,"li"),e._uU(245,"Each node of a Doubly Linked List has two pointers, one pointing to the previous node and another one pointing to the next node."),e.qZA(),e.qZA(),e.TgZ(246,"pre"),e._uU(247,"            "),e.TgZ(248,"code"),e._uU(249,"\n// Singly Linked List example\n1 -> 4 -> 3 -> 8 -> 3 -> null\n\n// Doubly Linked List example\nnull <- 2 <-> 5 <-> 3 <-> 6 <-> null\n            "),e.qZA(),e._uU(250,"\n        "),e.qZA(),e.TgZ(251,"p"),e._uU(252,"Other than that, the way a linked list is stored in memory is different from an array. Unlike arrays, linked lists are not stored back-to-back. Because of this, some operations in linked lists are faster than arrays. The time complexities of these operations also depend on whether the linked lists have the tail and head declared."),e.qZA(),e.TgZ(253,"table"),e.TgZ(254,"tr"),e.TgZ(255,"th"),e._uU(256,"Operation"),e.qZA(),e.TgZ(257,"th"),e._uU(258,"Time Complexity"),e.qZA(),e.TgZ(259,"th"),e._uU(260,"Space Complexity"),e.qZA(),e.qZA(),e.TgZ(261,"tr"),e.TgZ(262,"td"),e._uU(263,"Accessing the head"),e.qZA(),e.TgZ(264,"td"),e._uU(265,"O(1)"),e.qZA(),e.TgZ(266,"td"),e._uU(267,"O(1)"),e.qZA(),e.qZA(),e.TgZ(268,"tr"),e.TgZ(269,"td"),e._uU(270,"Accessing the tail"),e.qZA(),e.TgZ(271,"td"),e._uU(272,"O(1) if tail is defined; else O(n)"),e.qZA(),e.TgZ(273,"td"),e._uU(274,"O(1)"),e.qZA(),e.qZA(),e.TgZ(275,"tr"),e.TgZ(276,"td"),e._uU(277,"Accessing a middle node"),e.qZA(),e.TgZ(278,"td"),e._uU(279,"O(i), where i is the index of the node"),e.qZA(),e.TgZ(280,"td"),e._uU(281,"O(1)"),e.qZA(),e.qZA(),e.TgZ(282,"tr"),e.TgZ(283,"td"),e._uU(284,"Inserting/Removing the head"),e.qZA(),e.TgZ(285,"td"),e._uU(286,"O(1)"),e.qZA(),e.TgZ(287,"td"),e._uU(288,"O(1)"),e.qZA(),e.qZA(),e.TgZ(289,"tr"),e.TgZ(290,"td"),e._uU(291,"Inserting/Removing the tail"),e.qZA(),e.TgZ(292,"td"),e._uU(293,"O(1) if tail is defined; else O(n)"),e.qZA(),e.TgZ(294,"td"),e._uU(295,"O(1)"),e.qZA(),e.qZA(),e.TgZ(296,"tr"),e.TgZ(297,"td"),e._uU(298,"Inserting/Removing a middle node"),e.qZA(),e.TgZ(299,"td"),e._uU(300,"O(i), where i is the index of the node"),e.qZA(),e.TgZ(301,"td"),e._uU(302,"O(1)"),e.qZA(),e.qZA(),e.TgZ(303,"tr"),e.TgZ(304,"td"),e._uU(305,"Searching for a value"),e.qZA(),e.TgZ(306,"td"),e._uU(307,"O(n)"),e.qZA(),e.TgZ(308,"td"),e._uU(309,"O(1)"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(310,"p"),e._uU(311,'Another special linked list is circular linked list, which doesn\'t have clear "tail" and "head"'),e.qZA(),e._UZ(312,"mat-divider"),e.qZA(),e.TgZ(313,"div",14),e.TgZ(314,"h2"),e._uU(315,"Hash Tables"),e.qZA(),e.TgZ(316,"p"),e._uU(317,"Hash Tables are basically key-value stores."),e.qZA(),e.TgZ(318,"p"),e._uU(319,"A lot of modern programming languages have built-in hash tables. For example:"),e.qZA(),e.TgZ(320,"ul"),e.TgZ(321,"li"),e._uU(322,"Python - Dictionary"),e.qZA(),e.TgZ(323,"li"),e._uU(324,"Javascript - Object"),e.qZA(),e.qZA(),e.TgZ(325,"p"),e._uU(326,"An example of hash table using Javascript Object:"),e.qZA(),e.TgZ(327,"pre"),e._uU(328,"            "),e.TgZ(329,"code"),e._uU(330,"\n// Javascript Object example\nconst monthRecord = {\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10\n}\n            "),e.qZA(),e._uU(331,"\n        "),e.qZA(),e.TgZ(332,"p"),e._uU(333,"Under the hood, a hash table uses a Dynamic Array of Linked Lists to store the key-value pairs."),e.qZA(),e.TgZ(334,"p"),e._uU(335,"When inserting a key-value pair, the "),e.TgZ(336,"span",13),e._uU(337,"key"),e.qZA(),e._uU(338," is hashed into an integer, which will be used as index of the underlying dynamic array. Then, the "),e.TgZ(339,"span",13),e._uU(340,"value"),e.qZA(),e._uU(341," associated with the "),e.TgZ(342,"span",13),e._uU(343,"key"),e.qZA(),e._uU(344," will be added to the linked list stored at the index in the dynamic array. A reference to the "),e.TgZ(345,"span",13),e._uU(346,"key"),e.qZA(),e._uU(347," is also stored with that "),e.TgZ(348,"span",13),e._uU(349,"value"),e.qZA(),e._uU(350,". "),e.qZA(),e.TgZ(351,"p"),e._uU(352,"Hence, when there are multiple "),e.TgZ(353,"span",13),e._uU(354,"keys"),e.qZA(),e._uU(355," being hashed into a same integer, the length of linked list at the integer will be longer."),e.qZA(),e.TgZ(356,"p"),e._uU(357,"The example below shows the best case and worst case of hashing:"),e.qZA(),e.TgZ(358,"pre"),e._uU(359,"            "),e.TgZ(360,"code"),e._uU(361,"\n// BEST CASE\n[\n    0: (9, 'SEP') -> null\n    1: (10, 'OCT') -> null\n    2: (8, 'AUG') -> null\n]\n\n// WORST CASE\n[\n    0: (9, 'SEP') -> (10, 'OCT') -> (8, 'AUG') -> null\n    1: null\n    2: null\n]\n            "),e.qZA(),e._uU(362,"\n        "),e.qZA(),e.TgZ(363,"p"),e._uU(364,"However, in practice, we typically assume that the built-in hash functions are good enough to give us the best case for most of the time. And with knowledge about time complexity for different operations in Linked List, we can say that: "),e.qZA(),e._uU(365," The time complexity is O(1) on average; O(n) in the worse case for: "),e.TgZ(366,"ul"),e.TgZ(367,"li"),e._uU(368,"Inserting a key-value pair"),e.qZA(),e.TgZ(369,"li"),e._uU(370,"Removing a key-value pair"),e.qZA(),e.TgZ(371,"li"),e._uU(372,"Looking up a key"),e.qZA(),e.qZA(),e._UZ(373,"mat-divider"),e.qZA(),e.TgZ(374,"div",15),e.TgZ(375,"h2"),e._uU(376,"Stacks And Queues"),e.qZA(),e.TgZ(377,"table"),e.TgZ(378,"tr"),e.TgZ(379,"th",16),e._uU(380,"Stack"),e.qZA(),e.TgZ(381,"th",16),e._uU(382,"Queue"),e.qZA(),e.qZA(),e.TgZ(383,"tr"),e.TgZ(384,"td"),e._uU(385,"An array-like data structure whose elements follow the Last In First Out (LIFO) rule"),e.qZA(),e.TgZ(386,"td"),e._uU(387,"An array-like data structure whose elements follow the First In First Out (FIFO) rule"),e.qZA(),e.qZA(),e.TgZ(388,"tr"),e.TgZ(389,"td"),e._uU(390,"Similar to a stack of book, the last book will always be the first one to be removed from the stack."),e.qZA(),e.TgZ(391,"td"),e._uU(392,"Similar to a group of people queueing to buy something, and the first one in the queue will be the first one to be served and get out of the queue. "),e.qZA(),e.qZA(),e.TgZ(393,"tr"),e.TgZ(394,"td"),e._uU(395,"Typically implemented with a dynamic array or singly linked list"),e.qZA(),e.TgZ(396,"td"),e._uU(397,"Typically implemented with a doubly linked list"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(398,"p"),e._uU(399,'Both stack and queue have the same time complexity for the following operations, take note of the difference in naming used for "insert" and "remove" operations:'),e.qZA(),e.TgZ(400,"table"),e.TgZ(401,"tr"),e.TgZ(402,"th"),e._uU(403,"Stack"),e.qZA(),e.TgZ(404,"th"),e._uU(405,"Queue"),e.qZA(),e.TgZ(406,"th"),e._uU(407,"Time Complexity"),e.qZA(),e.qZA(),e.TgZ(408,"tr"),e.TgZ(409,"td"),e._uU(410,"Pushing an element onto the stack"),e.qZA(),e.TgZ(411,"td"),e._uU(412,"Enqueueing an element into the queue"),e.qZA(),e.TgZ(413,"td"),e._uU(414,"O(1)"),e.qZA(),e.qZA(),e.TgZ(415,"tr"),e.TgZ(416,"td"),e._uU(417,"Popping an element off the stack"),e.qZA(),e.TgZ(418,"td"),e._uU(419,"Dequeueing an element out of the queue"),e.qZA(),e.TgZ(420,"td"),e._uU(421,"O(1)"),e.qZA(),e.qZA(),e.TgZ(422,"tr"),e.TgZ(423,"td"),e._uU(424,"Peeking at the element on the top of the stack"),e.qZA(),e.TgZ(425,"td"),e._uU(426,"Peeking at the element at the front of the queue"),e.qZA(),e.TgZ(427,"td"),e._uU(428,"O(1)"),e.qZA(),e.qZA(),e.TgZ(429,"tr"),e.TgZ(430,"td"),e._uU(431,"Searching for an element in the stack"),e.qZA(),e.TgZ(432,"td"),e._uU(433,"Searching for an element in the queue"),e.qZA(),e.TgZ(434,"td"),e._uU(435,"O(n)"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(436,"p"),e._uU(437,"The space complexity of the operations are basically O(1) space, except copying."),e.qZA(),e._UZ(438,"mat-divider"),e.qZA(),e.TgZ(439,"div",17),e.TgZ(440,"h2"),e._uU(441,"Strings"),e.qZA(),e.TgZ(442,"p"),e._uU(443,"Strings are implemented differently depending on the programming languages."),e.qZA(),e.TgZ(444,"p"),e._uU(445,"Strings are basically an array of integers which are mapped to the characters of the string via character-enconding standard such as ASCII."),e.qZA(),e.TgZ(446,"table"),e.TgZ(447,"tr"),e.TgZ(448,"th"),e._uU(449,"Operation"),e.qZA(),e.TgZ(450,"th"),e._uU(451,"Time Complexity"),e.qZA(),e.TgZ(452,"th"),e._uU(453,"Space Complexity"),e.qZA(),e.qZA(),e.TgZ(454,"tr"),e.TgZ(455,"td"),e._uU(456,"Traverse a string"),e.qZA(),e.TgZ(457,"td"),e._uU(458,"O(n)"),e.qZA(),e.TgZ(459,"td"),e._uU(460,"O(1)"),e.qZA(),e.qZA(),e.TgZ(461,"tr"),e.TgZ(462,"td"),e._uU(463,"Copying a string"),e.qZA(),e.TgZ(464,"td"),e._uU(465,"O(n)"),e.qZA(),e.TgZ(466,"td"),e._uU(467,"O(n)"),e.qZA(),e.qZA(),e.TgZ(468,"tr"),e.TgZ(469,"td"),e._uU(470,"Accessing a character at a given index"),e.qZA(),e.TgZ(471,"td"),e._uU(472,"O(1)"),e.qZA(),e.TgZ(473,"td"),e._uU(474,"O(1)"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(475,"p"),e._uU(476,"In most programming languages (except C++), strings are immutable, means they cannot be edited after creation. Hence, simple operations such as appending a character to a string is much expensivex than they might appear. This is because when we want to edit immutable strings, we are basically creating new strings."),e.qZA(),e.TgZ(477,"p"),e._uU(478,'For example, if we want to add a string "def" after the immutable string "abc":'),e.qZA(),e.TgZ(479,"pre"),e._uU(480,"            "),e.TgZ(481,"code"),e._uU(482,"\n// example\nstring1 = 'abc';\nstring1 += 'def';\n\nSpace-Time complexity: O(n+m) where the n is due to copying the string and the m is due to adding of the 'def'\n            "),e.qZA(),e._uU(483,"\n        "),e.qZA(),e.TgZ(484,"p"),e._uU(485,"Therefore, it is recommended to store string in the form of array of characters if possible."),e.qZA(),e._UZ(486,"mat-divider"),e.qZA(),e.TgZ(487,"div",18),e.TgZ(488,"h2"),e._uU(489,"Graphs"),e.qZA(),e.TgZ(490,"p"),e._uU(491,"Graphs are collection of nodes that might or might not connected to one another. The nodes are called "),e.TgZ(492,"span",13),e._uU(493,"vertices"),e.qZA(),e._uU(494," and the arrows or connections between the vertices are called "),e.TgZ(495,"span",13),e._uU(496,"edges"),e.qZA(),e._uU(497,"."),e.qZA(),e.TgZ(498,"p"),e._uU(499,"Some terms and definitions:"),e.qZA(),e.TgZ(500,"table"),e.TgZ(501,"tr"),e.TgZ(502,"th"),e._uU(503,"Term"),e.qZA(),e.TgZ(504,"th"),e._uU(505,"Definition"),e.qZA(),e.qZA(),e.TgZ(506,"tr"),e.TgZ(507,"td"),e._uU(508,"Graph Cycle"),e.qZA(),e.TgZ(509,"td"),e._uU(510,"A closed loop formed by vertices"),e.qZA(),e.qZA(),e.TgZ(511,"tr"),e.TgZ(512,"td"),e._uU(513,"Acyclic Graph"),e.qZA(),e.TgZ(514,"td"),e._uU(515,"A graph that has no cycles"),e.qZA(),e.qZA(),e.TgZ(516,"tr"),e.TgZ(517,"td"),e._uU(518,"Cyclic Graph"),e.qZA(),e.TgZ(519,"td"),e._uU(520,"A graph that has at least one cycle"),e.qZA(),e.qZA(),e.TgZ(521,"tr"),e.TgZ(522,"td"),e._uU(523,"Directed Graph"),e.qZA(),e.TgZ(524,"td"),e._uU(525,"A graph with directed edges, and can only be traversed in one direction"),e.qZA(),e.qZA(),e.TgZ(526,"tr"),e.TgZ(527,"td"),e._uU(528,"Undirected Graph"),e.qZA(),e.TgZ(529,"td"),e._uU(530,"A graph with undirected edges, and can be traversed in both directions"),e.qZA(),e.qZA(),e.TgZ(531,"tr"),e.TgZ(532,"td"),e._uU(533,"Connected Graph"),e.qZA(),e.TgZ(534,"td"),e._uU(535,"A graph that has one or more edges in every pair of vertices."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(536,"p"),e._uU(537,"Two types of traversing method: Depth-first Search & Breadth-first Search"),e.qZA(),e.TgZ(538,"p"),e._uU(539,"Traversing the graph will need O(V+E) Space-Time Complexity, where V is number of vertices and E is number edges."),e.qZA(),e._UZ(540,"mat-divider"),e.qZA(),e.TgZ(541,"div",19),e.TgZ(542,"h2"),e._uU(543,"Trees"),e.qZA(),e.TgZ(544,"p"),e._uU(545,"Tree is a special type of graph, which is acyclic, directed and connected. Each node of tree can only have one parent."),e.qZA(),e.TgZ(546,"p"),e._uU(547,"Tree nodes normally don't have a pointer to their parents, but they can if desired."),e.qZA(),e.TgZ(548,"p"),e._uU(549,"The first node of the tree is called "),e.TgZ(550,"span",13),e._uU(551,"root"),e.qZA(),e._uU(552,", the nodes at the bottom without child nodes are called "),e.TgZ(553,"span",13),e._uU(554,"leaf nodes"),e.qZA(),e._uU(555,", whereas the nodes between root and leaf nodes are called "),e.TgZ(556,"span",13),e._uU(557,"branches"),e.qZA(),e._uU(558,"."),e.qZA(),e.TgZ(559,"p"),e._uU(560,"The "),e.TgZ(561,"span",13),e._uU(562,"height "),e.qZA(),e.TgZ(563,"span",20),e._uU(564,"of a tree"),e.qZA(),e._uU(565," is referring to the length of the longest branch, whereas the "),e.TgZ(566,"span",13),e._uU(567,"depth "),e.qZA(),e.TgZ(568,"span",20),e._uU(569,"of a node"),e.qZA(),e._uU(570," is its distance from the root node. "),e.TgZ(571,"a"),e._uU(572,"For illustarion"),e.qZA(),e.qZA(),e.TgZ(573,"p"),e._uU(574,"There are many types of trees:"),e.qZA(),e.TgZ(575,"table"),e.TgZ(576,"tr"),e.TgZ(577,"th"),e._uU(578,"Tree"),e.qZA(),e.TgZ(579,"th"),e._uU(580,"Definition"),e.qZA(),e.qZA(),e.TgZ(581,"tr"),e.TgZ(582,"td"),e._uU(583,"Binary Tree"),e.qZA(),e.TgZ(584,"td"),e._uU(585,"A tree whose nodes have up to 2 child nodes"),e.qZA(),e.qZA(),e.TgZ(586,"tr"),e.TgZ(587,"td"),e._uU(588,"K-ary Tree"),e.qZA(),e.TgZ(589,"td"),e._uU(590,"A tree whose nodes have up to k child nodes"),e.qZA(),e.qZA(),e.TgZ(591,"tr"),e.TgZ(592,"td"),e._uU(593,"Heaps"),e.qZA(),e.TgZ(594,"td"),e._uU(595,"Min-Heaps and Max-Heaps are also Binary Heaps where every node in the tree satisfies the Min or Max Heap property"),e.qZA(),e.qZA(),e.TgZ(596,"tr"),e.TgZ(597,"td"),e._uU(598,"Tries"),e.qZA(),e.TgZ(599,"td"),e._uU(600,"A tree-like data structure that stores characters in a string"),e.qZA(),e.qZA(),e.TgZ(601,"tr"),e.TgZ(602,"td"),e._uU(603,"Perfect Binary Tree"),e.qZA(),e.TgZ(604,"td"),e._uU(605,"A tree with all nodes having 2 child nodes, and all leaf nodes have the same depth."),e.qZA(),e.qZA(),e.TgZ(606,"tr"),e.TgZ(607,"td"),e._uU(608,"Complete Binary Tree"),e.qZA(),e.TgZ(609,"td"),e._uU(610,"A binary tree that is almost perfect, with all nodes having 2 child nodes, but the leaf nodes don't necessarily have the same depth. More importantly, the nodes in the last level are as far as possible. "),e.qZA(),e.qZA(),e.TgZ(611,"tr"),e.TgZ(612,"td"),e._uU(613,"Balanced Binary Tree"),e.qZA(),e.TgZ(614,"td"),e._uU(615,"A binary tree with left and right subtrees of all nodes having height difference not more than 1."),e.qZA(),e.qZA(),e.TgZ(616,"tr"),e.TgZ(617,"td"),e._uU(618,"Full Binary Tree"),e.qZA(),e.TgZ(619,"td"),e._uU(620,"A binary tree with nodes having either zero child nodes or 2 child nodes"),e.qZA(),e.qZA(),e.qZA(),e._UZ(621,"mat-divider"),e.qZA(),e.TgZ(622,"div",21),e.TgZ(623,"h2"),e._uU(624,"Heaps"),e.qZA(),e.TgZ(625,"p"),e._uU(626,"As listed in the table above, heap is a kind of tree, or we also can say it is a kind of graph since tree is a kind of special graph."),e.qZA(),e.TgZ(627,"p"),e._uU(628,"Heaps is primarily used for getting the minimum or the maximum value present in a heap in O(1) time."),e.qZA(),e.TgZ(629,"p"),e._uU(630,"For detailed explanation, please refer to this "),e.TgZ(631,"a",22),e._uU(632,"post"),e.qZA(),e._uU(633,"."),e.qZA(),e.qZA(),e.qZA())},directives:[R,w,x,D,C.lW,_.xw,A],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}"]}),n})(),hn=(()=>{class n{constructor(t){this.router=t}scrollTo(t){this.router.navigate([],{fragment:t}).then(()=>{const i=document.getElementById(t);null!=i&&i.scrollIntoView()})}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(b.F0))},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-javascript-notes"]],decls:111,vars:0,consts:[[1,"flexContainer"],["displayMode","flat",2,"padding-left","5px","padding-right","5px"],[2,"margin-top","5px"],["mat-button","",1,"listItem",3,"click"],["fxLayout","column","fxLayout","column"],["href","https://stackoverflow.com/questions/2035645/when-is-javascript-synchronous","target","_blank","rel","noopener noreferrer"],["id","hoisting"],["href","https://www.geeksforgeeks.org/javascript-hoisting/","target","_blank","rel","noopener noreferrer"],["id","var&let&const"],["id","asynchronousProgramming"],["href","https://nodejs.dev/learn/javascript-asynchronous-programming-and-callbacks","target","_blank","rel","noopener noreferrer"],["href","https://nodejs.dev/learn/understanding-javascript-promises","target","_blank","rel","noopener noreferrer"],["href","https://nodejs.dev/learn/modern-asynchronous-javascript-with-async-and-await","target","_blank","rel","noopener noreferrer"],["href","https://github.com/TKA-Andrew/JavascriptTutorialTemplate","target","_blank","rel","noopener noreferrer"],["href","https://advancedweb.hu/how-to-use-async-functions-with-array-foreach-in-javascript/","target","_blank","rel","noopener noreferrer"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"mat-accordion",1),e.TgZ(2,"mat-expansion-panel",2),e.TgZ(3,"mat-expansion-panel-header"),e.TgZ(4,"mat-panel-title"),e._uU(5," JavaScript "),e.qZA(),e.qZA(),e.TgZ(6,"button",3),e.NdJ("click",function(){return i.scrollTo("hoisting")}),e._uU(7,"Hoisting"),e.qZA(),e.TgZ(8,"button",3),e.NdJ("click",function(){return i.scrollTo("var&let&const")}),e._uU(9,"var, let & const"),e.qZA(),e.TgZ(10,"button",3),e.NdJ("click",function(){return i.scrollTo("asynchronousProgramming")}),e._uU(11,"Asynchronous Programming"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(12,"div",4),e.TgZ(13,"div"),e.TgZ(14,"h1"),e._uU(15,"Javascript"),e.qZA(),e.TgZ(16,"h2"),e._uU(17,"Introduction"),e.qZA(),e.TgZ(18,"p"),e._uU(19,"The following are mainly the notes for Javascript in Node.js 14 runtime environment."),e.qZA(),e.TgZ(20,"p"),e._uU(21,"Some people always confused that Javascript is asynchronous in nature, but actually Javascript is synchronous and single-threaded. Javascript can behave as if it is asynchronous when there are some ajax calls, events or timers being used, but in actual, it is still synchronous. For a detailed explanation, please refer to the answer posted by user2603796 in this "),e.TgZ(22,"a",5),e._uU(23,"stackoverflow post"),e.qZA(),e._uU(24,"."),e.qZA(),e._UZ(25,"mat-divider"),e.qZA(),e.TgZ(26,"div",6),e.TgZ(27,"h2"),e._uU(28,"Hoisting"),e.qZA(),e.TgZ(29,"p"),e._uU(30,"Hoisting is JavaScript's default behavior of moving declarations to the top. Therefore, in JavaScript, a variable can be declared after it has been used."),e.qZA(),e.TgZ(31,"p"),e._uU(32,"Understanding Javascript Hoisting is important for us to futher understand why there is difference in using var and let in some cases."),e.qZA(),e.TgZ(33,"p"),e._uU(34,"Hoisting can only be demonstrated in CommonJS as the ES6 module is automatically in strict-mode"),e.qZA(),e.TgZ(35,"pre"),e._uU(36,"                "),e.TgZ(37,"code"),e._uU(38,"\n    // WRITTEN CODE\n\n    x = 5\n    var x\n    console.log(x)\n\n\n    // ACTUAL PROCESS due to hoisting\n\n    var x\n    x = 5\n    console.log(x)\n                "),e.qZA(),e._uU(39,"\n            "),e.qZA(),e.TgZ(40,"p"),e._uU(41,"The following example demonstrates why the result is undefined instead of having ReferenceError when the if statement is not met:"),e.qZA(),e.TgZ(42,"pre"),e._uU(43,"                "),e.TgZ(44,"code"),e._uU(45,"\n    // WRITTEN CODE\n\n    function isLessThan10_var (number) {\n        if (number < 10) {\n            var lessThan10 = true\n        }\n        return lessThan10\n    }\n    console.log(isLessThan10_var(2)) // << true\n    console.log(isLessThan10_var(12)) // << undefined\n\n\n    // ACTUAL PROCESS due to hoisting\n\n    function isLessThan10_var (number) {\n        var lessThan10\n        if (number < 10) {\n            lessThan10 = true\n        }\n        return lessThan10\n    }\n    console.log(isLessThan10_var(2)) // << true\n    console.log(isLessThan10_var(12)) // << undefined\n                "),e.qZA(),e._uU(46,"\n            "),e.qZA(),e.TgZ(47,"p"),e.TgZ(48,"a",7),e._uU(49,"A much detailed reference."),e.qZA(),e.qZA(),e._UZ(50,"mat-divider"),e.qZA(),e.TgZ(51,"div",8),e.TgZ(52,"h2"),e._uU(53,"var, let & const"),e.qZA(),e.TgZ(54,"p"),e._uU(55,"The let statement is one of the most well-known features in ES6, and it is not available before ES6."),e.qZA(),e.TgZ(56,"p"),e._uU(57,"Simple & quick notes:"),e.qZA(),e.TgZ(58,"ul"),e.TgZ(59,"li"),e._uU(60,"var is function-scoped"),e.qZA(),e.TgZ(61,"li"),e._uU(62,"let is block-scoped"),e.qZA(),e.TgZ(63,"li"),e._uU(64,"const is block-scoped"),e.qZA(),e.TgZ(65,"li"),e._uU(66,"const behaves similar to let when it comes to hoisting, except that it cannot be modified after declaration"),e.qZA(),e.qZA(),e.TgZ(67,"p"),e._uU(68,"For the code snippet below, both .mjs and .cjs will have the same result:"),e.qZA(),e.TgZ(69,"pre"),e._uU(70,"                "),e.TgZ(71,"code"),e._uU(72,"\n    function printX_var() {\n        try {\n            console.log('printX_var OUTPUT:', x);\n            var x=5; // function-scoped and supports hoisting\n            console.log('printX_var OUTPUT:', x);\n        }\n        catch(err) {\n            console.log('printX_var ERROR: ', err.message)\n        }\n    }\n    \n    printX_var()\n    \n    function printX_let() {\n        try {\n            console.log('printX_let OUTPUT:', x);\n            let x=5; // block-scoped and not affected by hoisting\n            console.log('printX_let OUTPUT:', x);\n        }\n        catch(err) {\n            console.log('printX_let ERROR: ', err.message)\n        }\n    }\n    \n    printX_let()\n    \n    function printX_const() {\n        try{\n            console.log('printX_const OUTPUT:', x);\n            const x=5; // block-scoped and not affected by hoisting\n            console.log('printX_const OUTPUT:', x);\n        }\n        catch(err) {\n            console.log('printX_const ERROR: ', err.message)\n        }\n    }\n    \n    printX_const()\n                "),e.qZA(),e._uU(73,"\n            "),e.qZA(),e.TgZ(74,"pre"),e._uU(75,"                "),e.TgZ(76,"code"),e._uU(77,"\n    // console.log output\n\n    printX_var OUTPUT: undefined\n    printX_var OUTPUT: 5\n    printX_let ERROR:  Cannot access 'x' before initialization\n    printX_const ERROR:  Cannot access 'x' before initialization\n                "),e.qZA(),e._uU(78,"\n            "),e.qZA(),e._UZ(79,"mat-divider"),e.qZA(),e.TgZ(80,"div",9),e.TgZ(81,"h2"),e._uU(82,"Javascript Asynchronous Programming"),e.qZA(),e.TgZ(83,"p"),e._uU(84,"Again, JavaScript is synchronous by default and is single threaded. This means that Javascript code cannot create new threads and run in parallel."),e.qZA(),e.TgZ(85,"p"),e._uU(86,"However, with the APIs provided by the broswers' engines or Node.js, it can behave as if it is asynchronous."),e.qZA(),e.TgZ(87,"p"),e._uU(88,"Some common APIs that react asynchronously such as onClick, onMouseOver and OnChange are all not from Javascript engine itself."),e.qZA(),e.TgZ(89,"p"),e._uU(90,"To do JavaScript Asynchronous Programming, you can make use of these:"),e.qZA(),e.TgZ(91,"ul"),e.TgZ(92,"li"),e.TgZ(93,"a",10),e._uU(94,"Event Callbacks"),e.qZA(),e.qZA(),e.TgZ(95,"li"),e.TgZ(96,"a",11),e._uU(97,"Promises"),e.qZA(),e.qZA(),e.TgZ(98,"li"),e.TgZ(99,"a",12),e._uU(100,"Async/Await"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(101,"p"),e._uU(102,"The references above are very detailed and easy to understand. If you would like to see some templates, you may check out my "),e.TgZ(103,"a",13),e._uU(104,"Github Repo"),e.qZA(),e._uU(105,", especially the JS_Async.js which mimics the database query process and how to control the asynchronous flow using Promises and Async/Await."),e.qZA(),e.TgZ(106,"p"),e.TgZ(107,"a",14),e._uU(108,"This"),e.qZA(),e._uU(109," is another revelant reference."),e.qZA(),e._UZ(110,"mat-divider"),e.qZA(),e.qZA(),e.qZA())},directives:[R,w,x,D,C.lW,_.xw,A],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}"]}),n})(),Zn=(()=>{class n{constructor(t){this.router=t}scrollTo(t){this.router.navigate([],{fragment:t}).then(i=>{const o=document.getElementById(t);null!=o&&o.scrollIntoView()})}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(b.F0))},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-npm-notes"]],decls:47,vars:0,consts:[[1,"flexContainer"],["displayMode","flat",2,"padding-left","5px","padding-right","5px"],[2,"margin-top","5px"],["mat-button","",1,"listItem",3,"click"],["fxLayout","column","fxLayout","column"],["id","packageJson"],["href","https://medium.com/dlt-labs-publication/package-json-vs-package-lock-json-c8d5deba12cb","target","_blank","rel","noopener noreferrer"],[2,"font-style","italic"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"mat-accordion",1),e.TgZ(2,"mat-expansion-panel",2),e.TgZ(3,"mat-expansion-panel-header"),e.TgZ(4,"mat-panel-title"),e._uU(5," npm "),e.qZA(),e.qZA(),e.TgZ(6,"button",3),e.NdJ("click",function(){return i.scrollTo("packageJson")}),e._uU(7,"package.json vs package-lock.json"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(8,"div",4),e.TgZ(9,"div"),e.TgZ(10,"h1"),e._uU(11,"Npm"),e.qZA(),e.TgZ(12,"h2"),e._uU(13,"Introduction"),e.qZA(),e.TgZ(14,"p"),e._uU(15,"Node Package Manager (npm) is the package manager for Javascript mained by npm, Inc."),e.qZA(),e.TgZ(16,"p"),e._uU(17,"npm is also the default package manager for Node.js"),e.qZA(),e._UZ(18,"mat-divider"),e.qZA(),e.TgZ(19,"div",5),e.TgZ(20,"h2"),e._uU(21,"package.json vs package-lock.json"),e.qZA(),e.TgZ(22,"p"),e._uU(23,"The following are the notes summarized from this "),e.TgZ(24,"a",6),e._uU(25,"Medium post"),e.qZA(),e._uU(26,"."),e.qZA(),e.TgZ(27,"ul"),e.TgZ(28,"li"),e._uU(29,"package.json is the versioning file used to install different packages in a Node.js project"),e.qZA(),e.TgZ(30,"li"),e._uU(31,"Every time you install any package using "),e.TgZ(32,"span",7),e._uU(33,"npm install <package-name> --save"),e.qZA(),e._uU(34,", it will install the latest version of that package in your project."),e.qZA(),e.TgZ(35,"li"),e._uU(36,"Then, the package.json of your project will be updated by adding the dependency of the newly installed package with a carat(^) sign."),e.qZA(),e.TgZ(37,"li"),e._uU(38,"The carat (^) sign indicates that it will support any higher version within the same major version."),e.qZA(),e.TgZ(39,"li"),e._uU(40,"For example, if you installed a lodash-es at version 4.17.21, then your package.json will have "),e.TgZ(41,"span",7),e._uU(42,'"lodash-es": "^4.17.21"'),e.qZA(),e._uU(43,". If few months later the latest lodash-es package is 4.20.2, and when someone clones your package and run npm install, the lodash-es version installed will be 4.20.2"),e.qZA(),e.TgZ(44,"li"),e._uU(45,"Hence, to make sure the project is cloned and installed with exactly same dependencies, we need to have package-lock.json to lock the versions of packages we used."),e.qZA(),e.qZA(),e._UZ(46,"mat-divider"),e.qZA(),e.qZA(),e.qZA())},directives:[R,w,x,D,C.lW,_.xw,A],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}"]}),n})();var mn=d(9976),K=d(3017),_n=d(8030);const fn=[{path:"",component:(()=>{class n{constructor(){this.faList=mn.Zrf,this.isSideDrawerOpened=!0}toggleSideDrawer(){this.isSideDrawerOpened=!this.isSideDrawerOpened}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-technical-notes"]],decls:75,vars:2,consts:[[1,"flexContainer"],["id","sideDrawer","mode","side",2,"background-color","rgb(61, 61, 61)",3,"opened"],["displayMode","flat"],[2,"margin-top","5px"],["mat-button","","routerLink","coding/general","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","coding/dataStructures","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","coding/cpp","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","coding/cpp-part2","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","",1,"listItem"],["mat-button","","routerLink","coding/javaScript","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","coding/resources","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","robotics/ROS","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","webDevelopment/general","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","webDevelopment/sequelize","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","webDevelopment/postgresql","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","miscellaneuos/npm","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","miscellaneuos/GitNotes","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","miscellaneuos/GitLabCICD","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],["mat-button","","routerLink","miscellaneuos/CMakeNotes","routerLinkActive","technicalNotesRouterLinkActive",1,"listItem"],[2,"padding","1.6em 3.2em","box-sizing","border-box","overflow","auto"],["mat-button","","id","sideDrawerControl","fxShow","true","fxHide.gt-sm","true",3,"click"],["size","1x",3,"icon"]],template:function(t,i){1&t&&(e.TgZ(0,"mat-drawer-container",0),e.TgZ(1,"mat-drawer",1),e.TgZ(2,"mat-accordion",2),e.TgZ(3,"mat-expansion-panel",3),e.TgZ(4,"mat-expansion-panel-header"),e.TgZ(5,"mat-panel-title"),e._uU(6," Coding "),e.qZA(),e.qZA(),e.TgZ(7,"button",4),e._uU(8,"General"),e.qZA(),e.TgZ(9,"button",5),e._uU(10,"Data Structures"),e.qZA(),e.TgZ(11,"button",6),e._uU(12,"C++"),e.qZA(),e.TgZ(13,"button",7),e._uU(14,"C++ Part2"),e.qZA(),e.TgZ(15,"button",8),e._uU(16,"Python"),e.qZA(),e.TgZ(17,"button",9),e._uU(18,"Javascript"),e.qZA(),e.TgZ(19,"button",10),e._uU(20,"Resources"),e.qZA(),e.qZA(),e.TgZ(21,"mat-expansion-panel"),e.TgZ(22,"mat-expansion-panel-header"),e.TgZ(23,"mat-panel-title"),e._uU(24," Robotics "),e.qZA(),e.qZA(),e.TgZ(25,"button",11),e._uU(26,"ROS"),e.qZA(),e.qZA(),e.TgZ(27,"mat-expansion-panel"),e.TgZ(28,"mat-expansion-panel-header"),e.TgZ(29,"mat-panel-title"),e._uU(30," Image Processing "),e.qZA(),e.qZA(),e.TgZ(31,"button",8),e._uU(32,"OpenCV"),e.qZA(),e.qZA(),e.TgZ(33,"mat-expansion-panel"),e.TgZ(34,"mat-expansion-panel-header"),e.TgZ(35,"mat-panel-title"),e._uU(36," Artificial Intelligence "),e.qZA(),e.qZA(),e.TgZ(37,"button",8),e._uU(38,"Python"),e.qZA(),e.qZA(),e.TgZ(39,"mat-expansion-panel"),e.TgZ(40,"mat-expansion-panel-header"),e.TgZ(41,"mat-panel-title"),e._uU(42," Web Development "),e.qZA(),e.qZA(),e.TgZ(43,"button",12),e._uU(44,"General"),e.qZA(),e.TgZ(45,"button",8),e._uU(46,"Angular"),e.qZA(),e.TgZ(47,"button",13),e._uU(48,"Sequelize"),e.qZA(),e.TgZ(49,"button",14),e._uU(50,"PostgreSQL"),e.qZA(),e.qZA(),e.TgZ(51,"mat-expansion-panel"),e.TgZ(52,"mat-expansion-panel-header"),e.TgZ(53,"mat-panel-title"),e._uU(54," Miscellaneous "),e.qZA(),e.qZA(),e.TgZ(55,"button",15),e._uU(56,"npm"),e.qZA(),e.TgZ(57,"button",16),e._uU(58,"Git Notes"),e.qZA(),e.TgZ(59,"button",17),e._uU(60,"GitLab CI/CD"),e.qZA(),e.TgZ(61,"button",18),e._uU(62,"CMake Notes"),e.qZA(),e.qZA(),e.TgZ(63,"mat-expansion-panel"),e.TgZ(64,"mat-expansion-panel-header"),e.TgZ(65,"mat-panel-title"),e._uU(66," How Tos "),e.qZA(),e.qZA(),e.TgZ(67,"button",8),e._uU(68,"Dual boot Windows 10 with Ubuntu 20.04"),e.qZA(),e.TgZ(69,"button",8),e._uU(70,"Convert Python project to exe file"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(71,"mat-drawer-content",19),e.TgZ(72,"button",20),e.NdJ("click",function(){return i.toggleSideDrawer()}),e._UZ(73,"fa-icon",21),e.qZA(),e._UZ(74,"router-outlet"),e.qZA(),e.qZA()),2&t&&(e.xp6(1),e.Q6J("opened",i.isSideDrawerOpened),e.xp6(72),e.Q6J("icon",i.faList))},directives:[K.kh,K.jA,R,w,x,D,C.lW,b.rH,b.Od,K.LW,_n.b8,V.BN,b.lC],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#d9d9d9;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#666}mat-expansion-panel[_ngcontent-%COMP%]{color:#5fb5e7}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#d9d9d9;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#666;color:#fff;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 590px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#5fb5e7;font-weight:bold}"]}),n})(),children:[{path:"coding/general",component:wt},{path:"coding/dataStructures",component:pn},{path:"coding/cpp",component:gn},{path:"coding/cpp-part2",component:kt},{path:"coding/javaScript",component:hn},{path:"coding/resources",component:xt},{path:"robotics/ROS",component:(()=>{class n{constructor(){}ngOnInit(){}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-ros-notes"]],decls:86,vars:0,consts:[[1,"flexContainer"],["fxLayout","column","fxLayoutGap","10px"],[1,"CLI-font"],["href","https://answers.ros.org/question/263862/if-it-possible-to-launch-a-launch-file-from-python/\n                    http://wiki.ros.org/roslaunch/API%20Usage","target","_blank","rel","noopener noreferrer"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"div",1),e.TgZ(2,"h1"),e._uU(3,"ROS Notes"),e.qZA(),e.TgZ(4,"div"),e.TgZ(5,"h2"),e._uU(6,"Introduction"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"This page documents some ROS notes of mine."),e.qZA(),e._UZ(9,"mat-divider"),e.qZA(),e.TgZ(10,"div"),e.TgZ(11,"h3"),e._uU(12,"Some helpful Visual Studio Code extensions"),e.qZA(),e.TgZ(13,"ul"),e.TgZ(14,"li"),e._uU(15,"ROS (by Microsoft)"),e.qZA(),e.TgZ(16,"li"),e._uU(17,"ROS Snippets (by Liews Wuttipat)"),e.qZA(),e.TgZ(18,"li"),e._uU(19,"XML (by Red Hat)"),e.qZA(),e.TgZ(20,"li"),e._uU(21,"XML Tools (by Josh Johnson)"),e.qZA(),e.TgZ(22,"li"),e._uU(23,"vscode-icons (by VSCode Icons Team)"),e.qZA(),e.qZA(),e._UZ(24,"mat-divider"),e.qZA(),e.TgZ(25,"div"),e.TgZ(26,"h3"),e._uU(27,"To check whether a ROS package is installed"),e.qZA(),e.TgZ(28,"ul"),e.TgZ(29,"li"),e.TgZ(30,"span",2),e._uU(31,"rospack find [package-name]"),e.qZA(),e.qZA(),e.qZA(),e._UZ(32,"mat-divider"),e.qZA(),e.TgZ(33,"div"),e.TgZ(34,"h3"),e._uU(35,"Working with multiple catkin workspaces"),e.qZA(),e.TgZ(36,"ul"),e.TgZ(37,"li"),e._uU(38,"There is no best practice of saying whether you should only have one or multiple catkin workspaces."),e.qZA(),e.TgZ(39,"li"),e._uU(40,"My personal opinion is use a same workspace for your personal development and testing, and create a new workspace if only you are working on something that needs to be delivered to others"),e.qZA(),e.TgZ(41,"li"),e._uU(42,"Important Note: You can't run multiple catkin workspaces on the same session. The last to be sourced is the one to be activated."),e.qZA(),e.qZA(),e._UZ(43,"mat-divider"),e.qZA(),e.TgZ(44,"div"),e.TgZ(45,"h3"),e._uU(46,"To start or shutdown a launch file in script"),e.qZA(),e.TgZ(47,"ul"),e.TgZ(48,"li"),e.TgZ(49,"a",3),e._uU(50,"Reference"),e.qZA(),e.qZA(),e.TgZ(51,"li"),e._uU(52,"Code Snippet Example:"),e.qZA(),e.TgZ(53,"pre"),e._uU(54,"                    "),e.TgZ(55,"code"),e._uU(56,'\n    #!/usr/bin/env python\n    import rospy\n    import roslaunch\n    import rospkg\n    \n    class roslaunchAPI():\n        def __init__(self):\n            rospy.init_node(\'roslaunchAPI\', anonymous=True)\n            rospy.on_shutdown(self.shutdownHook)\n            uuid = roslaunch.rlutil.get_or_generate_uuid(None, False)\n            roslaunch.configure_logging(uuid)\n    \n            # get an instance of RosPack with the default search paths\n            rospack = rospkg.RosPack()\n    \n            # get the directory of the package\n            packagePath = rospack.get_path(\'beginner_tutorials\')\n            \n            #TAKE NOTE: provide absolute path instead of relative path \n            roslaunchControl = roslaunch.parent.ROSLaunchParent(uuid,[packagePath+"/launch/turtlemimic.launch"])\n    \n            roslaunchControl.start()\n            rospy.sleep(3)\n            roslaunchControl.shutdown()\n            rospy.signal_shutdown("Process completed.")\n    \n        def shutdownHook(self):\n            rospy.loginfo("Shutting down ...")\n    \n    if __name__ == "__main__":\n        try:\n            roslaunchApiObject = roslaunchAPI()\n            rospy.spin()\n    \n        except Exception as e:\n            rospy.logerr(e)\n                    '),e.qZA(),e._uU(57,"\n                "),e.qZA(),e.qZA(),e._UZ(58,"mat-divider"),e.qZA(),e.TgZ(59,"div"),e.TgZ(60,"h3"),e._uU(61,"Editing map generated"),e.qZA(),e.TgZ(62,"ul"),e.TgZ(63,"li"),e._uU(64,"Sometimes the map generated might not be perfect and need some touch-ups. For this, we can use image editor such as GIMP to edit the map."),e.qZA(),e.TgZ(65,"li"),e._uU(66,"Some simple guidelines:"),e.qZA(),e.TgZ(67,"ol"),e.TgZ(68,"li"),e._uU(69,"Install GIMP"),e.qZA(),e.TgZ(70,"li"),e._uU(71,"To get the colour of the background of the map, use the Color Pickup Tool in the Toolbox, then set PickMode as Set foreground color, and click on the background"),e.qZA(),e.TgZ(72,"li"),e._uU(73,"To draw straight lines, click on the image with paintbrush tool, then hold the [Shift] key and move your mouse around."),e.qZA(),e.TgZ(74,"li"),e._uU(75,"Export the file as .pgm format"),e.qZA(),e.TgZ(76,"li"),e._uU(77,"Go to the directory where you saved your map, you should see a file with the same name as your .pgm image, but in .yaml format."),e.qZA(),e.TgZ(78,"li"),e._uU(79,"Modify the value of 'image' key and replace with absolute path of your pgm file, for example:"),e.qZA(),e.TgZ(80,"pre"),e._uU(81,"                                "),e.TgZ(82,"code"),e._uU(83,"\n    image: /home/andrew/catkin_ws/src/help_me_carry_2017/src/maps/HMC2017map.pgm\n                                "),e.qZA(),e._uU(84,"\n                            "),e.qZA(),e.qZA(),e.qZA(),e._UZ(85,"mat-divider"),e.qZA(),e.qZA(),e.qZA())},directives:[_.xw,_.SQ,A],styles:[""]}),n})()},{path:"webDevelopment/general",component:(()=>{class n{constructor(t){this.router=t}scrollTo(t){this.router.navigate([],{fragment:t}).then(()=>{const i=document.getElementById(t);null!=i&&i.scrollIntoView()})}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(b.F0))},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-web-development-general"]],decls:143,vars:0,consts:[[1,"flexContainer"],["displayMode","flat",2,"padding-left","5px","padding-right","5px"],[2,"margin-top","5px"],["mat-button","",1,"listItem",3,"click"],["fxLayout","column"],["id","difference"],["id","nodeJS"],["href","https://nodejs.dev/learn","target","_blank","rel","noopener noreferrer"],["href","https://keenethics.com/blog/ecmascript-modules-nodejs-v14","target","_blank","rel","noopener noreferrer"],["id","esModules"],[2,"font-style","italic"],["href","https://ponyfoo.com/articles/es6-modules-in-depth","target","_blank","rel","noopener noreferrer"],["id","commonJS"],["id","esModulesVsCommonJS"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"mat-accordion",1),e.TgZ(2,"mat-expansion-panel",2),e.TgZ(3,"mat-expansion-panel-header"),e.TgZ(4,"mat-panel-title"),e._uU(5," General "),e.qZA(),e.qZA(),e.TgZ(6,"button",3),e.NdJ("click",function(){return i.scrollTo("difference")}),e._uU(7,"Browser vs Node.js"),e.qZA(),e.TgZ(8,"button",3),e.NdJ("click",function(){return i.scrollTo("nodeJS")}),e._uU(9,"Node.js"),e.qZA(),e.TgZ(10,"button",3),e.NdJ("click",function(){return i.scrollTo("esModules")}),e._uU(11,"ES Modules"),e.qZA(),e.TgZ(12,"button",3),e.NdJ("click",function(){return i.scrollTo("commonJS")}),e._uU(13,"CommonJS"),e.qZA(),e.TgZ(14,"button",3),e.NdJ("click",function(){return i.scrollTo("esModulesVsCommonJS")}),e._uU(15,"ES Modules vs CommonJS"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(16,"div",4),e.TgZ(17,"div",5),e.TgZ(18,"h1"),e._uU(19,"Web Development General Knowledge"),e.qZA(),e.TgZ(20,"h2"),e._uU(21,"Broswer vs Node.js"),e.qZA(),e.TgZ(22,"p"),e._uU(23,"Both the broswer and Node.js use Javacript as their programming langauge. However, building apps that run in the browser is different than building a Node.js application, one of the reasons is the difference in the module system used. "),e.qZA(),e.TgZ(24,"table"),e.TgZ(25,"tr"),e.TgZ(26,"th"),e._uU(27,"Browser"),e.qZA(),e.TgZ(28,"th"),e._uU(29,"Node.js"),e.qZA(),e.qZA(),e.TgZ(30,"tr"),e.TgZ(31,"td"),e._uU(32,"For frontend development"),e.qZA(),e.TgZ(33,"td"),e._uU(34,"Mainly for server-side development"),e.qZA(),e.qZA(),e.TgZ(35,"tr"),e.TgZ(36,"td"),e._uU(37,"Can interact with DOM, or other Web Platform APIs like Cookies"),e.qZA(),e.TgZ(38,"td"),e._uU(39,"Cannot interact with the DOMs and Web Platform APIs"),e.qZA(),e.qZA(),e.TgZ(40,"tr"),e.TgZ(41,"td"),e._uU(42,"Does not have nice APIs"),e.qZA(),e.TgZ(43,"td"),e._uU(44,"Has nice APIs provided through modules"),e.qZA(),e.qZA(),e.TgZ(45,"tr"),e.TgZ(46,"td"),e._uU(47,"Cannot be written in other languages"),e.qZA(),e.TgZ(48,"td"),e._uU(49,"Can be written in C++ so that it can directly interact with the OS"),e.qZA(),e.qZA(),e.TgZ(50,"tr"),e.TgZ(51,"td"),e._uU(52,"Modern browsers support ES6 Modules"),e.qZA(),e.TgZ(53,"td"),e._uU(54,"Node 14 onwards support both CommonJS & ECMAScript modules"),e.qZA(),e.qZA(),e.qZA(),e._UZ(55,"mat-divider"),e.qZA(),e.TgZ(56,"div",6),e.TgZ(57,"h2"),e._uU(58,"Node.js"),e.qZA(),e.TgZ(59,"a",7),e._uU(60,"The best resources to learn Node.js"),e.qZA(),e.TgZ(61,"p"),e._uU(62,"You also need to take note of how are the files will be treated as ECMAScript modules and CommonJS modules by referring to "),e.TgZ(63,"a",8),e._uU(64,"this blog post"),e.qZA(),e._uU(65,"."),e.qZA(),e._UZ(66,"mat-divider"),e.qZA(),e.TgZ(67,"div",9),e.TgZ(68,"h2"),e._uU(69,"ES Modules"),e.qZA(),e.TgZ(70,"p"),e._uU(71,"ES Modules is the ECMAScript (the scripting language that forms the basis of JavaScript) standard for working with modules."),e.qZA(),e.TgZ(72,"p"),e._uU(73,"Node.js has been using the CommonJS standard for years but there was no concept of modules in Javascript, and <script> tags were used to load multiple Javascript files. Therefore, the module system support is finally standardized in ES6 and then browsers started to implement it. Now Chrome, Safari, Edge and Firefox (starting from version 60) all support ES modules. "),e.qZA(),e.TgZ(74,"p"),e._uU(75,"Some important notes:"),e.qZA(),e.TgZ(76,"ul"),e.TgZ(77,"li"),e._uU(78,'ES6 modules are automatically strict-mode code, even if you don\u2019t write "use strict"; in them'),e.qZA(),e.TgZ(79,"li"),e._uU(80,"Everything inside an ES6 module is private by default"),e.qZA(),e.TgZ(81,"li"),e._uU(82,"Public variables, functions and classes are exposed using "),e.TgZ(83,"span",10),e._uU(84,"export"),e.qZA(),e.qZA(),e.TgZ(85,"li"),e._uU(86,"Exposed modules are called into other modules using "),e.TgZ(87,"span",10),e._uU(88,"import"),e.qZA(),e.qZA(),e.TgZ(89,"li"),e._uU(90,"The "),e.TgZ(91,"span",10),e._uU(92,'type="module"'),e.qZA(),e._uU(93," directive must be included in the script tag in order to include modules"),e.qZA(),e.TgZ(94,"li"),e._uU(95,"You need to add "),e.TgZ(96,"span",10),e._uU(97,"nomodule"),e.qZA(),e._uU(98," directive in script tag for browsers without module support"),e.qZA(),e.TgZ(99,"li"),e._uU(100,"Regular script tags can fetch scripts on other domains but modules are fetched using cross-origin resource sharing (CORS). Modules on different domains must therefore set an appropriate HTTP header, such as Access-Control-Allow-Origin: *"),e.qZA(),e.TgZ(101,"li"),e._uU(102,"Modules are deferred, and only run after a document is loaded"),e.qZA(),e.qZA(),e.TgZ(103,"p"),e._uU(104,"For a better reference: "),e.TgZ(105,"a",11),e._uU(106,"ES6 Modules in Depth"),e.qZA(),e.qZA(),e._UZ(107,"mat-divider"),e.qZA(),e.TgZ(108,"div",12),e.TgZ(109,"h2"),e._uU(110,"CommonJS"),e.qZA(),e.TgZ(111,"p"),e._uU(112,"The CommonJS module specification is the standard used in Node.js for working with modules."),e.qZA(),e.TgZ(113,"p"),e._uU(114,"The npm ecosystem is built upon this CommonJS format."),e.qZA(),e.TgZ(115,"p"),e._uU(116,"In CommonJS, modules are loaded synchronously, and processed in the order the JavaScript runtime finds them."),e.qZA(),e.TgZ(117,"p"),e._uU(118,"CommonJS was born with server-side Javascript in mind whereas ES Modules were introduced for client-side Javascript."),e.qZA(),e._UZ(119,"mat-divider"),e.qZA(),e.TgZ(120,"div",13),e.TgZ(121,"h2"),e._uU(122,"ES Modules vs CommonJS"),e.qZA(),e.TgZ(123,"p"),e._uU(124,"Take note that Node 14 introduces ECMAScript Modules, hence, you can use both ES Modules and CommonJS modules in Node 14. For this, you need to know how to make the files being treated as ECMAScript modules or CommonJS modules by referring to "),e.TgZ(125,"a",8),e._uU(126,"this article"),e.qZA(),e._uU(127,"."),e.qZA(),e.TgZ(128,"p"),e._uU(129,"Import examples:"),e.qZA(),e.TgZ(130,"pre"),e._uU(131,"                "),e.TgZ(132,"code"),e._uU(133,"\n    // IN ES module standard\n    import {map, reduce} from 'lodash'\n    import _ from 'lodash' // Default Import\n    import {cloneDeep as clone} from 'lodash' // Named Imports\n    \n    // IN CommonJS standard\n    const {map, reduce} = require('lodash')\n    const _ = require('lodash') // Default Import\n    const {cloneDeep: clone} = require('lodash'); // Named Imports\n                "),e.qZA(),e._uU(134,"\n            "),e.qZA(),e.TgZ(135,"p"),e._uU(136,"Export examples:"),e.qZA(),e.TgZ(137,"pre"),e._uU(138,"                "),e.TgZ(139,"code"),e._uU(140,"\n    // IN ES module standard\n    export default 1\n    export default 'foo'\n    export default { foo: 'bar' }\n    export default ['foo', 'bar']\n    export default function foo () {}\n    export const fooString = 'foo' // Name Exports\n    export const consoleABC = function () { console.log('ABC') } // Named Exports\n    \n    // IN CommonJS standard\n    module.exports = 1\n    module.exports = 'foo'\n    module.exports = { foo: 'bar' }\n    module.exports = ['foo', 'bar']\n    module.exports = function foo () {}\n    module.exports.fooString = 'foo' // Name Exports\n    module.exports.consoleABC = function () { console.log('ABC') } // Named Exports\n                "),e.qZA(),e._uU(141,"\n            "),e.qZA(),e._UZ(142,"mat-divider"),e.qZA(),e.qZA(),e.qZA())},directives:[R,w,x,D,C.lW,_.xw,A],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}tr[_ngcontent-%COMP%]{display:flex}td[_ngcontent-%COMP%]{width:50%}th[_ngcontent-%COMP%]{width:50%}"]}),n})()},{path:"webDevelopment/sequelize",component:(()=>{class n{constructor(){}ngOnInit(){}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-sequelize-notes"]],decls:90,vars:0,consts:[[1,"flexContainer"],["fxLayout","column","fxLayout","column"],["href","https://sequelize.org/master/","target","_blank","rel","noopener noreferrer"],["href","https://blog.couchbase.com/postgres-jsonb-and-nosql/","target","_blank","rel","noopener noreferrer"],[2,"font-style","italic"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"div",1),e.TgZ(2,"div"),e.TgZ(3,"h1"),e._uU(4,"Sequelize Notes"),e.qZA(),e.TgZ(5,"h2"),e._uU(6,"Introduction"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"Sequelize is a promise-based Node.js Object-Relational Mapping (ORM) for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server."),e.qZA(),e.TgZ(9,"p"),e._uU(10,"Most of the usage guides are available in "),e.TgZ(11,"a",2),e._uU(12,"Sequelize v6 Documentation"),e.qZA(),e._uU(13,"."),e.qZA(),e.TgZ(14,"p"),e._uU(15,"The following sections are my personal notes."),e.qZA(),e._UZ(16,"mat-divider"),e.qZA(),e.TgZ(17,"div"),e.TgZ(18,"h3"),e._uU(19,"Declaring array-type column in model declaration"),e.qZA(),e.TgZ(20,"pre"),e._uU(21,"                "),e.TgZ(22,"code"),e._uU(23,"\n    // example\n    item_ids: {\n        type: DataTypes.ARRAY(DataTypes.TEXT),\n        defaultValue: []\n    },                  \n                "),e.qZA(),e._uU(24,"\n            "),e.qZA(),e._UZ(25,"mat-divider"),e.qZA(),e.TgZ(26,"div"),e.TgZ(27,"h3"),e._uU(28,"Adding indexes to your model"),e.qZA(),e.TgZ(29,"p"),e._uU(30,"Sometimes there are some columns which we frequenly query although they are not primary keys. For such cases, it is recommended to add indexes to these columns to improve the query performance."),e.qZA(),e.TgZ(31,"p"),e._uU(32,"Take note that you should not add indexes to all columns, only add them to columns that are frequently referred."),e.qZA(),e.TgZ(33,"pre"),e._uU(34,"                "),e.TgZ(35,"code"),e._uU(36,"\n      // example\n      sequelize.define('supplierModel', {\n        supplier_uuid: {\n          type: DataTypes.UUID,\n          defaultValue: Sequelize.UUIDV4, // to automatically generate UUID\n          primaryKey: true\n        },\n        supplier_name: DataTypes.TEXT,\n        item_ids: {\n            type: DataTypes.ARRAY(DataTypes.TEXT),\n            defaultValue: []\n        },                \n      },\n      {\n        tableName: 'itemSupplier',\n        createdAt: false,\n        updatedAt: false,\n        indexes: [\n          {\n            unique: false,\n            fields: ['item_ids']\n          }\n        ]\n      })\n                "),e.qZA(),e._uU(37,"\n            "),e.qZA(),e._UZ(38,"mat-divider"),e.qZA(),e.TgZ(39,"div"),e.TgZ(40,"h3"),e._uU(41,"Declaring Postgres JSONB column type in model declaration"),e.qZA(),e.TgZ(42,"p"),e._uU(43,"Take note that PostgreSQL supporting JSONB column type doesn't mean it is a NOSQL database. If you interested to understand their differences, refer to this "),e.TgZ(44,"a",3),e._uU(45,"blog post"),e.qZA(),e._uU(46,"."),e.qZA(),e.TgZ(47,"p"),e._uU(48,"Declaring a JSONB column is simply by using DataTypes.JSONB. The CRUD operation for JSONB column also has no difference with other column types."),e.qZA(),e.TgZ(49,"pre"),e._uU(50,"                "),e.TgZ(51,"code"),e._uU(52,"\n    // example\n    sequelize.define('itemModel', {\n    item_uuid: {\n        type: DataTypes.UUID,\n        defaultValue: Sequelize.UUIDV4, // to automatically generate UUID\n        primaryKey: true\n    },\n        item_name: DataTypes.TEXT,\n        item_details: DataTypes.JSONB\n    }\n                "),e.qZA(),e._uU(53,"\n            "),e.qZA(),e._UZ(54,"mat-divider"),e.qZA(),e.TgZ(55,"div"),e.TgZ(56,"h3"),e._uU(57,"Finding data according to length of array of a specific column"),e.qZA(),e.TgZ(58,"pre"),e._uU(59,"                "),e.TgZ(60,"code"),e._uU(61,"\n    // example\n    db.models.inventoryModel.findAll({\n        raw: true,\n        where: [\n            sequelize.where(\n                sequelize.fn('array_length', sequelize.col('item_ids'), 1),\n                { [Op.lt]: 10 }\n            ),\n            { item_type: 'pen' },\n        ]\n    })                                 \n                "),e.qZA(),e._uU(62,"\n            "),e.qZA(),e._UZ(63,"mat-divider"),e.qZA(),e.TgZ(64,"div"),e.TgZ(65,"h3"),e._uU(66,"Finding rows that contain a certain value in an array column"),e.qZA(),e.TgZ(67,"pre"),e._uU(68,"                "),e.TgZ(69,"code"),e._uU(70,"\n    // example\n    db.models.inventoryModel.findAll({\n        raw: true,\n        where: {\n            item_ids: { [Op.contains]: idsOfDeletedItem }\n        }\n    })                                             \n                "),e.qZA(),e._uU(71,"\n            "),e.qZA(),e._UZ(72,"mat-divider"),e.qZA(),e.TgZ(73,"div"),e.TgZ(74,"h3"),e._uU(75,"Adding/Updating multiple rows of data at once"),e.qZA(),e.TgZ(76,"p"),e._uU(77,"The "),e.TgZ(78,"span",4),e._uU(79,"bulkCreate"),e.qZA(),e._uU(80," by default will create multiple new rows at once, but with the "),e.TgZ(81,"span",4),e._uU(82,"updateOnDuplicate"),e.qZA(),e._uU(83,", it will update if the unique keys of that row already exist in the table."),e.qZA(),e.TgZ(84,"pre"),e._uU(85,"                "),e.TgZ(86,"code"),e._uU(87,"\n    // example\n    const newBulk = []\n    await Promise.all(itemConfigurationList.map(async (itemObject) => {\n        const passingObject = {\n            item_id: itemObject.item_id\n            item_name: itemObject.tariff_name,\n            item_price: itemObject.item_price,\n            item_supplier: itemObject.item_supplier,\n        }\n        newBulk.push(passingObject)\n        }))\n    db.models.itemModel.bulkCreate(newBulk, {\n        updateOnDuplicate: ['item_name', 'item_price', 'item_supplier']\n    }).then(() => {\n        res.status(statusOK).send('Successfully updated Item Configuration.')\n    }).catch((error) => {\n        res.status(s500).send({ message: error.message })\n    })                  \n                "),e.qZA(),e._uU(88,"\n            "),e.qZA(),e._UZ(89,"mat-divider"),e.qZA(),e.qZA(),e.qZA())},directives:[_.xw,A],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}"]}),n})()},{path:"webDevelopment/postgresql",component:(()=>{class n{constructor(){}ngOnInit(){}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-postgresql-notes"]],decls:156,vars:0,consts:[[1,"flexContainer"],["fxLayout","column","fxLayoutGap","10px"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"div",1),e.TgZ(2,"h1"),e._uU(3,"PostgreSQL Notes"),e.qZA(),e.TgZ(4,"div"),e.TgZ(5,"h2"),e._uU(6,"Introduction"),e.qZA(),e.TgZ(7,"p"),e._uU(8,"This page documents some query strings and notes."),e.qZA(),e._UZ(9,"mat-divider"),e.qZA(),e.TgZ(10,"div"),e.TgZ(11,"h3"),e._uU(12,'NOTE: Always enclose your table name with " "'),e.qZA(),e.TgZ(13,"p"),e._uU(14,"This is to handle the cases where the table names that have characters in between."),e.qZA(),e.TgZ(15,"pre"),e._uU(16,"                "),e.TgZ(17,"code"),e._uU(18,'\n    // example\n    SELECT * FROM "12.0.215.45";\n    SELECT * FROM "0123f523-fe45-4976-8996-1c2090dc1494";\n                '),e.qZA(),e._uU(19,"\n            "),e.qZA(),e._UZ(20,"mat-divider"),e.qZA(),e.TgZ(21,"div"),e.TgZ(22,"h3"),e._uU(23,"To list the active connections on a database"),e.qZA(),e.TgZ(24,"pre"),e._uU(25,"                "),e.TgZ(26,"code"),e._uU(27,"\n    // example\n    SELECT * FROM pg_stat_activity;\n                "),e.qZA(),e._uU(28,"\n            "),e.qZA(),e._UZ(29,"mat-divider"),e.qZA(),e.TgZ(30,"div"),e.TgZ(31,"h3"),e._uU(32,"To duplicate a table"),e.qZA(),e.TgZ(33,"pre"),e._uU(34,"                "),e.TgZ(35,"code"),e._uU(36,'\n    // example\n    CREATE TABLE "new_table" AS (SELECT * FROM "old_table");\n                '),e.qZA(),e._uU(37,"\n            "),e.qZA(),e._UZ(38,"mat-divider"),e.qZA(),e.TgZ(39,"div"),e.TgZ(40,"h3"),e._uU(41,"To delete a table"),e.qZA(),e.TgZ(42,"pre"),e._uU(43,"                "),e.TgZ(44,"code"),e._uU(45,'\n    // example\n    DROP TABLE IF EXISTS "old_table";\n                '),e.qZA(),e._uU(46,"\n            "),e.qZA(),e._UZ(47,"mat-divider"),e.qZA(),e.TgZ(48,"div"),e.TgZ(49,"h3"),e._uU(50,"To drop a column"),e.qZA(),e.TgZ(51,"pre"),e._uU(52,"                "),e.TgZ(53,"code"),e._uU(54,'\n    // example\n    ALTER TABLE "old_table" DROP COLUMN IF EXISTS "item_price";\n                '),e.qZA(),e._uU(55,"\n            "),e.qZA(),e._UZ(56,"mat-divider"),e.qZA(),e.TgZ(57,"div"),e.TgZ(58,"h3"),e._uU(59,"To add a column with default value"),e.qZA(),e.TgZ(60,"pre"),e._uU(61,"                "),e.TgZ(62,"code"),e._uU(63,'\n    // example\n    ALTER TABLE "old_table" ADD COLUMN IF NOT EXISTS "is_brandnew" BOOLEAN DEFAULT FALSE;\n    // example of adding array column with empty ARRAY\n    ALTER TABLE "old_table" ADD COLUMN IF NOT EXISTS "item_buyers" text[] DEFAULT array[]::text[]; \n                '),e.qZA(),e._uU(64,"\n            "),e.qZA(),e._UZ(65,"mat-divider"),e.qZA(),e.TgZ(66,"div"),e.TgZ(67,"h3"),e._uU(68,"To query the distinct years and months in a database table"),e.qZA(),e.TgZ(69,"pre"),e._uU(70,"                "),e.TgZ(71,"code"),e._uU(72,'\n    // example\n    SELECT DISTINCT EXTRACT (YEAR FROM "date_time") AS YEAR, EXTRACT (MONTH FROM "date_time") AS MONTH FROM "table123"\n                '),e.qZA(),e._uU(73,"\n            "),e.qZA(),e._UZ(74,"mat-divider"),e.qZA(),e.TgZ(75,"div"),e.TgZ(76,"h3"),e._uU(77,"To query data between specific timestamp range"),e.qZA(),e.TgZ(78,"pre"),e._uU(79,"                "),e.TgZ(80,"code"),e._uU(81,"\n    // example\n    SELECT * FROM \"new_table\" WHERE \"date_time\" BETWEEN '2020-6-30 16:0:0+00' AND '2020-7-31 15:59:59+00'\n                "),e.qZA(),e._uU(82,"\n            "),e.qZA(),e._UZ(83,"mat-divider"),e.qZA(),e.TgZ(84,"div"),e.TgZ(85,"h3"),e._uU(86,"To query data between specific timestamp range at specific time zone"),e.qZA(),e.TgZ(87,"P"),e._uU(88,"To handle time zone problem, the common practice is to store UTC time into database."),e.qZA(),e.TgZ(89,"p"),e._uU(90,"However, users might want to query the data for a specifc time range at specific time zone. To do so, we can make use of the 'AT TIME ZONE' keyword"),e.qZA(),e.TgZ(91,"pre"),e._uU(92,"                "),e.TgZ(93,"code"),e._uU(94,"\n    // example\n    SELECT * FROM \"old_table\" WHERE \"date_time\" BETWEEN ('2020-7-01' at time zone 'asia/kuala_lumpur') AND ('2020-7-31' at time zone 'asia/kuala_lumpur');\n    SELECT * FROM \"old_table\" WHERE \"date_time\" BETWEEN ('2020-7-01' at time zone '+8') AND ('2020-7-31' at time zone '+8');\n                "),e.qZA(),e._uU(95,"\n            "),e.qZA(),e.TgZ(96,"p"),e._uU(97,"To list out the supported time zones in postgreSQL: SELECT * FROM pg_timezone_names;"),e.qZA(),e._UZ(98,"mat-divider"),e.qZA(),e.TgZ(99,"div"),e.TgZ(100,"h3"),e._uU(101,"NOTE: Avoid using 'AT TIME ZONE' if possible"),e.qZA(),e.TgZ(102,"p"),e._uU(103,"This depends on how the data extraction is performed."),e.qZA(),e.TgZ(104,"ul"),e.TgZ(105,"li"),e._uU(106,"If the postgreSQL converts the time provided in the queryString, this should be ok."),e.qZA(),e.TgZ(107,"li"),e._uU(108,"However, if the postgreSQL converts all the data in a database table, then the execution time will be very long."),e.qZA(),e.qZA(),e.TgZ(109,"p"),e._uU(110,"Hence, best practice is we manually convert the time to the desired time zone and then pass it to queryString."),e.qZA(),e.TgZ(111,"p"),e._uU(112,"The following is an example written in Node.js:"),e.qZA(),e.TgZ(113,"pre"),e._uU(114,"                "),e.TgZ(115,"code"),e._uU(116,'\n    // example\n    const getUTCDateString = function (date, requestedTimeZone) {\n        date.setUTCMinutes(date.getUTCMinutes() - (Number(requestedTimeZone) * 60)); // adjust the UTC time according to requestedTimeZone\n        return `\'${date.getUTCFullYear()}-${date.getUTCMonth() + 1}-${date.getUTCDate()} ${date.getUTCHours()}:${date.getUTCMinutes()}:${date.getUTCSeconds()}+00\'`; // + 1 because getUTCMonth is zero indexed\n    };\n    const yearStart = 2020;\n    const yearEnd = 2020;\n    const monthStart = 1;\n    const monthEnd = 5;\n    const requestedTimeZone = 8;\n    const dateStartString = getUTCDateString(new Date(yearStart, monthStart - 1, 1), requestedTimeZone);\n    const dateEndString = getUTCDateString(new Date(yearEnd, monthEnd, 0, 23, 59, 59), requestedTimeZone);\n    const queryString = `select * from "table_name" where "date_time_column" between ${dateStartString} AND ${dateEndString}`;\n                '),e.qZA(),e._uU(117,"\n            "),e.qZA(),e._UZ(118,"mat-divider"),e.qZA(),e.TgZ(119,"div"),e.TgZ(120,"h3"),e._uU(121,"To insert multiple rows of data into a database table, and update the row if the primary key is duplicated"),e.qZA(),e.TgZ(122,"P"),e._uU(123,"Imagine we have one array for each column of data, then we need to use PostgreSQL UNNEST() function to unnest the array."),e.qZA(),e.TgZ(124,"p"),e._uU(125,"To update the rows if primary key is repeated, we will use 'ON CONFLICT DO UPDATE SET' syntax"),e.qZA(),e.TgZ(126,"p"),e._uU(127,"The following is an example written in Node.js: "),e.qZA(),e.TgZ(128,"pre"),e._uU(129,"                "),e.TgZ(130,"code"),e._uU(131,'\n    // example\n    const sampleData = {\n        date_time : [\'2020-07-13T15:00:00+00\',\'2020-07-13T16:00:00+00\',\'2020-07-13T17:00:00+00\'],\n        item_id: [1082, 5212,4231],\n        item_price: [30, 21, 2]\n    }\n    const insertDataQuery = `INSERT INTO "sales_record" ("date_time", "item_id", "item_price") VALUES \n    (UNNEST(ARRAY[${sampleData.date_time}]::timestamp with time zone[]),\n        UNNEST(ARRAY[${sampleData.item_id}]),\n        UNNEST(ARRAY[${sampleData.item_price}]),\n        ON CONFLICT ("date_time") DO UPDATE SET\n            item_id = excluded.item_id,\n            item_price = excluded.item_price,\n                '),e.qZA(),e._uU(132,"\n            "),e.qZA(),e._UZ(133,"mat-divider"),e.TgZ(134,"div"),e.TgZ(135,"h3"),e._uU(136,"To get number of data for each date / To inspect whether there are missing data"),e.qZA(),e.TgZ(137,"p"),e._uU(138,"This is useful if you have a database table that collects daily or even hourly data, and you would like to check whether there are missing data."),e.qZA(),e.TgZ(139,"p"),e._uU(140,"It is ridiculous to look at the data one by one, the more efficient way would be getting the number of data for each data, and observe whether there is huge difference in number of data."),e.qZA(),e.TgZ(141,"pre"),e._uU(142,"                    "),e.TgZ(143,"code"),e._uU(144,"\n    // example\n    SELECT DISTINCT date_time::date AS date, count(*) AS number_of_rows FROM \"old_table\" WHERE item_id = '26'\n        AND \"date_time\" BETWEEN '2021-6-30 16:0:0+00' AND '2021-7-31 15:59:59+00' GROUP BY DATE ORDER BY DATE ASC\n                    "),e.qZA(),e._uU(145,"\n                "),e.qZA(),e._UZ(146,"mat-divider"),e.qZA(),e.TgZ(147,"div"),e.TgZ(148,"h3"),e._uU(149,"To sum the values of two similar tables"),e.qZA(),e.TgZ(150,"pre"),e._uU(151,"                    "),e.TgZ(152,"code"),e._uU(153,'\n    // example\n    select date, sum(price) total price\n    from (\n        select date, price\n        from "itemA"\n        union all\n        select date, price\n        from "itemB"\n    ) t\n    group by date order by date asc\n                    '),e.qZA(),e._uU(154,"\n                "),e.qZA(),e._UZ(155,"mat-divider"),e.qZA(),e.qZA(),e.qZA(),e.qZA())},directives:[_.xw,_.SQ,A],styles:[""]}),n})()},{path:"miscellaneuos/npm",component:Zn},{path:"miscellaneuos/GitNotes",component:(()=>{class n{constructor(t){this.router=t}scrollTo(t){this.router.navigate([],{fragment:t}).then(i=>{const o=document.getElementById(t);null!=o&&o.scrollIntoView()})}}return n.\u0275fac=function(t){return new(t||n)(e.Y36(b.F0))},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-git-notes"]],decls:265,vars:0,consts:[[1,"flexContainer"],["displayMode","flat",2,"padding-left","5px","padding-right","5px"],[2,"margin-top","5px"],["mat-button","",1,"listItem",3,"click"],["fxLayout","column","fxLayout","column"],["id","gitBasics"],["src","assets/images/gitNotes/GitBasics.png",2,"width","80%","height","auto"],[1,"CLI-font"],["id","gitBranchStrategies"],["href","https://docs.gitlab.com/ee/topics/gitlab_flow.html#","target","_blank","rel","noopener noreferrer"],["href","https://docs.gitlab.com/ee/topics/img/gitlab_flow_gitdashflow.png","target","_blank","rel","noopener noreferrer"],["src","assets/images/gitNotes/GitFlow.png",2,"width","90%"],["href","https://docs.gitlab.com/ee/topics/gitlab_flow.html#github-flow-as-a-simpler-alternative","target","_blank","rel","noopener noreferrer"],["src","assets/images/gitNotes/GitHub Flow.png",2,"width","80%"],["href","https://www.atlassian.com/git/tutorials/cherry-pick","target","_blank","rel","noopener noreferrer"],["id","cheatSheet"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"mat-accordion",1),e.TgZ(2,"mat-expansion-panel",2),e.TgZ(3,"mat-expansion-panel-header"),e.TgZ(4,"mat-panel-title"),e._uU(5," Git Notes "),e.qZA(),e.qZA(),e.TgZ(6,"button",3),e.NdJ("click",function(){return i.scrollTo("gitBasics")}),e._uU(7,"Git Basics"),e.qZA(),e.TgZ(8,"button",3),e.NdJ("click",function(){return i.scrollTo("gitBranchStrategies")}),e._uU(9,"Git Branch Strategies"),e.qZA(),e.TgZ(10,"button",3),e.NdJ("click",function(){return i.scrollTo("cheatSheet")}),e._uU(11,"Cheat Sheet"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(12,"div",4),e.TgZ(13,"div"),e.TgZ(14,"h1"),e._uU(15,"Git Notes"),e.qZA(),e.TgZ(16,"h2"),e._uU(17,"Introduction"),e.qZA(),e.TgZ(18,"p"),e._uU(19,"These are my personal notes for some use cases for GitLab. Some cases are easier with Visual Studio Code, but they are not included here."),e.qZA(),e._UZ(20,"mat-divider"),e.qZA(),e.TgZ(21,"div",5),e.TgZ(22,"h2"),e._uU(23,"Git Basics"),e.qZA(),e._UZ(24,"img",6),e.TgZ(25,"h3"),e._uU(26,"What are Git HEADs and Detached HEADs?"),e.qZA(),e.TgZ(27,"ul"),e.TgZ(28,"li"),e._uU(29,"The term HEAD refers to the current commit you are viewing."),e.qZA(),e.TgZ(30,"li"),e._uU(31,"Most of the time we are viewing the tip (the most recent commit) of a branch."),e.qZA(),e.TgZ(32,"li"),e._uU(33,"But actually we can view a specific commit by "),e.TgZ(34,"span",7),e._uU(35,"git checkout <commit-hash>"),e.qZA(),e.qZA(),e.TgZ(36,"li"),e._uU(37,"When we are viewing a commit rather than a branch, we enter into a deteached HEAD state."),e.qZA(),e.TgZ(38,"li"),e._uU(39,"HEAD vs head"),e.qZA(),e.TgZ(40,"ul"),e.TgZ(41,"li"),e._uU(42,"A head simply means a local branch."),e.qZA(),e.TgZ(43,"li"),e._uU(44,"The HEAD is the commit or branch you are currently viewing."),e.qZA(),e.TgZ(45,"li"),e._uU(46,"A repository can contain a number of heads but only one HEAD"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(47,"h3"),e._uU(48,"What happens to your files when you have multiple branches in your directory?"),e.qZA(),e.TgZ(49,"ul"),e.TgZ(50,"li"),e._uU(51,"The files in the working directory will change according to your HEAD."),e.qZA(),e.qZA(),e._UZ(52,"mat-divider"),e.qZA(),e.TgZ(53,"div",8),e.TgZ(54,"h2"),e._uU(55,"Git Branch Strategies"),e.qZA(),e.TgZ(56,"ul"),e.TgZ(57,"li"),e.TgZ(58,"a",9),e._uU(59,"Main reference"),e.qZA(),e.qZA(),e.TgZ(60,"li"),e._uU(61,"There are 3 types of Git branch strategies"),e.qZA(),e.TgZ(62,"ul"),e.TgZ(63,"li"),e._uU(64,"Git Flow"),e.qZA(),e.TgZ(65,"li"),e._uU(66,"GitHub Flow"),e.qZA(),e.TgZ(67,"li"),e._uU(68,"GitLab Flow"),e.qZA(),e.qZA(),e.TgZ(69,"li"),e._uU(70,"Git Flow"),e.qZA(),e.TgZ(71,"ul"),e.TgZ(72,"li"),e._uU(73,"Git Flow was one of the first proposals to use Git branches"),e.qZA(),e.TgZ(74,"li"),e._uU(75,'Developers must use the "Develop" branch'),e.qZA(),e.TgZ(76,"li"),e._uU(77,"Master branch is reserved for code that is released to production"),e.qZA(),e.TgZ(78,"li"),e._uU(79,"Too troublesome for continuous delivery."),e.qZA(),e.TgZ(80,"li"),e._uU(81,"Not user friendly to implement this on GitLab as GitLab always by default point to master branch."),e.qZA(),e.TgZ(82,"li"),e._uU(83,"The following is my interpretation of Git Flow based on this "),e.TgZ(84,"a",10),e._uU(85,"diagram"),e.qZA(),e._uU(86,"."),e.qZA(),e._UZ(87,"img",11),e.qZA(),e.TgZ(88,"li"),e._uU(89,"GitHub Flow"),e.qZA(),e.TgZ(90,"ul"),e.TgZ(91,"li"),e._uU(92,"GitHub Flow has only feature branches and a main branch"),e.qZA(),e.TgZ(93,"li"),e._uU(94,"GitHub Flow assumes you can deploy to production every time you merge a feature branch."),e.qZA(),e.TgZ(95,"li"),e._uU(96,"Suitable for continuous delivery, but can only perform integration test on master branch, which is not appropriate."),e.qZA(),e.TgZ(97,"li"),e._uU(98,"The feature branches always branch from the master branch."),e.qZA(),e.TgZ(99,"li"),e._uU(100,"The following is my interpretation of GitHub Flow based on the GitHub Flow diagram "),e.TgZ(101,"a",12),e._uU(102,"here"),e.qZA(),e._uU(103,"."),e.qZA(),e._UZ(104,"img",13),e.qZA(),e.TgZ(105,"li"),e.TgZ(106,"a",12),e._uU(107,"GitLab Flow"),e.qZA(),e._uU(108," works with 3 types of cases:"),e.qZA(),e.TgZ(109,"ul"),e.TgZ(110,"li"),e._uU(111,"Continuous Delivery with Deployment Branch"),e.qZA(),e.TgZ(112,"ul"),e.TgZ(113,"li"),e._uU(114,"Only have production branch and development branch"),e.qZA(),e.TgZ(115,"li"),e._uU(116,"Preferably to have feature branches if you have multiple developers working on the development branch"),e.qZA(),e.TgZ(117,"li"),e._uU(118,"The development branch is to overcome the shortcoming of GitHub Flow, where integration test is impossible if every feature is merged to master branch straight away upon completion."),e.qZA(),e.TgZ(119,"li"),e._uU(120,"Merge your development branch into production branch when it's ready to be released"),e.qZA(),e.TgZ(121,"li"),e._uU(122,"Doesn't necessarily need a tag for every commit in master branch."),e.qZA(),e.qZA(),e.TgZ(123,"li"),e._uU(124,"Continuous Delivery with Environment branches"),e.qZA(),e.TgZ(125,"ul"),e.TgZ(126,"li"),e._uU(127,"Imagine if you have three different environments"),e.qZA(),e.TgZ(128,"ul"),e.TgZ(129,"li"),e._uU(130,"Staging Area (For development)"),e.qZA(),e.TgZ(131,"li"),e._uU(132,"Pre-production (For pre-production testing)"),e.qZA(),e.TgZ(133,"li"),e._uU(134,"Production (For stable releases to customers)"),e.qZA(),e.qZA(),e.TgZ(135,"li"),e._uU(136,"Then, you can have 3 different branches for each of the environments."),e.qZA(),e.TgZ(137,"ul"),e.TgZ(138,"li"),e._uU(139,'When you want to put your development to production, merge "staging" branch into "pre-production" branch first'),e.qZA(),e.TgZ(140,"li"),e._uU(141,'When finished testing and ready to release, merge "pre-production" branch into "production" branch'),e.qZA(),e.qZA(),e.qZA(),e.TgZ(142,"li"),e._uU(143,"Versioned Release"),e.qZA(),e.TgZ(144,"ul"),e.TgZ(145,"li"),e._uU(146,"Each release has an associated release branch that is based off the main branch"),e.qZA(),e.TgZ(147,"li"),e._uU(148,"Bug fixes should be merged into the main branch first, before being "),e.TgZ(149,"a",14),e._uU(150,"cherry-picked"),e.qZA(),e._uU(151," into the release branch."),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(152,"h3"),e._uU(153,"Git/GitLab Best Practices"),e.qZA(),e.TgZ(154,"ol"),e.TgZ(155,"li"),e._uU(156,"Formalize git conventions and standardize git branch strategies & practices among team"),e.qZA(),e.TgZ(157,"li"),e._uU(158,"Squash commits before merging"),e.qZA(),e.TgZ(159,"li"),e._uU(160,"Use feature branches rather than direct commits on the main branch"),e.qZA(),e.TgZ(161,"li"),e._uU(162,"Perform code reviews before merging into the main branch"),e.qZA(),e.TgZ(163,"li"),e._uU(164,"Releases are based on tags"),e.qZA(),e.TgZ(165,"li"),e._uU(166,"Avoid rebasing pushed commits unless it is your private repo"),e.qZA(),e.TgZ(167,"li"),e._uU(168,"Keep commit histroy clean from useless commits for main branch and shared branches."),e.qZA(),e.qZA(),e._UZ(169,"mat-divider"),e.qZA(),e.TgZ(170,"div",15),e.TgZ(171,"h2"),e._uU(172,"Cheat Sheet"),e.qZA(),e.TgZ(173,"div"),e.TgZ(174,"h3"),e._uU(175,"To clone a branch of remote repository"),e.qZA(),e.TgZ(176,"ul"),e.TgZ(177,"li"),e.TgZ(178,"span",7),e._uU(179,"git clone -b <branch-name> --single-branch <remote-repository-url>"),e.qZA(),e.qZA(),e.TgZ(180,"li"),e._uU(181,"After cloning this, if you want to add the master branch to your local repo:"),e.qZA(),e.TgZ(182,"ul"),e.TgZ(183,"li"),e.TgZ(184,"span",7),e._uU(185,"git remote set-branches --add <remote-name> <master-branch-name>"),e.qZA(),e.qZA(),e.TgZ(186,"li"),e.TgZ(187,"span",7),e._uU(188,"git fetch <remtoe-name> <master-branch-name>:<master-branch-name>"),e.qZA(),e.qZA(),e.TgZ(189,"li"),e._uU(190,"RUN "),e.TgZ(191,"span",7),e._uU(192,"git branch"),e.qZA(),e._uU(193," to check your local branch"),e.qZA(),e.TgZ(194,"li"),e._uU(195,"RUN "),e.TgZ(196,"span",7),e._uU(197,"git branch -r"),e.qZA(),e._uU(198," to check your remote branch"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(199,"div"),e.TgZ(200,"h3"),e._uU(201,"To add a branch of remote repository to your local repo"),e.qZA(),e.TgZ(202,"ul"),e.TgZ(203,"li"),e._uU(204,"You need this when you already have the repo, and you only want to add a branch to your current repo."),e.qZA(),e.TgZ(205,"li"),e._uU(206,"The process is quite similar to fetching master branch:"),e.qZA(),e.TgZ(207,"ul"),e.TgZ(208,"li"),e.TgZ(209,"span",7),e._uU(210,"git remote set-branches --add <remote-name> <branch-name>"),e.qZA(),e.qZA(),e.TgZ(211,"li"),e.TgZ(212,"span",7),e._uU(213,"git fetch <remtoe-name> <development-branch-name>:<development-branch-name>"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(214,"div"),e.TgZ(215,"h3"),e._uU(216,"If you pushed a folder but you forgot to add .gitignore, you need to remove the cache"),e.qZA(),e.TgZ(217,"ul"),e.TgZ(218,"li"),e._uU(219,"Reference: https://www.programmersought.com/article/48071292205/"),e.qZA(),e.TgZ(220,"li"),e.TgZ(221,"span",7),e._uU(222,"git rm -r --cached ."),e.qZA(),e.qZA(),e.TgZ(223,"li"),e._uU(224,"Add and commit again"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(225,"div"),e.TgZ(226,"h3"),e._uU(227,"To merge remote master branch into your remote branch"),e.qZA(),e.TgZ(228,"ul"),e.TgZ(229,"li"),e._uU(230,"This is needed when you are working on branch but the master repo has new updates."),e.qZA(),e.TgZ(231,"li"),e._uU(232,"The overall proccess is:"),e.qZA(),e.TgZ(233,"ol"),e.TgZ(234,"li"),e._uU(235,"Switch to your master branch on local machine"),e.qZA(),e.TgZ(236,"li"),e._uU(237,"Git pull origin master to synchronize the master branch on local machine with the one on remote repo"),e.qZA(),e.TgZ(238,"li"),e._uU(239,"Switch back to your local development branch"),e.qZA(),e.TgZ(240,"li"),e._uU(241,"Git merge local master branch with your local development branch"),e.qZA(),e.TgZ(242,"li"),e._uU(243,"Git push your local development branch to the remote development branch"),e.qZA(),e.qZA(),e.TgZ(244,"li"),e._uU(245,"Side note: You may also straight away git pull origin master from you local branch, if you don't have a local master branch"),e.qZA(),e.TgZ(246,"li"),e._uU(247,"Using CLI"),e.qZA(),e.TgZ(248,"ol"),e.TgZ(249,"li"),e.TgZ(250,"span",7),e._uU(251,"git checkout master"),e.qZA(),e.qZA(),e.TgZ(252,"li"),e.TgZ(253,"span",7),e._uU(254,"git pull origin master"),e.qZA(),e.qZA(),e.TgZ(255,"li"),e.TgZ(256,"span",7),e._uU(257,"git checkout <branch-name>"),e.qZA(),e.qZA(),e.TgZ(258,"li"),e.TgZ(259,"span",7),e._uU(260,"git merge master"),e.qZA(),e.qZA(),e.TgZ(261,"li"),e.TgZ(262,"span",7),e._uU(263,"git push origin <branch-name>"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e._UZ(264,"mat-divider"),e.qZA(),e.qZA(),e.qZA())},directives:[R,w,x,D,C.lW,_.xw,A],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}"]}),n})()},{path:"miscellaneuos/GitLabCICD",component:(()=>{class n{constructor(){}ngOnInit(){}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-gitlab-ci-cd-notes"]],decls:385,vars:0,consts:[["fxLayout","column","fxLayoutGap","10px"],["src","https://docs.gitlab.com/ee/ci/introduction/img/gitlab_workflow_example_11_9.png",2,"width","100%"],["href","https://docs.gitlab.com/ee/ci/#gitlab-cicd-features","target","_blank","ref","noopener noreferrer"],["src","https://docs.gitlab.com/ee/ci/introduction/img/gitlab_workflow_example_extended_v12_3.png",2,"width","100%"],["href","https://docs.gitlab.com/runner/install/index.html","target","_blank","rel","noopener noreferrer"],["href","https://docs.gitlab.com/runner/install/windows.html","target","_blank","rel","noopener noreferrer"],["href","https://docs.gitlab.com/runner/register/index.html#windows","target","_blank","rel","noopener noreferrer"],["href","https://docs.gitlab.com/runner/install/docker.html","target","_blank","rel","noopener noreferrer"],["href","https://docs.gitlab.com/runner/register/index.html#docker","target","_blank","rel","noopener noreferrer"],["href","https://docs.gitlab.com/runner/executors/index.html","target","_blank","rel","noopener noreferrer"],["href","https://docs.gitlab.com/ee/ci/yaml/gitlab_ci_yaml.html","target","_blank","rel","noopener noreferrer"],["href","https://docs.gitlab.com/ee/ci/yaml/","target","_blank","rel","noopener noreferrer"],[2,"color","blue"],[2,"color","red"],[2,"font-style","italic","color","blueviolet"],[2,"font-style","italic","color","orange"],["href","https://javascript-conference.com/blog/build-test-deployment-angular-gitlab-ci/","target","_blank","rel","noopener noreferrer"],[2,"font-style","italic"],["href","https://docs.gitlab.com/ee/user/project/clusters/index.html","target","_blank","rel","noopener noreferrer"],["href","https://docs.gitlab.com/ee/ci/review_apps/index.html","target","_blank","rel","noopener noreferrer"],["href","https://docs.gitlab.com/ee/ci/environments/#","target","_blank","rel","noopener noreferrer"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"h1"),e._uU(2,"GitLab CI/CD"),e.qZA(),e.TgZ(3,"h2"),e._uU(4,"Introduction"),e.qZA(),e.TgZ(5,"p"),e._uU(6,"GitLab CI/CD is a tool for software development using the continuous methodologies:"),e.qZA(),e.TgZ(7,"ul"),e.TgZ(8,"li"),e._uU(9,"Continuous Integration (CI)"),e.qZA(),e.TgZ(10,"li"),e._uU(11,"Continuous Delivery (CD)"),e.qZA(),e.TgZ(12,"li"),e._uU(13,"Continuous Deployment (CD)"),e.qZA(),e.qZA(),e.TgZ(14,"p"),e._uU(15,"Declaration: Most of the contents are summarized or originated by https://docs.gitlab.com/"),e.qZA(),e._UZ(16,"mat-divider"),e.TgZ(17,"h2"),e._uU(18,"CI/CD concepts"),e.qZA(),e.TgZ(19,"p"),e._uU(20,"With the continuous method of software development, you continuously build, test, and deploy iterative code changes."),e.qZA(),e.TgZ(21,"h3"),e._uU(22,"Continuous Integration"),e.qZA(),e.TgZ(23,"ul"),e.TgZ(24,"li"),e._uU(25,"Continuous Integration is a methodology of having an automated build and testing process before merging the main repository with new changes."),e.qZA(),e.TgZ(26,"li"),e._uU(27,"Build -> Unit/Integration Testing -> Merge"),e.qZA(),e.qZA(),e.TgZ(28,"h3"),e._uU(29,"Continuous Delivery"),e.qZA(),e.TgZ(30,"ul"),e.TgZ(31,"li"),e._uU(32,"Continuous Delivery is a step beyond Continuous Integration, it deploys all code chagnes to a testing or production environment after merging the source code."),e.qZA(),e.TgZ(33,"li"),e._uU(34,"For example, everytime when I update V-One Energy Plugin frontend and backend for dev-energy.v-one.ai, the pipeline builds and pushes the docker image to V-One's Docker registry. Then, I need to manually redeploy the workload. "),e.qZA(),e.TgZ(35,"li"),e._uU(36,"There could be an additional test process after merging as well."),e.qZA(),e.TgZ(37,"li"),e._uU(38,"Build -> Unit/Integration Testing -> Merge -> Acceptance Testing -> Release to deployment platform -> Deployment (Manual)"),e.qZA(),e.qZA(),e.TgZ(39,"h3"),e._uU(40,"Continuous Deployment"),e.qZA(),e.TgZ(41,"ul"),e.TgZ(42,"li"),e._uU(43,"Continuous Deployment is similar to Continuous Delivery, except that the deployment is automated. "),e.qZA(),e.TgZ(44,"li"),e._uU(45,"Build -> Unit/Integration Testing -> Merge -> Acceptance Testing -> Release to deployment platform -> Deployment (Automated)"),e.qZA(),e.qZA(),e._UZ(46,"mat-divider"),e.TgZ(47,"h2"),e._uU(48,"GitLab CI/CD workflow"),e.qZA(),e._UZ(49,"img",1),e._UZ(50,"mat-divider"),e.TgZ(51,"h2"),e._uU(52,"Make use of GitLab features in CI/CD Workflow"),e.qZA(),e.TgZ(53,"ul"),e.TgZ(54,"li"),e._uU(55,"There are many "),e.TgZ(56,"a",2),e._uU(57,"GitLab features"),e.qZA(),e._uU(58," that can be used to further enhance the CI/CD workflow"),e.qZA(),e._UZ(59,"img",3),e.qZA(),e._UZ(60,"mat-divider"),e.TgZ(61,"h2"),e._uU(62,"Quick Notes"),e.qZA(),e.TgZ(63,"ul"),e.TgZ(64,"li"),e._uU(65,"To use GitLab CI/CD, you need: "),e.TgZ(66,"ul"),e.TgZ(67,"li"),e._uU(68,"A GitLab Runner ready to run jobs"),e.qZA(),e.TgZ(69,"li"),e._uU(70,"A valid .gitlab-ci.yml file present at the root directory of your project."),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(71,"h3"),e._uU(72,"GitLab Runner"),e.qZA(),e.TgZ(73,"ul"),e.TgZ(74,"li"),e._uU(75,"What are GitLab Runners?"),e.qZA(),e.TgZ(76,"ul"),e.TgZ(77,"li"),e._uU(78,"Runners are processes that pick up and execute CI/CD jobs for GitLab."),e.qZA(),e.qZA(),e.TgZ(79,"li"),e._uU(80,"Check whether you have a runner for your project"),e.qZA(),e.TgZ(81,"ul"),e.TgZ(82,"li"),e._uU(83,"Go to Your project >> Settings >> CI/CD >> Runner"),e.qZA(),e.TgZ(84,"li"),e._uU(85,"If you already have a runner for your project, you may skip the following 2 sections."),e.qZA(),e.TgZ(86,"li"),e._uU(87,"Don't worry, if the runners not assigned properly, you will know when your pipeline failed to run."),e.qZA(),e.qZA(),e.TgZ(88,"li"),e._uU(89,"Installing GitLab Runner"),e.qZA(),e.TgZ(90,"ul"),e.TgZ(91,"li"),e.TgZ(92,"a",4),e._uU(93,"Main Reference"),e.qZA(),e.qZA(),e.TgZ(94,"li"),e._uU(95,"Refer to the link above to install a GitLab Runner according to the platform that you wants the GitLab Runner to run on."),e.qZA(),e.TgZ(96,"li"),e._uU(97,"Take note that it is more appropriate for a runner to run on server, so that the Runner is always available. If you only need a temporary runner, you may install it on your local Docker or Windows."),e.qZA(),e.qZA(),e.TgZ(98,"li"),e._uU(99,"Registring GitLab Runner"),e.qZA(),e.TgZ(100,"ul"),e.TgZ(101,"li"),e._uU(102,"After installing the GitLab Runner, you need to register it."),e.qZA(),e.TgZ(103,"li"),e._uU(104,"Refer to the respective guide for Runner Registration according to the runner environment. For example:"),e.qZA(),e.TgZ(105,"ul"),e.TgZ(106,"li"),e._uU(107,"If you "),e.TgZ(108,"a",5),e._uU(109,"installed GitLab Runner On Windows"),e.qZA(),e._uU(110,", refer to "),e.TgZ(111,"a",6),e._uU(112,"this section"),e.qZA(),e.qZA(),e.TgZ(113,"li"),e._uU(114," (RECOMMENDED) If you "),e.TgZ(115,"a",7),e._uU(116,"installed GitLab Runner as a Docker Service"),e.qZA(),e._uU(117,", refer to "),e.TgZ(118,"a",8),e._uU(119,"this section"),e.qZA(),e._uU(120,"."),e.qZA(),e.qZA(),e.TgZ(121,"li"),e._uU(122,"When you register a runner, you must choose an executor."),e.qZA(),e.TgZ(123,"ul"),e.TgZ(124,"li"),e._uU(125,"For example:"),e.qZA(),e.TgZ(126,"ul"),e.TgZ(127,"li"),e._uU(128,"If you want your CI/CD job to run PowerShell commands, you might install GitLab Runner on a Windows server and then register a runner that uses the shell executor."),e.qZA(),e.TgZ(129,"li"),e._uU(130,"If you want your CI/CD job to run commands in a custom Docker container, you might install GitLab Runner on a Linux server and register a runner that uses the Docker executor."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(131,"li"),e._uU(132,"Here is "),e.TgZ(133,"a",9),e._uU(134,"a list of executors."),e.qZA(),e.qZA(),e.TgZ(135,"li"),e._uU(136,"Remember to allow your runner to run untagged jobs, else you need to define the tags in .gitlab-ci.yml later."),e.qZA(),e.qZA(),e.qZA(),e.TgZ(137,"h3"),e._uU(138,".gitlab-ci.yml"),e.qZA(),e.TgZ(139,"ul"),e.TgZ(140,"li"),e.TgZ(141,"a",10),e._uU(142,"Main Reference"),e.qZA(),e.qZA(),e.TgZ(143,"li"),e._uU(144,"The most common terms to get familiar with"),e.qZA(),e.TgZ(145,"ul"),e.TgZ(146,"li"),e._uU(147,"Pipeline"),e.qZA(),e.TgZ(148,"ul"),e.TgZ(149,"li"),e._uU(150,"Is the top-level component of continuous integration, delivery, and deployment."),e.qZA(),e.TgZ(151,"li"),e._uU(152,"Comprises of Stages & Jobs"),e.qZA(),e.TgZ(153,"li"),e._uU(154,"If any job fails, the pipeline is marked as failed and jobs in later stages do not start. Jobs in the current stage are not stopped and continue to run."),e.qZA(),e.qZA(),e.TgZ(155,"li"),e._uU(156,"Stages"),e.qZA(),e.TgZ(157,"ul"),e.TgZ(158,"li"),e._uU(159,"Stages are groups of indenpendent jobs."),e.qZA(),e.TgZ(160,"li"),e._uU(161,"Stages are executed sequentially"),e.qZA(),e.qZA(),e.TgZ(162,"li"),e._uU(163,"Jobs"),e.qZA(),e.TgZ(164,"ul"),e.TgZ(165,"li"),e._uU(166,"Jobs are picked up by runners and executed in the environment of the runner"),e.qZA(),e.TgZ(167,"li"),e._uU(168,"If a job is not assigned to a stage, the test stage is used by default."),e.qZA(),e.TgZ(169,"li"),e._uU(170,"Multiple jobs in the same stage are executed in parallel (if there are enough concurrent runners)"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(171,"li"),e.TgZ(172,"a",11),e._uU(173,"Keyword reference for the .gitlab-ci.yml file"),e.qZA(),e.qZA(),e.TgZ(174,"ul"),e.TgZ(175,"li"),e._uU(176,"There are 4 types of Global Keywords"),e.qZA(),e.TgZ(177,"ul"),e.TgZ(178,"li"),e._uU(179,"default"),e.qZA(),e.TgZ(180,"ul"),e.TgZ(181,"li"),e._uU(182,"For you to set global defaults for job keywords such as image, before_script, cache."),e.qZA(),e.qZA(),e.TgZ(183,"li"),e._uU(184,"stages"),e.qZA(),e.TgZ(185,"ul"),e.TgZ(186,"li"),e._uU(187,"For you to define the stages sequence of the pipelin"),e.qZA(),e.TgZ(188,"li"),e._uU(189,"If stages is not defined in the .gitlab-ci.yml file, the default pipeline stages are:"),e.qZA(),e.TgZ(190,"ul"),e.TgZ(191,"li"),e._uU(192,".pre"),e.qZA(),e.TgZ(193,"li"),e._uU(194,"build"),e.qZA(),e.TgZ(195,"li"),e._uU(196,"test"),e.qZA(),e.TgZ(197,"li"),e._uU(198,"deploy"),e.qZA(),e.TgZ(199,"li"),e._uU(200,".post"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(201,"li"),e._uU(202,"workflow"),e.qZA(),e.TgZ(203,"ul"),e.TgZ(204,"li"),e._uU(205,"For you to control the pipeline behaviour such as modifying a variable when a condition is met"),e.qZA(),e.qZA(),e.TgZ(206,"li"),e._uU(207,"include"),e.qZA(),e.TgZ(208,"ul"),e.TgZ(209,"li"),e._uU(210,"For you to include external YAML files in your CI/CD configuration"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(211,"li"),e._uU(212,"Before proceeding with job keywords, let's have a look at a simple example first: "),e.qZA(),e.TgZ(213,"pre"),e._uU(214,"                            "),e.TgZ(215,"code"),e._uU(216,'\n    default: \n        image: trion/ng-cli\n\n    stages:\n        - dependencies\n        - build\n        - test\n        - deploy\n\n    install_dependencies:\n        stage: dependencies\n        script:\n          - echo "Current stage -> dependencies"\n          - npm ci\n        only:\n          changes:\n            - package-lock.json\n            - package.json\n\n    build_project:\n        stage: build\n        artifacts:\n            paths:\n                - dist\n            expire_in: 1 hour\n        before_script:\n            - npm install -g @angular/cli@11.2.14\n            - npm link @angular/cli\n        only:\n            refs:\n              - master\n        script: \n            - echo "Current stage -> build"\n            - ng build --prod\n\n    test1:\n        stage: test\n        script: \n            - echo "Current stage -> test"\n            - echo "Running test1"\n\n    test2:\n        stage: test\n        script: \n            - echo "Current stage -> test"\n            - echo "Running test2"\n\n    deploy_project:\n        stage: deploy\n        script:\n            - echo "Current stage -> deploy"\n            - firebase deploy --token $FIREBASE_TOKEN\n                            '),e.qZA(),e._uU(217,"\n                        "),e.qZA(),e.TgZ(218,"li"),e._uU(219,"Let's categorize the keywords above:"),e.qZA(),e.TgZ(220,"ul"),e.TgZ(221,"li"),e._uU(222,"The following are "),e.TgZ(223,"span",12),e._uU(224,"global keywords"),e.qZA(),e.qZA(),e.TgZ(225,"ul"),e.TgZ(226,"li"),e._uU(227,"default"),e.qZA(),e.TgZ(228,"li"),e._uU(229,"stages"),e.qZA(),e.qZA(),e.TgZ(230,"li"),e._uU(231,"The following are "),e.TgZ(232,"span",13),e._uU(233,"job keywords"),e.qZA(),e.qZA(),e.TgZ(234,"ul"),e.TgZ(235,"li"),e._uU(236,"stage"),e.qZA(),e.TgZ(237,"li"),e._uU(238,"artifacts"),e.qZA(),e.TgZ(239,"li"),e._uU(240,"before_script"),e.qZA(),e.TgZ(241,"li"),e._uU(242,"only"),e.qZA(),e.TgZ(243,"li"),e._uU(244,"script"),e.qZA(),e.qZA(),e.TgZ(245,"li"),e._uU(246,"The following are simply the names of the jobs"),e.qZA(),e.TgZ(247,"ul"),e.TgZ(248,"li"),e._uU(249,"build_project"),e.qZA(),e.TgZ(250,"li"),e._uU(251,"tes1"),e.qZA(),e.TgZ(252,"li"),e._uU(253,"test2"),e.qZA(),e.TgZ(254,"li"),e._uU(255,"deploy_project"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(256,"li"),e._uU(257,"The example above shows that:"),e.qZA(),e.TgZ(258,"ul"),e.TgZ(259,"li"),e._uU(260,'The docker image used for the jobs is "trion/ng-cli".'),e.qZA(),e.TgZ(261,"li"),e._uU(262,"There are 3 stages in this pipeline, which are "),e.TgZ(263,"span",14),e._uU(264,"build"),e.qZA(),e._uU(265,", "),e.TgZ(266,"span",14),e._uU(267,"test"),e.qZA(),e._uU(268," and "),e.TgZ(269,"span",14),e._uU(270,"deploy"),e.qZA(),e.qZA(),e.TgZ(271,"li"),e._uU(272,"The "),e.TgZ(273,"span",15),e._uU(274,"install_dependencies"),e.qZA(),e._uU(275," job only runs when there are changes in package.json file or .package-lock.json file."),e.qZA(),e.TgZ(276,"li"),e._uU(277,"Side Note: According to this "),e.TgZ(278,"a",16),e._uU(279,"blog post"),e.qZA(),e._uU(280,", it is better to use "),e.TgZ(281,"span",17),e._uU(282,"npm ci"),e.qZA(),e._uU(283," instead of "),e.TgZ(284,"span",17),e._uU(285,"npm install"),e.qZA(),e._uU(286," so that an exactly reproducible version resolution takes place "),e.qZA(),e.TgZ(287,"li"),e._uU(288,"The "),e.TgZ(289,"span",15),e._uU(290,"build_project"),e.qZA(),e._uU(291," is a job, which "),e.TgZ(292,"ul"),e.TgZ(293,"li"),e._uU(294,"runs in "),e.TgZ(295,"span",14),e._uU(296,"build"),e.qZA(),e._uU(297," stage"),e.qZA(),e.TgZ(298,"li"),e._uU(299,"stores the artifacts of the job in /dist directory, for 1 hour only"),e.qZA(),e.TgZ(300,"li"),e._uU(301,'will run "npm install -g @angular/cli@11.2.14" and "npm link @angular/cli" before running the main script'),e.qZA(),e.TgZ(302,"li"),e._uU(303,"is executed only if the branch is master branch"),e.qZA(),e.TgZ(304,"li"),e._uU(305,'the main script of this job is "ng build --prod"'),e.qZA(),e.qZA(),e.qZA(),e.TgZ(306,"li"),e._uU(307,"The "),e.TgZ(308,"span",15),e._uU(309,"test1"),e.qZA(),e._uU(310," and "),e.TgZ(311,"span",15),e._uU(312,"test2"),e.qZA(),e._uU(313," jobs will run in parallel as they are under same stage."),e.qZA(),e.TgZ(314,"li"),e._uU(315,"The "),e.TgZ(316,"span",15),e._uU(317,"deploy_project"),e.qZA(),e._uU(318," job's script is making use of variable $FIREBASE_TOKEN"),e.qZA(),e.TgZ(319,"li"),e._uU(320,"Since the $FIREBASE_TOKEN is not defined in this .gitlab-ci.yml file, it is most probably defined through GitLab CICD Settings"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(321,"li"),e._uU(322,"Take note that: Improper indentation in the .gitlab-ci.yml file will lead to errors."),e.qZA(),e.qZA(),e._UZ(323,"mat-divider"),e.TgZ(324,"h2"),e._uU(325,"Environments and deployments"),e.qZA(),e.TgZ(326,"ul"),e.TgZ(327,"li"),e._uU(328,"Environments describe where code is deployed."),e.qZA(),e.TgZ(329,"li"),e._uU(330,"Each time GitLab CI/CD deploys a version of code to an environment, a deployment is created."),e.qZA(),e.TgZ(331,"li"),e._uU(332,"Gitlab:"),e.qZA(),e.TgZ(333,"ul"),e.TgZ(334,"li"),e._uU(335,"Provides a full history of deployments to each environment."),e.qZA(),e.TgZ(336,"li"),e._uU(337,"Tracks your deployments, so you always know what is deployed on your servers."),e.qZA(),e.qZA(),e.TgZ(338,"li"),e._uU(339,"If you have a deployment service like Kubernetes associated with your project, utilize "),e.TgZ(340,"a",18),e._uU(341,"GitLab-Kubernates"),e.qZA(),e.qZA(),e.TgZ(342,"li"),e._uU(343,"There are two types of environments:"),e.qZA(),e.TgZ(344,"ul"),e.TgZ(345,"li"),e._uU(346,"Static environments have static names, like staging or production."),e.qZA(),e.TgZ(347,"li"),e._uU(348,"Dynamic environments have dynamic names. Dynamic environments are a fundamental part of "),e.TgZ(349,"a",19),e._uU(350,"Review apps"),e.qZA(),e._uU(351,"."),e.qZA(),e.qZA(),e.TgZ(352,"li"),e._uU(353,"To create a static environment:"),e.qZA(),e.TgZ(354,"ul"),e.TgZ(355,"li"),e._uU(356,"In your .gitlab-ci.yml file, specify a name for the environment and optionally, a URL, which determines the deployment URL. For example:"),e.qZA(),e.TgZ(357,"pre"),e._uU(358,"                        "),e.TgZ(359,"code"),e._uU(360,'\ndeploy_staging:\n    stage: deploy\n    script:\n        - echo "Deploy to staging server"\n    environment:\n        name: staging\n        url: https://staging.example.com\n                        '),e.qZA(),e._uU(361,"\n                    "),e.qZA(),e.TgZ(362,"li"),e._uU(363,"OR, you can add new environment through UI"),e.qZA(),e.TgZ(364,"ol"),e.TgZ(365,"li"),e._uU(366,"Go to your project >> Deployments >> Environments"),e.qZA(),e.TgZ(367,"li"),e._uU(368,"Select New environment"),e.qZA(),e.TgZ(369,"li"),e._uU(370,"Enter a name and external URL."),e.qZA(),e.TgZ(371,"li"),e._uU(372,"Save"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(373,"li"),e._uU(374,"You can create a job that requires someone to manually start the deployment. For example:"),e.qZA(),e.TgZ(375,"pre"),e._uU(376,"                "),e.TgZ(377,"code"),e._uU(378,'\ndeploy_prod:\n    stage: deploy\n    script:\n        - echo "Deploy to production server"\n    environment:\n        name: production\n        url: https://example.com\n    when: manual\n    rules:\n        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH         \n                '),e.qZA(),e._uU(379,"\n            "),e.qZA(),e.TgZ(380,"li"),e._uU(381,"For more details, refer to the "),e.TgZ(382,"a",20),e._uU(383,"full documentation"),e.qZA(),e.qZA(),e.qZA(),e._UZ(384,"mat-divider"),e.qZA())},directives:[_.xw,_.SQ,A],styles:["mat-panel-title[_ngcontent-%COMP%]{color:#000;text-align:left;line-height:18px;display:block;position:relative;padding-left:0!important;text-transform:uppercase}mat-expansion-panel-header[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px}mat-expansion-panel-body[_ngcontent-%COMP%]{padding-bottom:0!important}mat-expansion-panel-header[_ngcontent-%COMP%]:hover{background-color:#e9e9e9}mat-expansion-panel[_ngcontent-%COMP%]{color:#535eda;box-shadow:#06182c66 0 0 0 2px,#06182ca6 0 4px 6px -1px,#ffffff14 0 1px inset}p[_ngcontent-%COMP%]{text-align:justify}.listItem[_ngcontent-%COMP%]{text-transform:unset;white-space:normal;line-height:1.2rem;font-size:1rem;width:100%;min-height:30px;text-align:left;background-color:transparent;color:#000;padding-top:5px;padding-bottom:5px}.listItem[_ngcontent-%COMP%]:hover{background-color:#e9e9e9;color:#535eda;font-style:italic}mat-drawer[_ngcontent-%COMP%]{width:300px}#sideDrawerControl[_ngcontent-%COMP%]{width:100%;text-align:center;padding-top:3px}@media screen and (max-width: 420px){#sideDrawer[_ngcontent-%COMP%]{width:200px!important}}.technicalNotesRouterLinkActive[_ngcontent-%COMP%]{background-color:#838383;color:#535eda;font-weight:bold}table[_ngcontent-%COMP%]{overflow:auto;display:block;border:solid;border-color:gray;border-radius:15px}th[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important;color:#000;font-weight:bold}td[_ngcontent-%COMP%]{padding:5px 15px!important;text-align:center!important}li[_ngcontent-%COMP%]{text-align:justify}.floatingIconDiv[_ngcontent-%COMP%]{position:fixed;padding:0;bottom:30px;right:30px;background-color:#535eda;color:#000;border-radius:50%;text-align:center;box-shadow:2px 2px 3px #999;cursor:pointer}"]}),n})()},{path:"miscellaneuos/CMakeNotes",component:(()=>{class n{constructor(){}ngOnInit(){}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-cmake-notes"]],decls:257,vars:0,consts:[["fxLayout","column","fxLayoutGap","10px"],[2,"font-style","italic","font-weight","bold"],["href","https://cmake.org/download/","target","_blank","rel","noopener noreferrer"],["href","https://www.msys2.org/","target","_blank","rel","noopener noreferrer"],[2,"font-style","italic"],[2,"display","flex","flex-direction","column","justify-content","center","align-items","center"],["src","http://faculty.cs.niu.edu/~mcmahon/CS241/Notes/Images/build.png",2,"max-height","600px"],[1,"CLI-font"],["href","https://www.geeksforgeeks.org/difference-between-gcc-and-g/","target","_blank","rel","noopener noreferrer"],["href","https://kubasejdak.com/19-reasons-why-cmake-is-actually-awesome#1-cmake-is-cross-platform","target","_blank","rel","noreferrer noopener"],["href","https://cmake.org/cmake/help/latest/guide/tutorial/index.html","target","_blank","rel","noreferrer noopener"]],template:function(t,i){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"h1"),e._uU(2,"CMake Notes"),e.qZA(),e.TgZ(3,"h2"),e._uU(4,"Introduction (Make & CMake)"),e.qZA(),e.TgZ(5,"ul"),e.TgZ(6,"li"),e.TgZ(7,"b"),e._uU(8,"Make"),e.qZA(),e._uU(9," is a "),e.TgZ(10,"span",1),e._uU(11,"cross platform build system"),e.qZA(),e._uU(12," originally "),e.TgZ(13,"span",1),e._uU(14,"for Unix like systems"),e.qZA(),e.qZA(),e.TgZ(15,"li"),e.TgZ(16,"b"),e._uU(17,"CMake"),e.qZA(),e._uU(18," is a "),e.TgZ(19,"span",1),e._uU(20,"cross-platform free and open-source software"),e.qZA(),e._uU(21," for build automation, testing, packaging and installation of software by using a compiler-independent method"),e.qZA(),e.TgZ(22,"li"),e._uU(23,"CMake is not a build system, but rather it generates system build files for IDEs/build tools such as Visual Studio, XCode, Unix Make, Eclipse CDT etc."),e.qZA(),e.TgZ(24,"li"),e._uU(25,"CMake "),e.TgZ(26,"b"),e._uU(27,"does not"),e.qZA(),e._uU(28," compile (i.e. build) the sources"),e.qZA(),e.TgZ(29,"li"),e._uU(30,"You do not need to learn how to write Makefile if you know how to use CMake"),e.qZA(),e.qZA(),e._UZ(31,"mat-divider"),e.TgZ(32,"h3"),e._uU(33,"Installing CMake"),e.qZA(),e.TgZ(34,"ul"),e.TgZ(35,"li"),e._uU(36,"The installers or CMake binaries can be downloaded from "),e.TgZ(37,"a",2),e._uU(38,"here"),e.qZA(),e.qZA(),e.qZA(),e._UZ(39,"mat-divider"),e.TgZ(40,"h3"),e._uU(41,"Installing make, gcc, g++"),e.qZA(),e.TgZ(42,"ul"),e.TgZ(43,"li"),e._uU(44,"Follow the instructions "),e.TgZ(45,"a",3),e._uU(46,"here"),e.qZA(),e.qZA(),e.TgZ(47,"li"),e._uU(48,"After the installation, you should add "),e.TgZ(49,"span",4),e._uU(50,"C:\\msys64\\mingw64\\bin"),e.qZA(),e._uU(51," and "),e.TgZ(52,"span",4),e._uU(53,"C:\\msys64\\usr\\bin"),e.qZA(),e._uU(54," into your environment variables."),e.qZA(),e.qZA(),e._UZ(55,"mat-divider"),e.TgZ(56,"h3"),e._uU(57,"The C++ Build Process"),e.qZA(),e.TgZ(58,"div",5),e._UZ(59,"img",6),e.TgZ(60,"span",4),e._uU(61,"Source of image: http://faculty.cs.niu.edu/~mcmahon/CS241/Notes/build.html"),e.qZA(),e.qZA(),e._UZ(62,"mat-divider"),e.TgZ(63,"h3"),e._uU(64,"Without Make"),e.qZA(),e.TgZ(65,"ul"),e.TgZ(66,"li"),e._uU(67,"Let's say we have the following files"),e.qZA(),e.TgZ(68,"pre"),e._uU(69,"            "),e.TgZ(70,"code"),e._uU(71,'\n    // main.cpp\n    #include "myfunctions.h"\n    \n    int main() {\n        print_hello();\n        return 0;\n    }\n            '),e.qZA(),e._uU(72,"\n        "),e.qZA(),e.TgZ(73,"pre"),e._uU(74,"            "),e.TgZ(75,"code"),e._uU(76,"\n    // myfunctions.h\n    #if !defined( EXAMPLE_H )\n    #define EXAMPLE_H\n    void print_hello();\n    #endif\n            "),e.qZA(),e._uU(77,"\n        "),e.qZA(),e.TgZ(78,"pre"),e._uU(79,"            "),e.TgZ(80,"code"),e._uU(81,'\n    // hello.cpp\n    #include <iostream>\n\n    #include "myfunctions.h"\n    \n    void print_hello() {\n        std::cout << "Hello World!";\n    }\n            '),e.qZA(),e._uU(82,"\n        "),e.qZA(),e.TgZ(83,"li"),e._uU(84,"To compile these files and get an executable, we can make use of "),e.TgZ(85,"b"),e._uU(86,"gcc"),e.qZA(),e._uU(87," or "),e.TgZ(88,"b"),e._uU(89,"g++"),e.qZA(),e._uU(90," compilers"),e.qZA(),e.TgZ(91,"ul"),e.TgZ(92,"li"),e.TgZ(93,"span",7),e._uU(94,"gcc main.cpp hello.cpp -lstdc++ -o hello"),e.qZA(),e.qZA(),e.TgZ(95,"li"),e._uU(96,"OR "),e.TgZ(97,"span",7),e._uU(98,"g++ -Wall -Wextra -Werror main.cpp hello.cpp -o hello"),e.qZA(),e.qZA(),e.TgZ(99,"li"),e.TgZ(100,"span",4),e._uU(101,"Side Note: The "),e.TgZ(102,"span",7),e._uU(103,"-lstdc++"),e.qZA(),e._uU(104," is needed for gcc since it doesn't automatically link the std C++ libraries"),e.qZA(),e.qZA(),e.TgZ(105,"li"),e.TgZ(106,"span",4),e._uU(107,"Side Note: The "),e.TgZ(108,"span",7),e._uU(109,"-Wall -Wextra -Werror"),e.qZA(),e._uU(110," are just optional options for displaying warning and error messages"),e.qZA(),e.qZA(),e.TgZ(111,"li"),e._uU(112,"For more differences between gcc and g++, refer to "),e.TgZ(113,"a",8),e._uU(114,"this"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(115,"li"),e._uU(116,"The above actions will be troublesome when we want to manage a large project with lots of files. It is very tedious to type all the files one by one."),e.qZA(),e.qZA(),e._UZ(117,"mat-divider"),e.TgZ(118,"h3"),e._uU(119,"With Make"),e.qZA(),e.TgZ(120,"ul"),e.TgZ(121,"li"),e._uU(122,"Now, we can write a Makefile (filename is Makefile also) to solve the problem above"),e.qZA(),e.TgZ(123,"li"),e._uU(124,"The following is an example of Makefile for the files above:"),e.qZA(),e.TgZ(125,"pre"),e._uU(126,"            "),e.TgZ(127,"code"),e._uU(128,"\n    CC = g++\n\n    hello: main.o hello.o\n        $(CC) main.o hello.o -o hello\n\n    main.o: main.cpp myfunctions.h\n        $(CC) -c main.cpp\n\n    hello.o: hello.cpp myfunctions.h\n        $(CC) -c hello.cpp\n\n    clean:\n        -rm -rf *.o *.exe\n            "),e.qZA(),e._uU(129,"\n        "),e.qZA(),e.TgZ(130,"li"),e._uU(131,"Now the directory tree looks like this"),e.qZA(),e.TgZ(132,"ul"),e.TgZ(133,"li"),e._uU(134,"hello.cpp"),e.qZA(),e.TgZ(135,"li"),e._uU(136,"main.cpp"),e.qZA(),e.TgZ(137,"li"),e._uU(138,"myfunctions.h"),e.qZA(),e.TgZ(139,"li"),e._uU(140,"Makefile"),e.qZA(),e.qZA(),e.TgZ(141,"li"),e._uU(142,"When you run "),e.TgZ(143,"span",7),e._uU(144,"make"),e.qZA(),e._uU(145," only, the first "),e.TgZ(146,"span",4),e._uU(147,"rule"),e.qZA(),e._uU(148," will be run."),e.qZA(),e.TgZ(149,"li"),e._uU(150,"If you run "),e.TgZ(151,"span",7),e._uU(152,"make hello.o"),e.qZA(),e._uU(153,", it will execute "),e.TgZ(154,"span",7),e._uU(155,"g++ -c hello.cpp"),e.qZA(),e._uU(156," and then generate hello.o"),e.qZA(),e.TgZ(157,"li"),e._uU(158,"If you run "),e.TgZ(159,"span",7),e._uU(160,"make clean"),e.qZA(),e._uU(161,", all the .exe and .o files will be removed"),e.qZA(),e.TgZ(162,"li"),e._uU(163,"This is just an example of how Makefile solved the problem of having to retype the commands everytime when you want to compile the source files. Basically you only need to run "),e.TgZ(164,"span",7),e._uU(165,"make"),e.qZA(),e._uU(166," if you want to recompile your source files, instead of typing "),e.TgZ(167,"span",7),e._uU(168,"g++ main.cpp hello.cpp -o hello"),e.qZA(),e._uU(169," again and again."),e.qZA(),e.qZA(),e._UZ(170,"mat-divider"),e.TgZ(171,"h3"),e._uU(172,"Why CMake is needed?"),e.qZA(),e.TgZ(173,"ul"),e.TgZ(174,"li"),e._uU(175,"There are several different build systems out there, such as Make, Ninja, Visual Studio etc, and also different compilers such as g++, gcc, clang etc. "),e.qZA(),e.TgZ(176,"li"),e._uU(177,"It became hard to maintain if users want to support different platforms, compilers and scenarios etc."),e.qZA(),e.TgZ(178,"li"),e._uU(179,"Hence, people started to introduce meta build system (such as CMake) to generate configuration files for other existing build systems."),e.qZA(),e.TgZ(180,"li"),e._uU(181,"With CMake, there is no need to write Makefiles, configure Visual Studio projects, create custom Bash or batch files etc."),e.qZA(),e.TgZ(182,"li"),e._uU(183,"For more reasons why CMake is awesome, have a look at "),e.TgZ(184,"a",9),e._uU(185,"this"),e.qZA(),e._uU(186,"."),e.qZA(),e.TgZ(187,"li"),e._uU(188,"For CMake tutorial, refer to the "),e.TgZ(189,"a",10),e._uU(190,"Official Tutorial"),e.qZA(),e._uU(191,"."),e.qZA(),e.qZA(),e._UZ(192,"mat-divider"),e.TgZ(193,"h3"),e._uU(194,"A basic example of using CMakeLists.txt"),e.qZA(),e.TgZ(195,"ol"),e.TgZ(196,"li"),e._uU(197,"Add a CMakeLists.txt file and copy paste the following content:"),e.qZA(),e.TgZ(198,"pre"),e._uU(199,"            "),e.TgZ(200,"code"),e._uU(201,"\n    cmake_minimum_required(VERSION 3.10)\n\n    # set the project name\n    project(CMakeTutorial VERSION 1.0)\n\n    # add the executable\n    add_executable(hello main.cpp hello.cpp)\n            "),e.qZA(),e._uU(202,"\n        "),e.qZA(),e.TgZ(203,"li"),e._uU(204,"Create a folder called 'build'. This is where we gonna keep the generated files. And this practice is called \"out-of-source build\", where we separate the generated files of the binary tree from the source files of the source tree"),e.qZA(),e.TgZ(205,"li"),e._uU(206,"Change directory to the build folder: "),e.TgZ(207,"span",7),e._uU(208,"cd build"),e.qZA(),e.qZA(),e.TgZ(209,"li"),e._uU(210,"cmake the parent directory: "),e.TgZ(211,"span",7),e._uU(212,"cmake .."),e.qZA(),e.qZA(),e.TgZ(213,"li"),e.TgZ(214,"span",4),e._uU(215,"Side Note: I run "),e.TgZ(216,"span",7),e._uU(217,'cmake .. -G "Visual Studio 12 2013"'),e.qZA(),e._uU(218," to specify the generator that I want to use, as my default generator is Visual Studio 14 2015, which is not properly installed."),e.qZA(),e.qZA(),e.TgZ(219,"li"),e._uU(220,"Now there should be some files in the build folder."),e.qZA(),e.TgZ(221,"li"),e._uU(222,"Just now we only generated the build files, but we haven't compiled yet."),e.qZA(),e.TgZ(223,"li"),e._uU(224,"For my case, my generated build files are specifically for Visual Studio 12 2013."),e.qZA(),e.TgZ(225,"li"),e._uU(226,"Now, we can run "),e.TgZ(227,"span",7),e._uU(228,"cmake --build ."),e.qZA(),e._uU(229," to build(compile) it."),e.qZA(),e.TgZ(230,"li"),e._uU(231,"Then you will see a hello.exe file in Debug folder. You can try to run it."),e.qZA(),e.TgZ(232,"li"),e._uU(233,"Let's try to generate build files for Unix Make, before that you need to delete the build folder first. (PS: this shows how useful out-of-source build is)"),e.qZA(),e.TgZ(234,"li"),e._uU(235,"Now create an empty build folder again, and cd into it."),e.qZA(),e.TgZ(236,"li"),e._uU(237,"This time let's generate build files for Unix Make using "),e.TgZ(238,"span",7),e._uU(239,'cmake .. -G "Unix Makefiles"'),e.qZA(),e.qZA(),e.TgZ(240,"li"),e.TgZ(241,"span",4),e._uU(242,"Side Note: You can use "),e.TgZ(243,"span",7),e._uU(244,"cmake --help"),e.qZA(),e._uU(245," to check the available list of generators"),e.qZA(),e.qZA(),e.TgZ(246,"li"),e._uU(247,"This time you will see some different files are generated (more specifically, Makefiles are generated instead of .vsproj)"),e.qZA(),e.TgZ(248,"li"),e._uU(249,"Now, let's compile it using Make: "),e.TgZ(250,"span",7),e._uU(251,"make"),e.qZA(),e.qZA(),e.TgZ(252,"li"),e._uU(253,"You will notice that hello.exe is generated as well."),e.qZA(),e.TgZ(254,"li"),e._uU(255,"SUMMARY: This small tutorial demonstrates how CMakeLists.txt is useful to easily generate build files for different platforms."),e.qZA(),e.qZA(),e._UZ(256,"mat-divider"),e.qZA())},directives:[_.xw,_.SQ,A],styles:[""]}),n})()}]}];let Tn=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[b.Bz.forChild(fn)],b.Bz]}),n})();var bn=d(5566),An=d(3738);d(4402),d(6215),d(5639);let Nn=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[L.Cl]]}),n})(),ti=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[Nn,Z.BQ],Z.BQ]}),n})();var ii=d(9054);let oi=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[k.ez,bn.o9,Tn,Ut,K.SJ,C.ot,An.QW,ii.Ps,ti,dn,vt,V.uH]]}),n})()}}]);